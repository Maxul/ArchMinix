!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS_SET	sys/linker_set.h	75;"	d
ADD	arpa/nameser_compat.h	138;"	d
ADD	netinet/in_cksum_i386.h	20;"	d
ADD	netinet/in_cksum_powerpc.h	23;"	d
ADD16	netinet/in_cksum_arm.h	99;"	d
ADD16	netinet/in_cksum_sparc.h	151;"	d
ADD32	netinet/in_cksum_arm.h	87;"	d
ADD32	netinet/in_cksum_sparc.h	140;"	d
ADD4	netinet/in_cksum_arm.h	116;"	d
ADD4	netinet/in_cksum_sparc.h	163;"	d
ADD64	netinet/in_cksum_arm.h	69;"	d
ADD64	netinet/in_cksum_sparc.h	121;"	d
ADD8	netinet/in_cksum_arm.h	108;"	d
ADD8	netinet/in_cksum_sparc.h	158;"	d
ADDBYTE	netinet/in_cksum_arm.h	135;"	d
ADDBYTE	netinet/in_cksum_sparc.h	172;"	d
ADDC	netinet/in_cksum_i386.h	22;"	d
ADDC	netinet/in_cksum_powerpc.h	27;"	d
ADDCARRY	netinet/in_cksum.c	79;"	d	file:
ADDCARRY	netinet/in_cksum_arm.h	133;"	d
ADDCARRY	netinet/in_cksum_i386.h	12;"	d
ADDCARRY	netinet/in_cksum_i386.h	13;"	d
ADDCARRY	netinet/in_cksum_powerpc.h	12;"	d
ADDCARRY	netinet/in_cksum_powerpc.h	13;"	d
ADDCARRY	netinet/in_cksum_sparc.h	170;"	d
ADDDOMAIN	kern/uipc_domain.c	73;"	d	file:
ADDSHORT	netinet/in_cksum_arm.h	136;"	d
ADDSHORT	netinet/in_cksum_sparc.h	173;"	d
ADD_AND_ADVANCE	netinet/in_cksum_nios2.h	151;"	d
ADVANCE	net/rtsock.c	373;"	d	file:
ADVANCE	netinet/in_cksum_arm.h	137;"	d
ADVANCE	netinet/in_cksum_sparc.h	174;"	d
ADVANCEML	netinet/in_cksum_arm.h	138;"	d
AF_APPLETALK	sys/socket.h	157;"	d
AF_CCITT	sys/socket.h	151;"	d
AF_CHAOS	sys/socket.h	145;"	d
AF_CNT	sys/socket.h	162;"	d
AF_COIP	sys/socket.h	161;"	d
AF_DATAKIT	sys/socket.h	150;"	d
AF_DECnet	sys/socket.h	153;"	d
AF_DLI	sys/socket.h	154;"	d
AF_E164	sys/socket.h	168;"	d
AF_ECMA	sys/socket.h	149;"	d
AF_HYLINK	sys/socket.h	156;"	d
AF_IMPLINK	sys/socket.h	143;"	d
AF_INET	sys/socket.h	141;"	d
AF_INET6	sys/socket.h	171;"	d
AF_IPX	sys/socket.h	164;"	d
AF_ISDN	sys/socket.h	167;"	d
AF_ISO	sys/socket.h	147;"	d
AF_LAT	sys/socket.h	155;"	d
AF_LINK	sys/socket.h	159;"	d
AF_LOCAL	sys/socket.h	138;"	d
AF_MAX	sys/socket.h	173;"	d
AF_NETBIOS	sys/socket.h	146;"	d
AF_OSI	sys/socket.h	148;"	d
AF_PUP	sys/socket.h	144;"	d
AF_ROUTE	sys/socket.h	158;"	d
AF_SIP	sys/socket.h	165;"	d
AF_SNA	sys/socket.h	152;"	d
AF_UNIX	sys/socket.h	140;"	d
AF_UNSPEC	sys/socket.h	136;"	d
ALIGN	libc/getifaddrs.c	73;"	d	file:
ALIGNBYTES	libc/getifaddrs.c	70;"	d	file:
ALL_VIFS	netinet/ip_mroute.h	86;"	d
ANAR_10	dev/mii/mii.h	132;"	d
ANAR_10_FD	dev/mii/mii.h	131;"	d
ANAR_ACK	dev/mii/mii.h	125;"	d
ANAR_CSMA	dev/mii/mii.h	133;"	d
ANAR_FC	dev/mii/mii.h	127;"	d
ANAR_NP	dev/mii/mii.h	124;"	d
ANAR_RF	dev/mii/mii.h	126;"	d
ANAR_T4	dev/mii/mii.h	128;"	d
ANAR_TX	dev/mii/mii.h	130;"	d
ANAR_TX_FD	dev/mii/mii.h	129;"	d
ANAR_X_FD	dev/mii/mii.h	135;"	d
ANAR_X_HD	dev/mii/mii.h	136;"	d
ANAR_X_PAUSE_ASYM	dev/mii/mii.h	139;"	d
ANAR_X_PAUSE_NONE	dev/mii/mii.h	137;"	d
ANAR_X_PAUSE_SYM	dev/mii/mii.h	138;"	d
ANAR_X_PAUSE_TOWARDS	dev/mii/mii.h	140;"	d
ANER_LPAN	dev/mii/mii.h	169;"	d
ANER_LPNP	dev/mii/mii.h	166;"	d
ANER_MLF	dev/mii/mii.h	165;"	d
ANER_NP	dev/mii/mii.h	167;"	d
ANER_PAGE_RX	dev/mii/mii.h	168;"	d
ANLPAR_10	dev/mii/mii.h	152;"	d
ANLPAR_10_FD	dev/mii/mii.h	151;"	d
ANLPAR_ACK	dev/mii/mii.h	145;"	d
ANLPAR_CSMA	dev/mii/mii.h	153;"	d
ANLPAR_FC	dev/mii/mii.h	147;"	d
ANLPAR_NP	dev/mii/mii.h	144;"	d
ANLPAR_RF	dev/mii/mii.h	146;"	d
ANLPAR_T4	dev/mii/mii.h	148;"	d
ANLPAR_TX	dev/mii/mii.h	150;"	d
ANLPAR_TX_FD	dev/mii/mii.h	149;"	d
ANLPAR_X_FD	dev/mii/mii.h	155;"	d
ANLPAR_X_HD	dev/mii/mii.h	156;"	d
ANLPAR_X_PAUSE_ASYM	dev/mii/mii.h	160;"	d
ANLPAR_X_PAUSE_MASK	dev/mii/mii.h	157;"	d
ANLPAR_X_PAUSE_NONE	dev/mii/mii.h	158;"	d
ANLPAR_X_PAUSE_SYM	dev/mii/mii.h	159;"	d
ANLPAR_X_PAUSE_TOWARDS	dev/mii/mii.h	161;"	d
ARPHRD_ARCNET	net/if_arp.h	53;"	d
ARPHRD_ETHER	net/if_arp.h	51;"	d
ARPHRD_FRELAY	net/if_arp.h	54;"	d
ARPHRD_IEEE1394	net/if_arp.h	55;"	d
ARPHRD_IEEE802	net/if_arp.h	52;"	d
ARPOP_INVREPLY	net/if_arp.h	65;"	d
ARPOP_INVREQUEST	net/if_arp.h	64;"	d
ARPOP_REPLY	net/if_arp.h	61;"	d
ARPOP_REQUEST	net/if_arp.h	60;"	d
ARPOP_REVREPLY	net/if_arp.h	63;"	d
ARPOP_REVREQUEST	net/if_arp.h	62;"	d
ASSERT_MSG_TIME	netinet/ip_mroute.c	311;"	d	file:
ATF_COM	net/if_arp.h	97;"	d
ATF_INUSE	net/if_arp.h	96;"	d
ATF_PERM	net/if_arp.h	98;"	d
ATF_PUBL	net/if_arp.h	99;"	d
ATF_USETRAILERS	net/if_arp.h	100;"	d
AUTH_BADCRED	nfs/rpcv2.h	85;"	d
AUTH_BADVERF	nfs/rpcv2.h	87;"	d
AUTH_OK	nfs/rpcv2.h	84;"	d
AUTH_REJECTCRED	nfs/rpcv2.h	86;"	d
AUTH_REJECTVERF	nfs/rpcv2.h	88;"	d
AUTH_TOOWEAK	nfs/rpcv2.h	89;"	d
Aerror	libc/res_send.c	/^    Aerror($/;"	f	file:
Aerror	libc/res_send.c	131;"	d	file:
AskedForGot	libc/gethostbydns.c	/^static const char AskedForGot[] =$/;"	v	file:
Asm	netinet/in_cksum_sparc.h	120;"	d
Assert	libc/base64.c	61;"	d	file:
BCMP	net/slcompress.c	65;"	d	file:
BCOPY	net/slcompress.c	66;"	d	file:
BIND_4_COMPAT	arpa/nameser.h	60;"	d
BIND_4_COMPAT	libc/res_comp.c	81;"	d	file:
BIND_UPDATE	libc/res_config.h	8;"	d
BIOCFLUSH	net/bpf.h	102;"	d
BIOCGBLEN	net/bpf.h	99;"	d
BIOCGDLT	net/bpf.h	104;"	d
BIOCGETIF	net/bpf.h	105;"	d
BIOCGRSIG	net/bpf.h	112;"	d
BIOCGRTIMEOUT	net/bpf.h	108;"	d
BIOCGSTATS	net/bpf.h	109;"	d
BIOCIMMEDIATE	net/bpf.h	110;"	d
BIOCPROMISC	net/bpf.h	103;"	d
BIOCSBLEN	net/bpf.h	100;"	d
BIOCSETF	net/bpf.h	101;"	d
BIOCSETIF	net/bpf.h	106;"	d
BIOCSRSIG	net/bpf.h	113;"	d
BIOCSRTIMEOUT	net/bpf.h	107;"	d
BIOCVERSION	net/bpf.h	111;"	d
BLK_BYTECOUNT	arpa/ftp.h	107;"	d
BLK_EOF	arpa/ftp.h	103;"	d
BLK_EOR	arpa/ftp.h	102;"	d
BLK_ERRORS	arpa/ftp.h	104;"	d
BLK_RESTART	arpa/ftp.h	105;"	d
BMCR_AUTOEN	dev/mii/mii.h	59;"	d
BMCR_CTEST	dev/mii/mii.h	64;"	d
BMCR_FDX	dev/mii/mii.h	63;"	d
BMCR_ISO	dev/mii/mii.h	61;"	d
BMCR_LOOP	dev/mii/mii.h	57;"	d
BMCR_PDOWN	dev/mii/mii.h	60;"	d
BMCR_RESET	dev/mii/mii.h	56;"	d
BMCR_S10	dev/mii/mii.h	67;"	d
BMCR_S100	dev/mii/mii.h	68;"	d
BMCR_S1000	dev/mii/mii.h	69;"	d
BMCR_SPEED	dev/mii/mii.h	71;"	d
BMCR_SPEED0	dev/mii/mii.h	58;"	d
BMCR_SPEED1	dev/mii/mii.h	65;"	d
BMCR_STARTNEG	dev/mii/mii.h	62;"	d
BMSR_100T2FDX	dev/mii/mii.h	79;"	d
BMSR_100T2HDX	dev/mii/mii.h	80;"	d
BMSR_100T4	dev/mii/mii.h	74;"	d
BMSR_100TXFDX	dev/mii/mii.h	75;"	d
BMSR_100TXHDX	dev/mii/mii.h	76;"	d
BMSR_10TFDX	dev/mii/mii.h	77;"	d
BMSR_10THDX	dev/mii/mii.h	78;"	d
BMSR_ACOMP	dev/mii/mii.h	83;"	d
BMSR_ANEG	dev/mii/mii.h	85;"	d
BMSR_EXTCAP	dev/mii/mii.h	88;"	d
BMSR_EXTSTAT	dev/mii/mii.h	81;"	d
BMSR_JABBER	dev/mii/mii.h	87;"	d
BMSR_LINK	dev/mii/mii.h	86;"	d
BMSR_MEDIAMASK	dev/mii/mii.h	101;"	d
BMSR_MEDIA_TO_ANAR	dev/mii/mii.h	109;"	d
BMSR_MFPS	dev/mii/mii.h	82;"	d
BMSR_RFAULT	dev/mii/mii.h	84;"	d
BOOTP_COMPAT	rtems/rtems_bsdnet.h	27;"	d
BOOTP_COMPAT	rtems/rtems_bsdnet.h	34;"	d
BOOTP_MIN_LEN	nfs/bootp_subr.c	78;"	d	file:
BOUNDED_INCR	libc/gethostbydns.c	140;"	d	file:
BOUNDS_CHECK	libc/gethostbydns.c	149;"	d	file:
BPF_A	net/bpf.h	199;"	d
BPF_ABS	net/bpf.h	171;"	d
BPF_ADD	net/bpf.h	179;"	d
BPF_ALIGNMENT	net/bpf.h	57;"	d
BPF_ALU	net/bpf.h	159;"	d
BPF_AND	net/bpf.h	184;"	d
BPF_B	net/bpf.h	168;"	d
BPF_CLASS	net/bpf.h	154;"	d
BPF_DIV	net/bpf.h	182;"	d
BPF_H	net/bpf.h	167;"	d
BPF_IMM	net/bpf.h	170;"	d
BPF_IND	net/bpf.h	172;"	d
BPF_JA	net/bpf.h	188;"	d
BPF_JEQ	net/bpf.h	189;"	d
BPF_JGE	net/bpf.h	191;"	d
BPF_JGT	net/bpf.h	190;"	d
BPF_JMP	net/bpf.h	160;"	d
BPF_JSET	net/bpf.h	192;"	d
BPF_JUMP	net/bpf.h	220;"	d
BPF_K	net/bpf.h	194;"	d
BPF_LD	net/bpf.h	155;"	d
BPF_LDX	net/bpf.h	156;"	d
BPF_LEN	net/bpf.h	174;"	d
BPF_LSH	net/bpf.h	185;"	d
BPF_MAJOR_VERSION	net/bpf.h	96;"	d
BPF_MAXBUFSIZE	net/bpf.h	61;"	d
BPF_MAXINSNS	net/bpf.h	60;"	d
BPF_MEM	net/bpf.h	173;"	d
BPF_MEMWORDS	net/bpf.h	234;"	d
BPF_MINBUFSIZE	net/bpf.h	62;"	d
BPF_MINOR_VERSION	net/bpf.h	97;"	d
BPF_MISC	net/bpf.h	162;"	d
BPF_MISCOP	net/bpf.h	202;"	d
BPF_MODE	net/bpf.h	169;"	d
BPF_MSH	net/bpf.h	175;"	d
BPF_MUL	net/bpf.h	181;"	d
BPF_NEG	net/bpf.h	187;"	d
BPF_OP	net/bpf.h	178;"	d
BPF_OR	net/bpf.h	183;"	d
BPF_RELEASE	net/bpf.h	48;"	d
BPF_RET	net/bpf.h	161;"	d
BPF_RSH	net/bpf.h	186;"	d
BPF_RVAL	net/bpf.h	198;"	d
BPF_SIZE	net/bpf.h	165;"	d
BPF_SRC	net/bpf.h	193;"	d
BPF_ST	net/bpf.h	157;"	d
BPF_STMT	net/bpf.h	219;"	d
BPF_STX	net/bpf.h	158;"	d
BPF_SUB	net/bpf.h	180;"	d
BPF_TAX	net/bpf.h	203;"	d
BPF_TXA	net/bpf.h	204;"	d
BPF_W	net/bpf.h	166;"	d
BPF_WORDALIGN	net/bpf.h	58;"	d
BPF_X	net/bpf.h	195;"	d
BSD_CURRENT_VERSION	net/ppp_comp.h	135;"	d
BSD_MAKE_OPT	net/ppp_comp.h	136;"	d
BSD_MAX_BITS	net/ppp_comp.h	139;"	d
BSD_MIN_BITS	net/ppp_comp.h	138;"	d
BSD_NBITS	net/ppp_comp.h	133;"	d
BSD_VERSION	net/ppp_comp.h	134;"	d
BSS_SET	sys/linker_set.h	74;"	d
BUCKETINDX	sys/malloc.h	262;"	d
BYADDR	libc/getnetbydns.c	84;"	d	file:
BYNAME	libc/getnetbydns.c	85;"	d	file:
B_ADAPTOR	sys/reboot.h	80;"	d
B_ADAPTORMASK	sys/reboot.h	79;"	d
B_ADAPTORSHIFT	sys/reboot.h	78;"	d
B_CONTROLLER	sys/reboot.h	83;"	d
B_CONTROLLERMASK	sys/reboot.h	82;"	d
B_CONTROLLERSHIFT	sys/reboot.h	81;"	d
B_DEVMAGIC	sys/reboot.h	98;"	d
B_MAGICMASK	sys/reboot.h	97;"	d
B_PARTITION	sys/reboot.h	92;"	d
B_PARTITIONMASK	sys/reboot.h	91;"	d
B_PARTITIONSHIFT	sys/reboot.h	90;"	d
B_SLICE	sys/reboot.h	86;"	d
B_SLICEMASK	sys/reboot.h	85;"	d
B_SLICESHIFT	sys/reboot.h	84;"	d
B_TYPE	sys/reboot.h	95;"	d
B_TYPEMASK	sys/reboot.h	94;"	d
B_TYPESHIFT	sys/reboot.h	93;"	d
B_UNIT	sys/reboot.h	89;"	d
B_UNITMASK	sys/reboot.h	88;"	d
B_UNITSHIFT	sys/reboot.h	87;"	d
Base64	libc/base64.c	/^static const char Base64[] =$/;"	v	file:
Bcmp	net/radix.c	72;"	d	file:
Bcmp	net/radix.c	73;"	d	file:
Bcmp	net/radix.h	136;"	d
Bcmp	net/radix.h	143;"	d
Bcopy	net/radix.h	137;"	d
Bcopy	net/radix.h	144;"	d
Bzero	net/radix.h	138;"	d
Bzero	net/radix.h	145;"	d
CAN_RECONNECT	libc/res_send.c	126;"	d	file:
CBRK	sys/ttydefaults.h	79;"	d
CCOUNT	net/ppp_tty.c	166;"	d	file:
CCP_CODE	net/ppp_comp.h	117;"	d
CCP_CONFACK	net/ppp_comp.h	103;"	d
CCP_CONFREQ	net/ppp_comp.h	102;"	d
CCP_HDRLEN	net/ppp_comp.h	120;"	d
CCP_ID	net/ppp_comp.h	118;"	d
CCP_LENGTH	net/ppp_comp.h	119;"	d
CCP_MAX_OPTION_LENGTH	net/ppp_comp.h	112;"	d
CCP_OPT_CODE	net/ppp_comp.h	122;"	d
CCP_OPT_LENGTH	net/ppp_comp.h	123;"	d
CCP_OPT_MINLEN	net/ppp_comp.h	124;"	d
CCP_RESETACK	net/ppp_comp.h	107;"	d
CCP_RESETREQ	net/ppp_comp.h	106;"	d
CCP_TERMACK	net/ppp_comp.h	105;"	d
CCP_TERMREQ	net/ppp_comp.h	104;"	d
CC_GEQ	netinet/tcp_seq.h	58;"	d
CC_GT	netinet/tcp_seq.h	57;"	d
CC_INC	netinet/tcp_seq.h	61;"	d
CC_LEQ	netinet/tcp_seq.h	56;"	d
CC_LT	netinet/tcp_seq.h	55;"	d
CDISCARD	sys/ttydefaults.h	74;"	d
CDSUSP	sys/ttydefaults.h	70;"	d
CEOF	sys/ttydefaults.h	60;"	d
CEOL	sys/ttydefaults.h	61;"	d
CEOT	sys/ttydefaults.h	77;"	d
CERASE	sys/ttydefaults.h	62;"	d
CFLUSH	sys/ttydefaults.h	81;"	d
CHECK_SRVR_ADDR	libc/res_config.h	7;"	d
CILEN_BSD_COMPRESS	net/ppp_comp.h	130;"	d
CILEN_DEFLATE	net/ppp_comp.h	146;"	d
CILEN_PREDICTOR_1	net/ppp_comp.h	161;"	d
CILEN_PREDICTOR_2	net/ppp_comp.h	163;"	d
CINTR	sys/ttydefaults.h	63;"	d
CI_BSD_COMPRESS	net/ppp_comp.h	129;"	d
CI_DEFLATE	net/ppp_comp.h	144;"	d
CI_DEFLATE_DRAFT	net/ppp_comp.h	145;"	d
CI_PREDICTOR_1	net/ppp_comp.h	160;"	d
CI_PREDICTOR_2	net/ppp_comp.h	162;"	d
CKILL	sys/ttydefaults.h	65;"	d
CLNEXT	sys/ttydefaults.h	73;"	d
CLRSIG	sys/signalvar.h	92;"	d
CMIN	sys/ttydefaults.h	66;"	d
CMSG_DATA	sys/socket.h	338;"	d
CMSG_FIRSTHDR	sys/socket.h	347;"	d
CMSG_NXTHDR	sys/socket.h	341;"	d
CODE	sys/syslog.h	/^} CODE;$/;"	t	typeref:struct:_code
COMMON_END	netinet/tcp_usrreq.c	169;"	d	file:
COMMON_START	netinet/tcp_usrreq.c	159;"	d	file:
COMPAT_IPFW	netinet/ip_input.c	135;"	d	file:
COMPAT_IPFW	netinet/ip_input.c	136;"	d	file:
COMPAT_IPFW	netinet/ip_input.c	138;"	d	file:
COMPAT_IPFW	netinet/ip_output.c	63;"	d	file:
COMPAT_IPFW	netinet/ip_output.c	64;"	d	file:
COMPAT_IPFW	netinet/ip_output.c	66;"	d	file:
COMPAT_IPFW	netinet/raw_ip.c	67;"	d	file:
COMPAT_IPFW	netinet/raw_ip.c	68;"	d	file:
COMPAT_IPFW	netinet/raw_ip.c	70;"	d	file:
COMPLETE	arpa/ftp.h	45;"	d
COMPTYPE	net/if_ppp.c	1425;"	d	file:
CONTINUE	arpa/ftp.h	46;"	d
CQUIT	sys/ttydefaults.h	67;"	d
CREPRINT	sys/ttydefaults.h	76;"	d
CRPRNT	sys/ttydefaults.h	80;"	d
CSTART	sys/ttydefaults.h	71;"	d
CSTATUS	sys/ttydefaults.h	64;"	d
CSTOP	sys/ttydefaults.h	72;"	d
CSUSP	sys/ttydefaults.h	68;"	d
CTIME	sys/ttydefaults.h	69;"	d
CTLFLAG_ANYBODY	sys/sysctl.h	81;"	d
CTLFLAG_DYN	sys/sysctl.h	84;"	d
CTLFLAG_NOLOCK	sys/sysctl.h	80;"	d
CTLFLAG_PRISON	sys/sysctl.h	83;"	d
CTLFLAG_RD	sys/sysctl.h	77;"	d
CTLFLAG_RDTUN	sys/sysctl.h	88;"	d
CTLFLAG_RW	sys/sysctl.h	79;"	d
CTLFLAG_SECURE	sys/sysctl.h	82;"	d
CTLFLAG_SECURE1	sys/sysctl.h	96;"	d
CTLFLAG_SECURE2	sys/sysctl.h	97;"	d
CTLFLAG_SECURE3	sys/sysctl.h	98;"	d
CTLFLAG_SKIP	sys/sysctl.h	85;"	d
CTLFLAG_TUN	sys/sysctl.h	87;"	d
CTLFLAG_WR	sys/sysctl.h	78;"	d
CTLMASK_SECURE	sys/sysctl.h	86;"	d
CTLSHIFT_SECURE	sys/sysctl.h	95;"	d
CTLTYPE	sys/sysctl.h	66;"	d
CTLTYPE_INT	sys/sysctl.h	68;"	d
CTLTYPE_LONG	sys/sysctl.h	74;"	d
CTLTYPE_NODE	sys/sysctl.h	67;"	d
CTLTYPE_OPAQUE	sys/sysctl.h	71;"	d
CTLTYPE_QUAD	sys/sysctl.h	70;"	d
CTLTYPE_STRING	sys/sysctl.h	69;"	d
CTLTYPE_STRUCT	sys/sysctl.h	72;"	d
CTLTYPE_UINT	sys/sysctl.h	73;"	d
CTLTYPE_ULONG	sys/sysctl.h	75;"	d
CTL_AUTO_START	sys/sysctl.h	113;"	d
CTL_DEBUG	sys/sysctl.h	306;"	d
CTL_HW	sys/sysctl.h	307;"	d
CTL_HW_NAMES	sys/sysctl.h	458;"	d
CTL_IPPROTO_NAMES	netinet/in.h	370;"	d
CTL_KERN	sys/sysctl.h	302;"	d
CTL_KERN_NAMES	sys/sysctl.h	366;"	d
CTL_MACHDEP	sys/sysctl.h	308;"	d
CTL_MAXID	sys/sysctl.h	311;"	d
CTL_MAXNAME	sys/sysctl.h	52;"	d
CTL_NAMES	sys/sysctl.h	313;"	d
CTL_NET	sys/sysctl.h	305;"	d
CTL_NET_NAMES	sys/socket.h	241;"	d
CTL_NET_RT_NAMES	sys/socket.h	285;"	d
CTL_P1003_1B	sys/sysctl.h	310;"	d
CTL_P1003_1B_AIO_LISTIO_MAX	sys/sysctl.h	535;"	d
CTL_P1003_1B_AIO_MAX	sys/sysctl.h	536;"	d
CTL_P1003_1B_AIO_PRIO_DELTA_MAX	sys/sysctl.h	537;"	d
CTL_P1003_1B_ASYNCHRONOUS_IO	sys/sysctl.h	521;"	d
CTL_P1003_1B_DELAYTIMER_MAX	sys/sysctl.h	538;"	d
CTL_P1003_1B_FSYNC	sys/sysctl.h	531;"	d
CTL_P1003_1B_MAPPED_FILES	sys/sysctl.h	522;"	d
CTL_P1003_1B_MAXID	sys/sysctl.h	547;"	d
CTL_P1003_1B_MEMLOCK	sys/sysctl.h	523;"	d
CTL_P1003_1B_MEMLOCK_RANGE	sys/sysctl.h	524;"	d
CTL_P1003_1B_MEMORY_PROTECTION	sys/sysctl.h	525;"	d
CTL_P1003_1B_MESSAGE_PASSING	sys/sysctl.h	526;"	d
CTL_P1003_1B_MQ_OPEN_MAX	sys/sysctl.h	539;"	d
CTL_P1003_1B_NAMES	sys/sysctl.h	549;"	d
CTL_P1003_1B_PAGESIZE	sys/sysctl.h	540;"	d
CTL_P1003_1B_PRIORITIZED_IO	sys/sysctl.h	527;"	d
CTL_P1003_1B_PRIORITY_SCHEDULING	sys/sysctl.h	528;"	d
CTL_P1003_1B_REALTIME_SIGNALS	sys/sysctl.h	529;"	d
CTL_P1003_1B_RTSIG_MAX	sys/sysctl.h	541;"	d
CTL_P1003_1B_SEMAPHORES	sys/sysctl.h	530;"	d
CTL_P1003_1B_SEM_NSEMS_MAX	sys/sysctl.h	542;"	d
CTL_P1003_1B_SEM_VALUE_MAX	sys/sysctl.h	543;"	d
CTL_P1003_1B_SHARED_MEMORY_OBJECTS	sys/sysctl.h	532;"	d
CTL_P1003_1B_SIGQUEUE_MAX	sys/sysctl.h	544;"	d
CTL_P1003_1B_SYNCHRONIZED_IO	sys/sysctl.h	533;"	d
CTL_P1003_1B_TIMERS	sys/sysctl.h	534;"	d
CTL_P1003_1B_TIMER_MAX	sys/sysctl.h	545;"	d
CTL_UNSPEC	sys/sysctl.h	301;"	d
CTL_USER	sys/sysctl.h	309;"	d
CTL_USER_NAMES	sys/sysctl.h	497;"	d
CTL_VFS	sys/sysctl.h	304;"	d
CTL_VFS_NAMES	sys/sysctl.h	407;"	d
CTL_VM	sys/sysctl.h	303;"	d
CTL_VM_NAMES	vm/vm_param.h	90;"	d
CTRL	sys/ttydefaults.h	59;"	d
CURSIG	sys/signalvar.h	83;"	d
CWERASE	sys/ttydefaults.h	75;"	d
C_ANY	arpa/nameser_compat.h	186;"	d
C_CHAOS	arpa/nameser_compat.h	182;"	d
C_HS	arpa/nameser_compat.h	183;"	d
C_IN	arpa/nameser_compat.h	181;"	d
C_NONE	arpa/nameser_compat.h	185;"	d
DATA_SET	sys/linker_set.h	73;"	d
DEBUG	libc/res_config.h	1;"	d
DEBUG	rtems/rtems_mii_ioctl_kern.c	73;"	d	file:
DEBUG_EXPIRE	netinet/ip_mroute.c	213;"	d	file:
DEBUG_FORWARD	netinet/ip_mroute.c	212;"	d	file:
DEBUG_MFC	netinet/ip_mroute.c	211;"	d	file:
DEBUG_PRINTF	lib/ftpfs.c	58;"	d	file:
DEBUG_PRINTF	lib/ftpfs.c	60;"	d	file:
DEBUG_XMIT	netinet/ip_mroute.c	214;"	d	file:
DECODEL	net/slcompress.c	120;"	d	file:
DECODES	net/slcompress.c	129;"	d	file:
DECODEU	net/slcompress.c	138;"	d	file:
DECOMP_ERROR	net/ppp_comp.h	96;"	d
DECOMP_FATALERROR	net/ppp_comp.h	97;"	d
DECOMP_OK	net/ppp_comp.h	95;"	d
DEFLATE_CHK_SEQUENCE	net/ppp_comp.h	155;"	d
DEFLATE_MAKE_OPT	net/ppp_comp.h	153;"	d
DEFLATE_MAX_SIZE	net/ppp_comp.h	149;"	d
DEFLATE_METHOD	net/ppp_comp.h	152;"	d
DEFLATE_METHOD_VAL	net/ppp_comp.h	150;"	d
DEFLATE_MIN_SIZE	net/ppp_comp.h	148;"	d
DEFLATE_SIZE	net/ppp_comp.h	151;"	d
DELETE	arpa/nameser_compat.h	137;"	d
DELIM	libc/linkaddr.c	54;"	d	file:
DHCP_ACK	rtems/rtems_dhcp.c	127;"	d	file:
DHCP_BOOTREPLY	rtems/rtems_dhcp.c	118;"	d	file:
DHCP_BOOTREQUEST	rtems/rtems_dhcp.c	117;"	d	file:
DHCP_BROADCAST	rtems/rtems_dhcp.c	111;"	d	file:
DHCP_DECLINE	rtems/rtems_dhcp.c	126;"	d	file:
DHCP_DISCOVER	rtems/rtems_dhcp.c	123;"	d	file:
DHCP_DNS	rtems/rtems_dhcp.c	137;"	d	file:
DHCP_DOMAIN_NAME	rtems/rtems_dhcp.c	139;"	d	file:
DHCP_GATEWAY	rtems/rtems_dhcp.c	136;"	d	file:
DHCP_HOST	rtems/rtems_dhcp.c	138;"	d	file:
DHCP_LEASE	rtems/rtems_dhcp.c	142;"	d	file:
DHCP_MESSAGE	rtems/rtems_dhcp.c	143;"	d	file:
DHCP_NACK	rtems/rtems_dhcp.c	128;"	d	file:
DHCP_NETMASK	rtems/rtems_dhcp.c	140;"	d	file:
DHCP_OFFER	rtems/rtems_dhcp.c	124;"	d	file:
DHCP_OPTION_END	rtems/rtems_dhcp.c	146;"	d	file:
DHCP_OPTION_PAD	rtems/rtems_dhcp.c	134;"	d	file:
DHCP_PARAMETERS	rtems/rtems_dhcp.c	145;"	d	file:
DHCP_RELEASE	rtems/rtems_dhcp.c	129;"	d	file:
DHCP_REQUEST	rtems/rtems_dhcp.c	125;"	d	file:
DHCP_REQUESTED_IP	rtems/rtems_dhcp.c	141;"	d	file:
DHCP_SERVER	rtems/rtems_dhcp.c	144;"	d	file:
DHCP_SUBNET	rtems/rtems_dhcp.c	135;"	d	file:
DHCP_UNICAST	rtems/rtems_dhcp.c	112;"	d	file:
DIAGNOSTIC	rtems/rtems_bsdnet.h	26;"	d
DIAGNOSTIC	rtems/rtems_bsdnet.h	33;"	d
DIGIT	libc/linkaddr.c	52;"	d	file:
DIVRCVQ	netinet/ip_divert.c	65;"	d	file:
DIVSNDQ	netinet/ip_divert.c	64;"	d	file:
DLT_ARCNET	net/bpf.h	144;"	d
DLT_ATM_RFC1483	net/bpf.h	148;"	d
DLT_AX25	net/bpf.h	140;"	d
DLT_CHAOS	net/bpf.h	142;"	d
DLT_EN10MB	net/bpf.h	138;"	d
DLT_EN3MB	net/bpf.h	139;"	d
DLT_FDDI	net/bpf.h	147;"	d
DLT_IEEE802	net/bpf.h	143;"	d
DLT_NULL	net/bpf.h	137;"	d
DLT_PPP	net/bpf.h	146;"	d
DLT_PRONET	net/bpf.h	141;"	d
DLT_SLIP	net/bpf.h	145;"	d
DOMAIN_SET	sys/domain.h	65;"	d
DO_BSD_COMPRESS	net/ppp_comp.h	39;"	d
DO_DEFLATE	net/ppp_comp.h	42;"	d
DO_PREDICTOR_1	net/ppp_comp.h	44;"	d
DO_PREDICTOR_2	net/ppp_comp.h	45;"	d
Dprint	libc/res_send.c	129;"	d	file:
Dprint	libc/res_send.c	134;"	d	file:
DprintQ	libc/res_send.c	130;"	d	file:
DprintQ	libc/res_send.c	135;"	d	file:
EALEN	nfs/bootp_subr.c	933;"	d	file:
EALEN	rtems/rtems_dhcp.c	105;"	d	file:
ENCAP_PROTO	netinet/ip_mroute.c	240;"	d	file:
ENCAP_TTL	netinet/ip_mroute.c	239;"	d	file:
ENCODE	net/slcompress.c	99;"	d	file:
ENCODEZ	net/slcompress.c	109;"	d	file:
END	libc/linkaddr.c	53;"	d	file:
ERROR	arpa/ftp.h	48;"	d
ESCAPE_P	net/ppp_tty.c	159;"	d	file:
ETHERMIN	net/ethernet.h	345;"	d
ETHERMTU	net/ethernet.h	344;"	d
ETHERMTU_JUMBO	net/ethernet.h	346;"	d
ETHERTYPE_8023	net/ethernet.h	81;"	d
ETHERTYPE_AARP	net/ethernet.h	242;"	d
ETHERTYPE_ACCTON	net/ethernet.h	296;"	d
ETHERTYPE_AEONIC	net/ethernet.h	184;"	d
ETHERTYPE_ALPHA	net/ethernet.h	264;"	d
ETHERTYPE_AMBER	net/ethernet.h	154;"	d
ETHERTYPE_AMOEBA	net/ethernet.h	259;"	d
ETHERTYPE_APOLLO	net/ethernet.h	244;"	d
ETHERTYPE_APOLLODOMAIN	net/ethernet.h	180;"	d
ETHERTYPE_APPLETALK	net/ethernet.h	223;"	d
ETHERTYPE_APPLITEK	net/ethernet.h	231;"	d
ETHERTYPE_ARGONAUT	net/ethernet.h	188;"	d
ETHERTYPE_ARP	net/ethernet.h	97;"	d
ETHERTYPE_AT	net/ethernet.h	222;"	d
ETHERTYPE_ATALK	net/ethernet.h	221;"	d
ETHERTYPE_ATOMIC	net/ethernet.h	305;"	d
ETHERTYPE_ATT	net/ethernet.h	209;"	d
ETHERTYPE_ATTSTANFORD	net/ethernet.h	174;"	d
ETHERTYPE_AUTOPHON	net/ethernet.h	210;"	d
ETHERTYPE_AXIS	net/ethernet.h	319;"	d
ETHERTYPE_BCLOOP	net/ethernet.h	328;"	d
ETHERTYPE_BOFL	net/ethernet.h	247;"	d
ETHERTYPE_CABLETRON	net/ethernet.h	169;"	d
ETHERTYPE_CHAOS	net/ethernet.h	95;"	d
ETHERTYPE_COMDESIGN	net/ethernet.h	211;"	d
ETHERTYPE_COMPUGRAPHIC	net/ethernet.h	212;"	d
ETHERTYPE_COUNTERPOINT	net/ethernet.h	205;"	d
ETHERTYPE_CRONUS	net/ethernet.h	171;"	d
ETHERTYPE_CRONUSVLN	net/ethernet.h	170;"	d
ETHERTYPE_DCA	net/ethernet.h	118;"	d
ETHERTYPE_DDE	net/ethernet.h	215;"	d
ETHERTYPE_DEBNI	net/ethernet.h	329;"	d
ETHERTYPE_DECAM	net/ethernet.h	199;"	d
ETHERTYPE_DECCUST	net/ethernet.h	152;"	d
ETHERTYPE_DECDIAG	net/ethernet.h	151;"	d
ETHERTYPE_DECDNS	net/ethernet.h	190;"	d
ETHERTYPE_DECDTS	net/ethernet.h	192;"	d
ETHERTYPE_DECEXPER	net/ethernet.h	145;"	d
ETHERTYPE_DECLAST	net/ethernet.h	195;"	d
ETHERTYPE_DECLTM	net/ethernet.h	193;"	d
ETHERTYPE_DECMUMPS	net/ethernet.h	155;"	d
ETHERTYPE_DECNETBIOS	net/ethernet.h	194;"	d
ETHERTYPE_DECnet	net/ethernet.h	148;"	d
ETHERTYPE_DELTACON	net/ethernet.h	304;"	d
ETHERTYPE_DIDDLE	net/ethernet.h	142;"	d
ETHERTYPE_DLOG1	net/ethernet.h	89;"	d
ETHERTYPE_DLOG2	net/ethernet.h	90;"	d
ETHERTYPE_DN	net/ethernet.h	149;"	d
ETHERTYPE_DOGFIGHT	net/ethernet.h	120;"	d
ETHERTYPE_DSMD	net/ethernet.h	187;"	d
ETHERTYPE_ECMA	net/ethernet.h	94;"	d
ETHERTYPE_ENCRYPT	net/ethernet.h	191;"	d
ETHERTYPE_ES	net/ethernet.h	203;"	d
ETHERTYPE_EXCELAN	net/ethernet.h	175;"	d
ETHERTYPE_EXPERDATA	net/ethernet.h	200;"	d
ETHERTYPE_FLIP	net/ethernet.h	260;"	d
ETHERTYPE_FLOWCONTROL	net/ethernet.h	314;"	d
ETHERTYPE_FRARP	net/ethernet.h	99;"	d
ETHERTYPE_GENDYN	net/ethernet.h	208;"	d
ETHERTYPE_HAYES	net/ethernet.h	252;"	d
ETHERTYPE_HIPPI_FP	net/ethernet.h	274;"	d
ETHERTYPE_HITACHI	net/ethernet.h	316;"	d
ETHERTYPE_HP	net/ethernet.h	172;"	d
ETHERTYPE_IEEEPUP	net/ethernet.h	103;"	d
ETHERTYPE_IEEEPUPAT	net/ethernet.h	104;"	d
ETHERTYPE_IMLBL	net/ethernet.h	143;"	d
ETHERTYPE_IMLBLDIAG	net/ethernet.h	141;"	d
ETHERTYPE_IP	net/ethernet.h	91;"	d
ETHERTYPE_IPAS	net/ethernet.h	312;"	d
ETHERTYPE_IPV6	net/ethernet.h	303;"	d
ETHERTYPE_IPX	net/ethernet.h	255;"	d
ETHERTYPE_IPXNEW	net/ethernet.h	185;"	d
ETHERTYPE_KALPANA	net/ethernet.h	298;"	d
ETHERTYPE_LANBRIDGE	net/ethernet.h	186;"	d
ETHERTYPE_LANPROBE	net/ethernet.h	322;"	d
ETHERTYPE_LAT	net/ethernet.h	150;"	d
ETHERTYPE_LBACK	net/ethernet.h	325;"	d
ETHERTYPE_LITTLE	net/ethernet.h	204;"	d
ETHERTYPE_LOGICRAFT	net/ethernet.h	262;"	d
ETHERTYPE_LOOPBACK	net/ethernet.h	324;"	d
ETHERTYPE_MATRA	net/ethernet.h	214;"	d
ETHERTYPE_MAX	net/ethernet.h	334;"	d
ETHERTYPE_MERIT	net/ethernet.h	216;"	d
ETHERTYPE_MICP	net/ethernet.h	309;"	d
ETHERTYPE_MOPDL	net/ethernet.h	146;"	d
ETHERTYPE_MOPRC	net/ethernet.h	147;"	d
ETHERTYPE_MOTOROLA	net/ethernet.h	278;"	d
ETHERTYPE_MPLS	net/ethernet.h	317;"	d
ETHERTYPE_MPLS_MCAST	net/ethernet.h	318;"	d
ETHERTYPE_MUMPS	net/ethernet.h	258;"	d
ETHERTYPE_NBPCC	net/ethernet.h	129;"	d
ETHERTYPE_NBPCLAIM	net/ethernet.h	134;"	d
ETHERTYPE_NBPCLREQ	net/ethernet.h	130;"	d
ETHERTYPE_NBPCLRSP	net/ethernet.h	131;"	d
ETHERTYPE_NBPCREQ	net/ethernet.h	127;"	d
ETHERTYPE_NBPCRSP	net/ethernet.h	128;"	d
ETHERTYPE_NBPDG	net/ethernet.h	132;"	d
ETHERTYPE_NBPDGB	net/ethernet.h	133;"	d
ETHERTYPE_NBPDLTE	net/ethernet.h	135;"	d
ETHERTYPE_NBPRAR	net/ethernet.h	137;"	d
ETHERTYPE_NBPRAS	net/ethernet.h	136;"	d
ETHERTYPE_NBPRST	net/ethernet.h	138;"	d
ETHERTYPE_NBPSCD	net/ethernet.h	126;"	d
ETHERTYPE_NBPVCD	net/ethernet.h	125;"	d
ETHERTYPE_NBS	net/ethernet.h	93;"	d
ETHERTYPE_NCD	net/ethernet.h	263;"	d
ETHERTYPE_NESTAR	net/ethernet.h	173;"	d
ETHERTYPE_NETBEUI	net/ethernet.h	279;"	d
ETHERTYPE_NOVELL	net/ethernet.h	256;"	d
ETHERTYPE_NS	net/ethernet.h	87;"	d
ETHERTYPE_NSAT	net/ethernet.h	88;"	d
ETHERTYPE_NSCOMPAT	net/ethernet.h	98;"	d
ETHERTYPE_NTRAILER	net/ethernet.h	116;"	d
ETHERTYPE_NTRAILER	net/ethernet.h	342;"	d
ETHERTYPE_OS9	net/ethernet.h	164;"	d
ETHERTYPE_OS9NET	net/ethernet.h	165;"	d
ETHERTYPE_PACER	net/ethernet.h	230;"	d
ETHERTYPE_PAE	net/ethernet.h	323;"	d
ETHERTYPE_PCS	net/ethernet.h	140;"	d
ETHERTYPE_PLANNING	net/ethernet.h	197;"	d
ETHERTYPE_PPP	net/ethernet.h	315;"	d
ETHERTYPE_PPPOE	net/ethernet.h	321;"	d
ETHERTYPE_PPPOEDISC	net/ethernet.h	320;"	d
ETHERTYPE_PRIMENTS	net/ethernet.h	168;"	d
ETHERTYPE_PUP	net/ethernet.h	83;"	d
ETHERTYPE_PUPAT	net/ethernet.h	84;"	d
ETHERTYPE_RACAL	net/ethernet.h	167;"	d
ETHERTYPE_RATIONAL	net/ethernet.h	268;"	d
ETHERTYPE_RAWFR	net/ethernet.h	158;"	d
ETHERTYPE_RCL	net/ethernet.h	121;"	d
ETHERTYPE_RDP	net/ethernet.h	308;"	d
ETHERTYPE_RETIX	net/ethernet.h	241;"	d
ETHERTYPE_REVARP	net/ethernet.h	183;"	d
ETHERTYPE_SCA	net/ethernet.h	153;"	d
ETHERTYPE_SECTRA	net/ethernet.h	302;"	d
ETHERTYPE_SECUREDATA	net/ethernet.h	313;"	d
ETHERTYPE_SGITW	net/ethernet.h	273;"	d
ETHERTYPE_SG_BOUNCE	net/ethernet.h	179;"	d
ETHERTYPE_SG_DIAG	net/ethernet.h	176;"	d
ETHERTYPE_SG_NETGAMES	net/ethernet.h	177;"	d
ETHERTYPE_SG_RESV	net/ethernet.h	178;"	d
ETHERTYPE_SIMNET	net/ethernet.h	144;"	d
ETHERTYPE_SNA	net/ethernet.h	236;"	d
ETHERTYPE_SNMP	net/ethernet.h	265;"	d
ETHERTYPE_SONIX	net/ethernet.h	330;"	d
ETHERTYPE_SPIDER	net/ethernet.h	225;"	d
ETHERTYPE_SPRITE	net/ethernet.h	85;"	d
ETHERTYPE_STP	net/ethernet.h	275;"	d
ETHERTYPE_TALARIS	net/ethernet.h	250;"	d
ETHERTYPE_TALARISMC	net/ethernet.h	297;"	d
ETHERTYPE_TCPCOMP	net/ethernet.h	311;"	d
ETHERTYPE_TCPSM	net/ethernet.h	327;"	d
ETHERTYPE_TEC	net/ethernet.h	267;"	d
ETHERTYPE_TIGAN	net/ethernet.h	182;"	d
ETHERTYPE_TRAIL	net/ethernet.h	115;"	d
ETHERTYPE_TRAIL	net/ethernet.h	341;"	d
ETHERTYPE_TRANSETHER	net/ethernet.h	157;"	d
ETHERTYPE_TYMSHARE	net/ethernet.h	181;"	d
ETHERTYPE_UBBST	net/ethernet.h	163;"	d
ETHERTYPE_UBDEBUG	net/ethernet.h	102;"	d
ETHERTYPE_UBDIAGLOOP	net/ethernet.h	161;"	d
ETHERTYPE_UBDL	net/ethernet.h	159;"	d
ETHERTYPE_UBNIU	net/ethernet.h	160;"	d
ETHERTYPE_UBNMC	net/ethernet.h	162;"	d
ETHERTYPE_VALID	net/ethernet.h	119;"	d
ETHERTYPE_VARIAN	net/ethernet.h	237;"	d
ETHERTYPE_VAXELN	net/ethernet.h	189;"	d
ETHERTYPE_VEECO	net/ethernet.h	207;"	d
ETHERTYPE_VEXP	net/ethernet.h	201;"	d
ETHERTYPE_VGLAB	net/ethernet.h	253;"	d
ETHERTYPE_VINES	net/ethernet.h	105;"	d
ETHERTYPE_VINESECHO	net/ethernet.h	107;"	d
ETHERTYPE_VINESLOOP	net/ethernet.h	106;"	d
ETHERTYPE_VITAL	net/ethernet.h	331;"	d
ETHERTYPE_VLAN	net/ethernet.h	245;"	d
ETHERTYPE_VLTLMAN	net/ethernet.h	218;"	d
ETHERTYPE_VPROD	net/ethernet.h	202;"	d
ETHERTYPE_VURESERVED	net/ethernet.h	261;"	d
ETHERTYPE_WATERLOO	net/ethernet.h	251;"	d
ETHERTYPE_WELLFLEET	net/ethernet.h	248;"	d
ETHERTYPE_X25	net/ethernet.h	96;"	d
ETHERTYPE_X75	net/ethernet.h	92;"	d
ETHERTYPE_XNSSM	net/ethernet.h	326;"	d
ETHERTYPE_XTP	net/ethernet.h	272;"	d
ETHER_ADDR_LEN	net/ethernet.h	15;"	d
ETHER_ALIGN	net/ethernet.h	30;"	d
ETHER_CRC_LEN	net/ethernet.h	17;"	d
ETHER_CRC_POLY_BE	net/ethernet.h	50;"	d
ETHER_CRC_POLY_LE	net/ethernet.h	49;"	d
ETHER_FIRST_MULTI	netinet/if_ether.h	165;"	d
ETHER_HDR_LEN	net/ethernet.h	18;"	d
ETHER_IS_MULTICAST	net/ethernet.h	74;"	d
ETHER_IS_VALID_LEN	net/ethernet.h	55;"	d
ETHER_LOOKUP_MULTI	netinet/if_ether.h	137;"	d
ETHER_MAP_IP_MULTICAST	netinet/if_ether.h	47;"	d
ETHER_MAX_FRAME	net/ethernet.h	36;"	d
ETHER_MAX_LEN	net/ethernet.h	20;"	d
ETHER_MAX_LEN_JUMBO	net/ethernet.h	21;"	d
ETHER_MIN_LEN	net/ethernet.h	19;"	d
ETHER_NEXT_MULTI	netinet/if_ether.h	157;"	d
ETHER_TYPE_LEN	net/ethernet.h	16;"	d
ETHER_VLAN_ENCAP_LEN	net/ethernet.h	23;"	d
EXPIRE_TIMEOUT	netinet/ip_mroute.c	218;"	d	file:
EXTSR_1000TFDX	dev/mii/mii.h	200;"	d
EXTSR_1000THDX	dev/mii/mii.h	201;"	d
EXTSR_1000XFDX	dev/mii/mii.h	198;"	d
EXTSR_1000XHDX	dev/mii/mii.h	199;"	d
EXTSR_MEDIAMASK	dev/mii/mii.h	203;"	d
FCOUNT	net/ppp_tty.c	167;"	d	file:
FORMERR	arpa/nameser_compat.h	126;"	d
FORM_C	arpa/ftp.h	67;"	d
FORM_N	arpa/ftp.h	65;"	d
FORM_T	arpa/ftp.h	66;"	d
FREE	sys/malloc.h	308;"	d
FREE	sys/malloc.h	323;"	d
FSCRED	sys/ucred.h	54;"	d
FW_IFNLEN	netinet/ip_fw.h	38;"	d
Free	net/radix.h	141;"	d
Free	net/radix.h	147;"	d
GETLONG	arpa/nameser_compat.h	189;"	d
GETSHORT	arpa/nameser_compat.h	188;"	d
GET_TIME	netinet/ip_mroute.h	78;"	d
GOTONE	libc/linkaddr.c	48;"	d	file:
GOTTWO	libc/linkaddr.c	49;"	d	file:
GTCR_ADV_1000TFDX	dev/mii/mii.h	183;"	d
GTCR_ADV_1000THDX	dev/mii/mii.h	184;"	d
GTCR_ADV_MS	dev/mii/mii.h	181;"	d
GTCR_MAN_MS	dev/mii/mii.h	180;"	d
GTCR_PORT_TYPE	dev/mii/mii.h	182;"	d
GTCR_TEST_MASK	dev/mii/mii.h	179;"	d
GTSR_IDLE_ERR	dev/mii/mii.h	195;"	d
GTSR_LP_1000TFDX	dev/mii/mii.h	192;"	d
GTSR_LP_1000THDX	dev/mii/mii.h	193;"	d
GTSR_LP_ASM_DIR	dev/mii/mii.h	194;"	d
GTSR_LRS	dev/mii/mii.h	190;"	d
GTSR_MAN_MS_FLT	dev/mii/mii.h	188;"	d
GTSR_MS_RES	dev/mii/mii.h	189;"	d
GTSR_RRS	dev/mii/mii.h	191;"	d
HAVE_IFAM_DATA	libc/getifaddrs.c	82;"	d	file:
HAVE_IFM_DATA	libc/getifaddrs.c	77;"	d	file:
HAVE_IFM_DATA	libc/getifaddrs.c	86;"	d	file:
HEADER	arpa/nameser_compat.h	/^} HEADER;$/;"	t	typeref:struct:__anon47
HERROR_USE_WRITEV	libc/herror.c	72;"	d	file:
HFIXEDSZ	arpa/nameser_compat.h	104;"	d
HOST_NOT_FOUND	netdb.h	124;"	d
HTONL	netinet/ip_mroute.c	50;"	d	file:
HTONL	netinet/ip_mroute.c	55;"	d	file:
HTONS	netinet/ip_mroute.c	51;"	d	file:
HTONS	netinet/ip_mroute.c	56;"	d	file:
HW_BYTEORDER	sys/sysctl.h	448;"	d
HW_DISKNAMES	sys/sysctl.h	452;"	d
HW_DISKSTATS	sys/sysctl.h	453;"	d
HW_FLOATINGPT	sys/sysctl.h	454;"	d
HW_MACHINE	sys/sysctl.h	445;"	d
HW_MACHINE_ARCH	sys/sysctl.h	455;"	d
HW_MAXID	sys/sysctl.h	456;"	d
HW_MODEL	sys/sysctl.h	446;"	d
HW_NCPU	sys/sysctl.h	447;"	d
HW_PAGESIZE	sys/sysctl.h	451;"	d
HW_PHYSMEM	sys/sysctl.h	449;"	d
HW_USERMEM	sys/sysctl.h	450;"	d
Head	netinet/igmp.c	/^static struct router_info *Head;$/;"	v	typeref:struct:router_info	file:
IA_DSTSIN	netinet/in_var.h	81;"	d
IA_SIN	netinet/in_var.h	80;"	d
ICMPCTL_MASKREPL	netinet/icmp_var.h	66;"	d
ICMPCTL_MAXID	netinet/icmp_var.h	68;"	d
ICMPCTL_NAMES	netinet/icmp_var.h	70;"	d
ICMPCTL_STATS	netinet/icmp_var.h	67;"	d
ICMP_ADVLEN	netinet/ip_icmp.h	131;"	d
ICMP_ADVLEN	netinet/ip_icmp.h	134;"	d
ICMP_ADVLENMIN	netinet/ip_icmp.h	129;"	d
ICMP_ALTHOSTADDR	netinet/ip_icmp.h	165;"	d
ICMP_DATACONVERR	netinet/ip_icmp.h	185;"	d
ICMP_ECHO	netinet/ip_icmp.h	166;"	d
ICMP_ECHOREPLY	netinet/ip_icmp.h	141;"	d
ICMP_INFOTYPE	netinet/ip_icmp.h	199;"	d
ICMP_IPV6_IAMHERE	netinet/ip_icmp.h	188;"	d
ICMP_IPV6_WHEREAREYOU	netinet/ip_icmp.h	187;"	d
ICMP_IREQ	netinet/ip_icmp.h	180;"	d
ICMP_IREQREPLY	netinet/ip_icmp.h	181;"	d
ICMP_MASKLEN	netinet/ip_icmp.h	128;"	d
ICMP_MASKREPLY	netinet/ip_icmp.h	183;"	d
ICMP_MASKREQ	netinet/ip_icmp.h	182;"	d
ICMP_MAXTYPE	netinet/ip_icmp.h	197;"	d
ICMP_MINLEN	netinet/ip_icmp.h	126;"	d
ICMP_MOBILE_REDIRECT	netinet/ip_icmp.h	186;"	d
ICMP_MOBILE_REGREPLY	netinet/ip_icmp.h	190;"	d
ICMP_MOBILE_REGREQUEST	netinet/ip_icmp.h	189;"	d
ICMP_PARAMPROB	netinet/ip_icmp.h	174;"	d
ICMP_PARAMPROB_ERRATPTR	netinet/ip_icmp.h	175;"	d
ICMP_PARAMPROB_LENGTH	netinet/ip_icmp.h	177;"	d
ICMP_PARAMPROB_OPTABSENT	netinet/ip_icmp.h	176;"	d
ICMP_PHOTURIS	netinet/ip_icmp.h	192;"	d
ICMP_PHOTURIS_AUTH_FAILED	netinet/ip_icmp.h	194;"	d
ICMP_PHOTURIS_DECRYPT_FAILED	netinet/ip_icmp.h	195;"	d
ICMP_PHOTURIS_UNKNOWN_INDEX	netinet/ip_icmp.h	193;"	d
ICMP_REDIRECT	netinet/ip_icmp.h	160;"	d
ICMP_REDIRECT_HOST	netinet/ip_icmp.h	162;"	d
ICMP_REDIRECT_NET	netinet/ip_icmp.h	161;"	d
ICMP_REDIRECT_TOSHOST	netinet/ip_icmp.h	164;"	d
ICMP_REDIRECT_TOSNET	netinet/ip_icmp.h	163;"	d
ICMP_ROUTERADVERT	netinet/ip_icmp.h	167;"	d
ICMP_ROUTERADVERT_NORMAL	netinet/ip_icmp.h	168;"	d
ICMP_ROUTERADVERT_NOROUTE_COMMON	netinet/ip_icmp.h	169;"	d
ICMP_ROUTERSOLICIT	netinet/ip_icmp.h	170;"	d
ICMP_SKIP	netinet/ip_icmp.h	191;"	d
ICMP_SOURCEQUENCH	netinet/ip_icmp.h	159;"	d
ICMP_TIMXCEED	netinet/ip_icmp.h	171;"	d
ICMP_TIMXCEED_INTRANS	netinet/ip_icmp.h	172;"	d
ICMP_TIMXCEED_REASS	netinet/ip_icmp.h	173;"	d
ICMP_TRACEROUTE	netinet/ip_icmp.h	184;"	d
ICMP_TSLEN	netinet/ip_icmp.h	127;"	d
ICMP_TSTAMP	netinet/ip_icmp.h	178;"	d
ICMP_TSTAMPREPLY	netinet/ip_icmp.h	179;"	d
ICMP_UNREACH	netinet/ip_icmp.h	142;"	d
ICMP_UNREACH_FILTER_PROHIB	netinet/ip_icmp.h	156;"	d
ICMP_UNREACH_HOST	netinet/ip_icmp.h	144;"	d
ICMP_UNREACH_HOST_PRECEDENCE	netinet/ip_icmp.h	157;"	d
ICMP_UNREACH_HOST_PROHIB	netinet/ip_icmp.h	153;"	d
ICMP_UNREACH_HOST_UNKNOWN	netinet/ip_icmp.h	150;"	d
ICMP_UNREACH_ISOLATED	netinet/ip_icmp.h	151;"	d
ICMP_UNREACH_NEEDFRAG	netinet/ip_icmp.h	147;"	d
ICMP_UNREACH_NET	netinet/ip_icmp.h	143;"	d
ICMP_UNREACH_NET_PROHIB	netinet/ip_icmp.h	152;"	d
ICMP_UNREACH_NET_UNKNOWN	netinet/ip_icmp.h	149;"	d
ICMP_UNREACH_PORT	netinet/ip_icmp.h	146;"	d
ICMP_UNREACH_PRECEDENCE_CUTOFF	netinet/ip_icmp.h	158;"	d
ICMP_UNREACH_PROTOCOL	netinet/ip_icmp.h	145;"	d
ICMP_UNREACH_SRCFAIL	netinet/ip_icmp.h	148;"	d
ICMP_UNREACH_TOSHOST	netinet/ip_icmp.h	155;"	d
ICMP_UNREACH_TOSNET	netinet/ip_icmp.h	154;"	d
IDR2_MODEL	dev/mii/mii.h	115;"	d
IDR2_OUILSB	dev/mii/mii.h	114;"	d
IDR2_REV	dev/mii/mii.h	116;"	d
IFAFREE	net/if_var.h	229;"	d
IFA_ROUTE	net/if_var.h	226;"	d
IFF_ALLMULTI	net/if.h	131;"	d
IFF_ALTPHYS	net/if.h	137;"	d
IFF_BROADCAST	net/if.h	123;"	d
IFF_CANTCHANGE	net/if.h	146;"	d
IFF_DEBUG	net/if.h	124;"	d
IFF_LINK0	net/if.h	134;"	d
IFF_LINK1	net/if.h	135;"	d
IFF_LINK2	net/if.h	136;"	d
IFF_LOOPBACK	net/if.h	125;"	d
IFF_MONITOR	net/if.h	141;"	d
IFF_MULTICAST	net/if.h	138;"	d
IFF_NEEDSGIANT	net/if.h	143;"	d
IFF_NOARP	net/if.h	129;"	d
IFF_OACTIVE	net/if.h	132;"	d
IFF_POINTOPOINT	net/if.h	126;"	d
IFF_POLLING	net/if.h	139;"	d
IFF_PPROMISC	net/if.h	140;"	d
IFF_PROMISC	net/if.h	130;"	d
IFF_RUNNING	net/if.h	128;"	d
IFF_SIMPLEX	net/if.h	133;"	d
IFF_SMART	net/if.h	127;"	d
IFF_STATICARP	net/if.h	142;"	d
IFF_UP	net/if.h	122;"	d
IFMEDIA2STR_PRINT_TO_FILE	rtems/rtems_mii_ioctl.h	112;"	d
IFM_1000_CX	net/if_media.h	138;"	d
IFM_1000_LX	net/if_media.h	137;"	d
IFM_1000_SX	net/if_media.h	134;"	d
IFM_1000_T	net/if_media.h	139;"	d
IFM_100_FX	net/if_media.h	130;"	d
IFM_100_T2	net/if_media.h	133;"	d
IFM_100_T4	net/if_media.h	131;"	d
IFM_100_TX	net/if_media.h	129;"	d
IFM_100_VG	net/if_media.h	132;"	d
IFM_10_2	net/if_media.h	127;"	d
IFM_10_5	net/if_media.h	128;"	d
IFM_10_FL	net/if_media.h	136;"	d
IFM_10_STP	net/if_media.h	135;"	d
IFM_10_T	net/if_media.h	126;"	d
IFM_ACTIVE	net/if_media.h	261;"	d
IFM_ANEG_DIS	rtems/rtems_mii_ioctl.h	101;"	d
IFM_ATM	net/if_media.h	209;"	d
IFM_ATM_MM_155	net/if_media.h	214;"	d
IFM_ATM_MM_622	net/if_media.h	217;"	d
IFM_ATM_NOSCRAMB	net/if_media.h	221;"	d
IFM_ATM_SDH	net/if_media.h	220;"	d
IFM_ATM_SM_155	net/if_media.h	215;"	d
IFM_ATM_SM_622	net/if_media.h	218;"	d
IFM_ATM_TAXI_100	net/if_media.h	212;"	d
IFM_ATM_TAXI_140	net/if_media.h	213;"	d
IFM_ATM_UNASSIGNED	net/if_media.h	222;"	d
IFM_ATM_UNKNOWN	net/if_media.h	210;"	d
IFM_ATM_UTP_155	net/if_media.h	216;"	d
IFM_ATM_UTP_25	net/if_media.h	211;"	d
IFM_ATM_VIRTUAL	net/if_media.h	219;"	d
IFM_AUTO	net/if_media.h	227;"	d
IFM_AVALID	net/if_media.h	260;"	d
IFM_ETHER	net/if_media.h	125;"	d
IFM_ETH_MASTER	net/if_media.h	143;"	d
IFM_FDDI	net/if_media.h	165;"	d
IFM_FDDI_DA	net/if_media.h	169;"	d
IFM_FDDI_MMF	net/if_media.h	167;"	d
IFM_FDDI_SMF	net/if_media.h	166;"	d
IFM_FDDI_UTP	net/if_media.h	168;"	d
IFM_FDX	net/if_media.h	234;"	d
IFM_FLAG0	net/if_media.h	236;"	d
IFM_FLAG1	net/if_media.h	237;"	d
IFM_FLAG2	net/if_media.h	238;"	d
IFM_GMASK	net/if_media.h	251;"	d
IFM_HDX	net/if_media.h	235;"	d
IFM_HPNA_1	net/if_media.h	140;"	d
IFM_IEEE80211	net/if_media.h	174;"	d
IFM_IEEE80211_11A	net/if_media.h	201;"	d
IFM_IEEE80211_11B	net/if_media.h	202;"	d
IFM_IEEE80211_11G	net/if_media.h	203;"	d
IFM_IEEE80211_ADHOC	net/if_media.h	193;"	d
IFM_IEEE80211_DS1	net/if_media.h	178;"	d
IFM_IEEE80211_DS11	net/if_media.h	181;"	d
IFM_IEEE80211_DS2	net/if_media.h	179;"	d
IFM_IEEE80211_DS22	net/if_media.h	182;"	d
IFM_IEEE80211_DS5	net/if_media.h	180;"	d
IFM_IEEE80211_FH	net/if_media.h	204;"	d
IFM_IEEE80211_FH1	net/if_media.h	176;"	d
IFM_IEEE80211_FH2	net/if_media.h	177;"	d
IFM_IEEE80211_HOSTAP	net/if_media.h	194;"	d
IFM_IEEE80211_IBSS	net/if_media.h	195;"	d
IFM_IEEE80211_IBSSMASTER	net/if_media.h	196;"	d
IFM_IEEE80211_MONITOR	net/if_media.h	198;"	d
IFM_IEEE80211_OFDM12	net/if_media.h	185;"	d
IFM_IEEE80211_OFDM18	net/if_media.h	186;"	d
IFM_IEEE80211_OFDM24	net/if_media.h	187;"	d
IFM_IEEE80211_OFDM36	net/if_media.h	188;"	d
IFM_IEEE80211_OFDM48	net/if_media.h	189;"	d
IFM_IEEE80211_OFDM54	net/if_media.h	190;"	d
IFM_IEEE80211_OFDM6	net/if_media.h	183;"	d
IFM_IEEE80211_OFDM72	net/if_media.h	191;"	d
IFM_IEEE80211_OFDM9	net/if_media.h	184;"	d
IFM_IEEE80211_TURBO	net/if_media.h	197;"	d
IFM_IMASK	net/if_media.h	246;"	d
IFM_INST	net/if_media.h	269;"	d
IFM_INST_MAX	net/if_media.h	273;"	d
IFM_ISHIFT	net/if_media.h	247;"	d
IFM_LINK_OK	rtems/rtems_mii_ioctl.h	100;"	d
IFM_LOOP	net/if_media.h	239;"	d
IFM_MAKEMODE	net/if_media.h	280;"	d
IFM_MAKEWORD	net/if_media.h	278;"	d
IFM_MANUAL	net/if_media.h	228;"	d
IFM_MMASK	net/if_media.h	249;"	d
IFM_MODE	net/if_media.h	271;"	d
IFM_MSHIFT	net/if_media.h	250;"	d
IFM_NMASK	net/if_media.h	244;"	d
IFM_NONE	net/if_media.h	229;"	d
IFM_OMASK	net/if_media.h	248;"	d
IFM_OPTIONS	net/if_media.h	270;"	d
IFM_SHARED_OPTION_DESCRIPTIONS	net/if_media.h	521;"	d
IFM_SUBTYPE	net/if_media.h	267;"	d
IFM_SUBTYPE_ATM_ALIASES	net/if_media.h	487;"	d
IFM_SUBTYPE_ATM_DESCRIPTIONS	net/if_media.h	473;"	d
IFM_SUBTYPE_ATM_OPTION_DESCRIPTIONS	net/if_media.h	501;"	d
IFM_SUBTYPE_ETHERNET_ALIASES	net/if_media.h	324;"	d
IFM_SUBTYPE_ETHERNET_DESCRIPTIONS	net/if_media.h	304;"	d
IFM_SUBTYPE_ETHERNET_OPTION_DESCRIPTIONS	net/if_media.h	345;"	d
IFM_SUBTYPE_FDDI_ALIASES	net/if_media.h	386;"	d
IFM_SUBTYPE_FDDI_DESCRIPTIONS	net/if_media.h	379;"	d
IFM_SUBTYPE_FDDI_OPTION_DESCRIPTIONS	net/if_media.h	393;"	d
IFM_SUBTYPE_IEEE80211_ALIASES	net/if_media.h	418;"	d
IFM_SUBTYPE_IEEE80211_DESCRIPTIONS	net/if_media.h	398;"	d
IFM_SUBTYPE_IEEE80211_MODE_ALIASES	net/if_media.h	468;"	d
IFM_SUBTYPE_IEEE80211_MODE_DESCRIPTIONS	net/if_media.h	459;"	d
IFM_SUBTYPE_IEEE80211_OPTION_DESCRIPTIONS	net/if_media.h	449;"	d
IFM_SUBTYPE_SHARED_ALIASES	net/if_media.h	516;"	d
IFM_SUBTYPE_SHARED_DESCRIPTIONS	net/if_media.h	509;"	d
IFM_SUBTYPE_TOKENRING_ALIASES	net/if_media.h	359;"	d
IFM_SUBTYPE_TOKENRING_DESCRIPTIONS	net/if_media.h	349;"	d
IFM_SUBTYPE_TOKENRING_OPTION_DESCRIPTIONS	net/if_media.h	369;"	d
IFM_TMASK	net/if_media.h	245;"	d
IFM_TOKEN	net/if_media.h	148;"	d
IFM_TOK_ALLR	net/if_media.h	157;"	d
IFM_TOK_AUTO	net/if_media.h	160;"	d
IFM_TOK_CLASSIC	net/if_media.h	159;"	d
IFM_TOK_DTR	net/if_media.h	158;"	d
IFM_TOK_ETR	net/if_media.h	155;"	d
IFM_TOK_SRCRT	net/if_media.h	156;"	d
IFM_TOK_STP100	net/if_media.h	153;"	d
IFM_TOK_STP16	net/if_media.h	150;"	d
IFM_TOK_STP4	net/if_media.h	149;"	d
IFM_TOK_UTP100	net/if_media.h	154;"	d
IFM_TOK_UTP16	net/if_media.h	152;"	d
IFM_TOK_UTP4	net/if_media.h	151;"	d
IFM_TYPE	net/if_media.h	266;"	d
IFM_TYPE_DESCRIPTIONS	net/if_media.h	295;"	d
IFM_TYPE_OPTIONS	net/if_media.h	268;"	d
IFNAMSIZ	net/if.h	75;"	d
IFNET_SLOWHZ	net/if.h	167;"	d
IFP2AC	net/if_arp.h	125;"	d
IFP_TO_IA	netinet/in_var.h	122;"	d
IFQ_MAXLEN	net/if.h	166;"	d
IFSTATMAX	net/if.h	257;"	d
IFT_1822	net/if_types.h	47;"	d
IFT_A12MPPSWITCH	net/if_types.h	175;"	d
IFT_AAL2	net/if_types.h	232;"	d
IFT_AAL5	net/if_types.h	94;"	d
IFT_ADSL	net/if_types.h	139;"	d
IFT_AFLANE8023	net/if_types.h	104;"	d
IFT_AFLANE8025	net/if_types.h	105;"	d
IFT_ARAP	net/if_types.h	133;"	d
IFT_ARCNET	net/if_types.h	80;"	d
IFT_ARCNETPLUS	net/if_types.h	81;"	d
IFT_ASYNC	net/if_types.h	129;"	d
IFT_ATM	net/if_types.h	82;"	d
IFT_ATMDXI	net/if_types.h	150;"	d
IFT_ATMFUNI	net/if_types.h	151;"	d
IFT_ATMIMA	net/if_types.h	152;"	d
IFT_ATMLOGICAL	net/if_types.h	125;"	d
IFT_ATMRADIO	net/if_types.h	234;"	d
IFT_ATMSUBINTERFACE	net/if_types.h	179;"	d
IFT_ATMVCIENDPT	net/if_types.h	239;"	d
IFT_ATMVIRTUAL	net/if_types.h	194;"	d
IFT_BGPPOLICYACCOUNTING	net/if_types.h	207;"	d
IFT_BSC	net/if_types.h	128;"	d
IFT_CARP	net/if_types.h	251;"	d
IFT_CCTEMUL	net/if_types.h	106;"	d
IFT_CEPT	net/if_types.h	64;"	d
IFT_CES	net/if_types.h	178;"	d
IFT_CHANNEL	net/if_types.h	115;"	d
IFT_CNR	net/if_types.h	130;"	d
IFT_COFFEE	net/if_types.h	177;"	d
IFT_COMPOSITELINK	net/if_types.h	200;"	d
IFT_DCN	net/if_types.h	186;"	d
IFT_DIGITALPOWERLINE	net/if_types.h	183;"	d
IFT_DIGITALWRAPPEROVERHEADCHANNEL	net/if_types.h	231;"	d
IFT_DLSW	net/if_types.h	119;"	d
IFT_DOCSCABLEDOWNSTREAM	net/if_types.h	173;"	d
IFT_DOCSCABLEMACLAYER	net/if_types.h	172;"	d
IFT_DOCSCABLEUPSTREAM	net/if_types.h	174;"	d
IFT_DS0	net/if_types.h	126;"	d
IFT_DS0BUNDLE	net/if_types.h	127;"	d
IFT_DS1FDL	net/if_types.h	215;"	d
IFT_DS3	net/if_types.h	75;"	d
IFT_DTM	net/if_types.h	185;"	d
IFT_DVBASILN	net/if_types.h	217;"	d
IFT_DVBASIOUT	net/if_types.h	218;"	d
IFT_DVBRCCDOWNSTREAM	net/if_types.h	192;"	d
IFT_DVBRCCMACLAYER	net/if_types.h	191;"	d
IFT_DVBRCCUPSTREAM	net/if_types.h	193;"	d
IFT_EON	net/if_types.h	70;"	d
IFT_EPLRS	net/if_types.h	132;"	d
IFT_ESCON	net/if_types.h	118;"	d
IFT_ETHER	net/if_types.h	51;"	d
IFT_FAITH	net/if_types.h	248;"	d
IFT_FAST	net/if_types.h	170;"	d
IFT_FASTETHER	net/if_types.h	107;"	d
IFT_FASTETHERFX	net/if_types.h	114;"	d
IFT_FDDI	net/if_types.h	60;"	d
IFT_FIBRECHANNEL	net/if_types.h	101;"	d
IFT_FRAMERELAYINTERCONNECT	net/if_types.h	103;"	d
IFT_FRAMERELAYMPI	net/if_types.h	137;"	d
IFT_FRDLCIENDPT	net/if_types.h	238;"	d
IFT_FRELAY	net/if_types.h	77;"	d
IFT_FRELAYDCE	net/if_types.h	89;"	d
IFT_FRF16MFRBUNDLE	net/if_types.h	208;"	d
IFT_FRFORWARD	net/if_types.h	203;"	d
IFT_G703AT2MB	net/if_types.h	112;"	d
IFT_G703AT64K	net/if_types.h	111;"	d
IFT_GIF	net/if_types.h	246;"	d
IFT_GIGABITETHERNET	net/if_types.h	162;"	d
IFT_GR303IDT	net/if_types.h	223;"	d
IFT_GR303RDT	net/if_types.h	222;"	d
IFT_H323GATEKEEPER	net/if_types.h	209;"	d
IFT_H323PROXY	net/if_types.h	210;"	d
IFT_HDH1822	net/if_types.h	48;"	d
IFT_HDLC	net/if_types.h	163;"	d
IFT_HDSL2	net/if_types.h	213;"	d
IFT_HIPERLAN2	net/if_types.h	228;"	d
IFT_HIPPI	net/if_types.h	92;"	d
IFT_HIPPIINTERFACE	net/if_types.h	102;"	d
IFT_HOSTPAD	net/if_types.h	135;"	d
IFT_HSSI	net/if_types.h	91;"	d
IFT_HY	net/if_types.h	59;"	d
IFT_IBM370PARCHAN	net/if_types.h	117;"	d
IFT_IDSL	net/if_types.h	199;"	d
IFT_IEEE1394	net/if_types.h	189;"	d
IFT_IEEE80211	net/if_types.h	116;"	d
IFT_IEEE80212	net/if_types.h	100;"	d
IFT_IEEE8023ADLAG	net/if_types.h	206;"	d
IFT_IFGSN	net/if_types.h	190;"	d
IFT_IMT	net/if_types.h	235;"	d
IFT_INTERLEAVE	net/if_types.h	169;"	d
IFT_IP	net/if_types.h	171;"	d
IFT_IPFORWARD	net/if_types.h	187;"	d
IFT_IPOVERATM	net/if_types.h	159;"	d
IFT_IPOVERCDLC	net/if_types.h	154;"	d
IFT_IPOVERCLAW	net/if_types.h	155;"	d
IFT_IPSWITCH	net/if_types.h	123;"	d
IFT_ISDN	net/if_types.h	108;"	d
IFT_ISDNBASIC	net/if_types.h	65;"	d
IFT_ISDNPRIMARY	net/if_types.h	66;"	d
IFT_ISDNS	net/if_types.h	120;"	d
IFT_ISDNU	net/if_types.h	121;"	d
IFT_ISO88022LLC	net/if_types.h	86;"	d
IFT_ISO88023	net/if_types.h	52;"	d
IFT_ISO88024	net/if_types.h	53;"	d
IFT_ISO88025	net/if_types.h	54;"	d
IFT_ISO88025CRFPINT	net/if_types.h	143;"	d
IFT_ISO88025DTR	net/if_types.h	131;"	d
IFT_ISO88025FIBER	net/if_types.h	160;"	d
IFT_ISO88026	net/if_types.h	55;"	d
IFT_ISUP	net/if_types.h	224;"	d
IFT_L2VLAN	net/if_types.h	180;"	d
IFT_L3IPVLAN	net/if_types.h	181;"	d
IFT_L3IPXVLAN	net/if_types.h	182;"	d
IFT_LAPB	net/if_types.h	61;"	d
IFT_LAPD	net/if_types.h	122;"	d
IFT_LAPF	net/if_types.h	164;"	d
IFT_LOCALTALK	net/if_types.h	87;"	d
IFT_LOOP	net/if_types.h	69;"	d
IFT_MEDIAMAILOVERIP	net/if_types.h	184;"	d
IFT_MFSIGLINK	net/if_types.h	212;"	d
IFT_MIOX25	net/if_types.h	83;"	d
IFT_MODEM	net/if_types.h	93;"	d
IFT_MPC	net/if_types.h	158;"	d
IFT_MPLS	net/if_types.h	211;"	d
IFT_MPLSTUNNEL	net/if_types.h	195;"	d
IFT_MSDSL	net/if_types.h	188;"	d
IFT_MVL	net/if_types.h	236;"	d
IFT_MYRINET	net/if_types.h	144;"	d
IFT_NFAS	net/if_types.h	220;"	d
IFT_NSIP	net/if_types.h	72;"	d
IFT_OPTICALCHANNEL	net/if_types.h	240;"	d
IFT_OPTICALTRANSPORT	net/if_types.h	241;"	d
IFT_OTHER	net/if_types.h	46;"	d
IFT_P10	net/if_types.h	57;"	d
IFT_P80	net/if_types.h	58;"	d
IFT_PARA	net/if_types.h	79;"	d
IFT_PFLOG	net/if_types.h	249;"	d
IFT_PFSYNC	net/if_types.h	250;"	d
IFT_PLC	net/if_types.h	219;"	d
IFT_POS	net/if_types.h	216;"	d
IFT_PPP	net/if_types.h	68;"	d
IFT_PPPMULTILINKBUNDLE	net/if_types.h	153;"	d
IFT_PROPBWAP2MP	net/if_types.h	229;"	d
IFT_PROPCNLS	net/if_types.h	134;"	d
IFT_PROPDOCSWIRELESSDOWNSTREAM	net/if_types.h	226;"	d
IFT_PROPDOCSWIRELESSMACLAYER	net/if_types.h	225;"	d
IFT_PROPDOCSWIRELESSUPSTREAM	net/if_types.h	227;"	d
IFT_PROPMUX	net/if_types.h	99;"	d
IFT_PROPVIRTUAL	net/if_types.h	98;"	d
IFT_PROPWIRELESSP2P	net/if_types.h	202;"	d
IFT_PTPSERIAL	net/if_types.h	67;"	d
IFT_PVC	net/if_types.h	247;"	d
IFT_QLLC	net/if_types.h	113;"	d
IFT_RADIOMAC	net/if_types.h	233;"	d
IFT_RADSL	net/if_types.h	140;"	d
IFT_REACHDSL	net/if_types.h	237;"	d
IFT_RFC1483	net/if_types.h	204;"	d
IFT_RS232	net/if_types.h	78;"	d
IFT_RSRB	net/if_types.h	124;"	d
IFT_SDLC	net/if_types.h	62;"	d
IFT_SDSL	net/if_types.h	141;"	d
IFT_SHDSL	net/if_types.h	214;"	d
IFT_SIP	net/if_types.h	76;"	d
IFT_SLIP	net/if_types.h	73;"	d
IFT_SMDSDXI	net/if_types.h	88;"	d
IFT_SMDSICIP	net/if_types.h	97;"	d
IFT_SONET	net/if_types.h	84;"	d
IFT_SONETOVERHEADCHANNEL	net/if_types.h	230;"	d
IFT_SONETPATH	net/if_types.h	95;"	d
IFT_SONETVT	net/if_types.h	96;"	d
IFT_SRP	net/if_types.h	196;"	d
IFT_SS7SIGLINK	net/if_types.h	201;"	d
IFT_STACKTOSTACK	net/if_types.h	156;"	d
IFT_STARLAN	net/if_types.h	56;"	d
IFT_STF	net/if_types.h	243;"	d
IFT_T1	net/if_types.h	63;"	d
IFT_TDLC	net/if_types.h	161;"	d
IFT_TERMPAD	net/if_types.h	136;"	d
IFT_TR008	net/if_types.h	221;"	d
IFT_TRANSPHDLC	net/if_types.h	168;"	d
IFT_TUNNEL	net/if_types.h	176;"	d
IFT_ULTRA	net/if_types.h	74;"	d
IFT_USB	net/if_types.h	205;"	d
IFT_V11	net/if_types.h	109;"	d
IFT_V35	net/if_types.h	90;"	d
IFT_V36	net/if_types.h	110;"	d
IFT_V37	net/if_types.h	165;"	d
IFT_VDSL	net/if_types.h	142;"	d
IFT_VIRTUALIPADDRESS	net/if_types.h	157;"	d
IFT_VOICEEM	net/if_types.h	145;"	d
IFT_VOICEENCAP	net/if_types.h	148;"	d
IFT_VOICEFXO	net/if_types.h	146;"	d
IFT_VOICEFXS	net/if_types.h	147;"	d
IFT_VOICEOVERATM	net/if_types.h	197;"	d
IFT_VOICEOVERFRAMERELAY	net/if_types.h	198;"	d
IFT_VOICEOVERIP	net/if_types.h	149;"	d
IFT_X213	net/if_types.h	138;"	d
IFT_X25	net/if_types.h	50;"	d
IFT_X25DDN	net/if_types.h	49;"	d
IFT_X25HUNTGROUP	net/if_types.h	167;"	d
IFT_X25MLP	net/if_types.h	166;"	d
IFT_X25PLE	net/if_types.h	85;"	d
IFT_XETHER	net/if_types.h	71;"	d
IF_DEQUEUE	net/if_var.h	194;"	d
IF_DROP	net/if_var.h	174;"	d
IF_ENQUEUE	net/if_var.h	176;"	d
IF_FW_F_VIAHACK	netinet/ip_fw.h	144;"	d
IF_Gbps	net/if.h	164;"	d
IF_Kbps	net/if.h	162;"	d
IF_MAXUNIT	net/if.h	76;"	d
IF_Mbps	net/if.h	163;"	d
IF_NAMESIZE	net/if.h	73;"	d
IF_PREPEND	net/if_var.h	186;"	d
IF_QFULL	net/if_var.h	173;"	d
IGMPCTL_MAXID	netinet/igmp_var.h	99;"	d
IGMPCTL_NAMES	netinet/igmp_var.h	101;"	d
IGMPCTL_STATS	netinet/igmp_var.h	98;"	d
IGMPMSG_NOCACHE	netinet/ip_mroute.h	210;"	d
IGMPMSG_WRONGVIF	netinet/ip_mroute.h	211;"	d
IGMP_AGE_THRESHOLD	netinet/igmp_var.h	82;"	d
IGMP_DVMRP	netinet/igmp.h	73;"	d
IGMP_HOST_LEAVE_MESSAGE	netinet/igmp.h	95;"	d
IGMP_HOST_MEMBERSHIP_QUERY	netinet/igmp.h	92;"	d
IGMP_HOST_MEMBERSHIP_REPORT	netinet/igmp.h	93;"	d
IGMP_HOST_NEW_MEMBERSHIP_REPORT	netinet/igmp.h	94;"	d
IGMP_IREPORTEDLAST	netinet/igmp_var.h	68;"	d
IGMP_MAX_HOST_REPORT_DELAY	netinet/igmp.h	79;"	d
IGMP_MEMBERSHIP_QUERY	netinet/igmp.h	68;"	d
IGMP_MINLEN	netinet/igmp.h	63;"	d
IGMP_MTRACE	netinet/igmp.h	77;"	d
IGMP_MTRACE_RESP	netinet/igmp.h	76;"	d
IGMP_OTHERMEMBER	netinet/igmp_var.h	67;"	d
IGMP_PIM	netinet/igmp.h	74;"	d
IGMP_RANDOM_DELAY	netinet/igmp_var.h	62;"	d
IGMP_TIMER_SCALE	netinet/igmp.h	84;"	d
IGMP_V1_MEMBERSHIP_REPORT	netinet/igmp.h	69;"	d
IGMP_V1_ROUTER	netinet/igmp_var.h	75;"	d
IGMP_V2_LEAVE_GROUP	netinet/igmp.h	71;"	d
IGMP_V2_MEMBERSHIP_REPORT	netinet/igmp.h	70;"	d
IGMP_V2_ROUTER	netinet/igmp_var.h	76;"	d
IN6ADDRSZ	arpa/nameser_compat.h	110;"	d
INA	netinet/ip_input.c	1000;"	d	file:
INADDRSZ	arpa/nameser_compat.h	109;"	d
INADDR_ALLHOSTS_GROUP	netinet/in.h	300;"	d
INADDR_ALLRTRS_GROUP	netinet/in.h	301;"	d
INADDR_ANY	netinet/in.h	51;"	d
INADDR_BROADCAST	netinet/in.h	52;"	d
INADDR_LOOPBACK	netinet/in.h	293;"	d
INADDR_MAX_LOCAL_GROUP	netinet/in.h	302;"	d
INADDR_NONE	netinet/in.h	296;"	d
INADDR_TO_IFP	netinet/in_var.h	97;"	d
INADDR_UNSPEC_GROUP	netinet/in.h	299;"	d
INCR	net/slcompress.c	60;"	d	file:
INCR	net/slcompress.c	62;"	d	file:
INDIR_MASK	arpa/nameser_compat.h	111;"	d
INET	rtems/rtems_bsdnet.h	24;"	d
INET	rtems/rtems_bsdnet.h	31;"	d
INET6_ADDRSTRLEN	arpa/inet.h	70;"	d
INET_ADDRSTRLEN	arpa/inet.h	69;"	d
INET_ADDRSTRLEN	netinet/in.h	204;"	d
INFTIM	sys/poll.h	92;"	d
INITKMEMNAMES	sys/malloc.h	135;"	d
INPLOOKUP_WILDCARD	netinet/in_pcb.h	127;"	d
INP_ANONPORT	netinet/in_pcb.h	122;"	d
INP_CONTROLOPTS	netinet/in_pcb.h	124;"	d
INP_HDRINCL	netinet/in_pcb.h	119;"	d
INP_HIGHPORT	netinet/in_pcb.h	120;"	d
INP_INFO_RLOCK	netinet/tcp_subr.c	443;"	d	file:
INP_INFO_RLOCK	netinet/udp_usrreq.c	460;"	d	file:
INP_INFO_RUNLOCK	netinet/tcp_subr.c	444;"	d	file:
INP_INFO_RUNLOCK	netinet/udp_usrreq.c	461;"	d	file:
INP_LOCK	netinet/tcp_subr.c	445;"	d	file:
INP_LOCK	netinet/udp_usrreq.c	462;"	d	file:
INP_LOWPORT	netinet/in_pcb.h	121;"	d
INP_PCBHASH	netinet/in_pcb.h	112;"	d
INP_RECVDSTADDR	netinet/in_pcb.h	118;"	d
INP_RECVIF	netinet/in_pcb.h	123;"	d
INP_RECVOPTS	netinet/in_pcb.h	116;"	d
INP_RECVRETOPTS	netinet/in_pcb.h	117;"	d
INP_UNLOCK	netinet/tcp_subr.c	446;"	d	file:
INP_UNLOCK	netinet/udp_usrreq.c	463;"	d	file:
INSIZ	netinet/ip_mroute.c	183;"	d	file:
INT16SZ	arpa/nameser_compat.h	108;"	d
INT32SZ	arpa/nameser_compat.h	107;"	d
INTERNAL_MARK	sys/syslog.h	66;"	d
INTERNAL_NOPRI	sys/syslog.h	64;"	d
IN_BADCLASS	netinet/in.h	291;"	d
IN_CLASSA	netinet/in.h	267;"	d
IN_CLASSA_HOST	netinet/in.h	270;"	d
IN_CLASSA_MAX	netinet/in.h	271;"	d
IN_CLASSA_NET	netinet/in.h	268;"	d
IN_CLASSA_NSHIFT	netinet/in.h	269;"	d
IN_CLASSB	netinet/in.h	273;"	d
IN_CLASSB_HOST	netinet/in.h	276;"	d
IN_CLASSB_MAX	netinet/in.h	277;"	d
IN_CLASSB_NET	netinet/in.h	274;"	d
IN_CLASSB_NSHIFT	netinet/in.h	275;"	d
IN_CLASSC	netinet/in.h	279;"	d
IN_CLASSC_HOST	netinet/in.h	282;"	d
IN_CLASSC_NET	netinet/in.h	280;"	d
IN_CLASSC_NSHIFT	netinet/in.h	281;"	d
IN_CLASSD	netinet/in.h	284;"	d
IN_CLASSD_HOST	netinet/in.h	287;"	d
IN_CLASSD_NET	netinet/in.h	285;"	d
IN_CLASSD_NSHIFT	netinet/in.h	286;"	d
IN_EXPERIMENTAL	netinet/in.h	290;"	d
IN_FIRST_MULTI	netinet/in_var.h	223;"	d
IN_LNAOF	netinet/in_var.h	83;"	d
IN_LOOKUP_MULTI	netinet/in_var.h	182;"	d
IN_LOOPBACKNET	netinet/in.h	304;"	d
IN_MULTICAST	netinet/in.h	288;"	d
IN_NEXT_MULTI	netinet/in_var.h	206;"	d
IO_RETRY_LIMIT	lib/tftpDriver.c	54;"	d	file:
IPCTL_ACCEPTSOURCEROUTE	netinet/in.h	412;"	d
IPCTL_DEFMTU	netinet/in.h	403;"	d
IPCTL_DEFTTL	netinet/in.h	401;"	d
IPCTL_DIRECTEDBROADCAST	netinet/in.h	409;"	d
IPCTL_FORWARDING	netinet/in.h	399;"	d
IPCTL_INTRQDROPS	netinet/in.h	411;"	d
IPCTL_INTRQMAXLEN	netinet/in.h	410;"	d
IPCTL_MAXID	netinet/in.h	413;"	d
IPCTL_NAMES	netinet/in.h	415;"	d
IPCTL_RTEXPIRE	netinet/in.h	405;"	d
IPCTL_RTMAXCACHE	netinet/in.h	407;"	d
IPCTL_RTMINEXPIRE	netinet/in.h	406;"	d
IPCTL_SENDREDIRECTS	netinet/in.h	400;"	d
IPCTL_SOURCEROUTE	netinet/in.h	408;"	d
IPDEFTTL	netinet/ip.h	215;"	d
IPFRAGTTL	netinet/ip.h	216;"	d
IPOPT_CIPSO	netinet/ip.h	158;"	d
IPOPT_CLASS	netinet/ip.h	142;"	d
IPOPT_CONTROL	netinet/ip.h	145;"	d
IPOPT_COPIED	netinet/ip.h	141;"	d
IPOPT_DEBMEAS	netinet/ip.h	147;"	d
IPOPT_EOL	netinet/ip.h	150;"	d
IPOPT_ESO	netinet/ip.h	157;"	d
IPOPT_LSRR	netinet/ip.h	156;"	d
IPOPT_MINOFF	netinet/ip.h	169;"	d
IPOPT_NOP	netinet/ip.h	151;"	d
IPOPT_NUMBER	netinet/ip.h	143;"	d
IPOPT_OFFSET	netinet/ip.h	168;"	d
IPOPT_OLEN	netinet/ip.h	167;"	d
IPOPT_OPTVAL	netinet/ip.h	166;"	d
IPOPT_RA	netinet/ip.h	161;"	d
IPOPT_RESERVED1	netinet/ip.h	146;"	d
IPOPT_RESERVED2	netinet/ip.h	148;"	d
IPOPT_RR	netinet/ip.h	153;"	d
IPOPT_SATID	netinet/ip.h	159;"	d
IPOPT_SECURITY	netinet/ip.h	155;"	d
IPOPT_SECUR_CONFID	netinet/ip.h	204;"	d
IPOPT_SECUR_EFTO	netinet/ip.h	205;"	d
IPOPT_SECUR_MMMM	netinet/ip.h	206;"	d
IPOPT_SECUR_RESTR	netinet/ip.h	207;"	d
IPOPT_SECUR_SECRET	netinet/ip.h	208;"	d
IPOPT_SECUR_TOPSECRET	netinet/ip.h	209;"	d
IPOPT_SECUR_UNCLASS	netinet/ip.h	203;"	d
IPOPT_SSRR	netinet/ip.h	160;"	d
IPOPT_TS	netinet/ip.h	154;"	d
IPOPT_TS_PRESPEC	netinet/ip.h	200;"	d
IPOPT_TS_TSANDADDR	netinet/ip.h	199;"	d
IPOPT_TS_TSONLY	netinet/ip.h	198;"	d
IPPORT_BOOTPC	nfs/bootp_subr.c	107;"	d	file:
IPPORT_BOOTPS	nfs/bootp_subr.c	108;"	d	file:
IPPORT_HIFIRSTAUTO	netinet/in.h	252;"	d
IPPORT_HILASTAUTO	netinet/in.h	253;"	d
IPPORT_RESERVED	netinet/in.h	246;"	d
IPPORT_RESERVEDSTART	netinet/in.h	261;"	d
IPPORT_USERRESERVED	netinet/in.h	247;"	d
IPPROTO_3PC	netinet/in.h	121;"	d
IPPROTO_ADFS	netinet/in.h	155;"	d
IPPROTO_AH	netinet/in.h	138;"	d
IPPROTO_AHIP	netinet/in.h	148;"	d
IPPROTO_APES	netinet/in.h	186;"	d
IPPROTO_ARGUS	netinet/in.h	101;"	d
IPPROTO_AX25	netinet/in.h	180;"	d
IPPROTO_BHA	netinet/in.h	136;"	d
IPPROTO_BLT	netinet/in.h	117;"	d
IPPROTO_BRSATMON	netinet/in.h	163;"	d
IPPROTO_CARP	netinet/in.h	191;"	d
IPPROTO_CFTP	netinet/in.h	149;"	d
IPPROTO_CHAOS	netinet/in.h	104;"	d
IPPROTO_CMTP	netinet/in.h	125;"	d
IPPROTO_CPHB	netinet/in.h	160;"	d
IPPROTO_CPNX	netinet/in.h	159;"	d
IPPROTO_DDP	netinet/in.h	124;"	d
IPPROTO_DGP	netinet/in.h	173;"	d
IPPROTO_DIVERT	netinet/in.h	196;"	d
IPPROTO_DSTOPTS	netinet/in.h	147;"	d
IPPROTO_EGP	netinet/in.h	96;"	d
IPPROTO_EMCON	netinet/in.h	102;"	d
IPPROTO_ENCAP	netinet/in.h	185;"	d
IPPROTO_EON	netinet/in.h	167;"	d
IPPROTO_ESP	netinet/in.h	137;"	d
IPPROTO_ETHERIP	netinet/in.h	184;"	d
IPPROTO_FRAGMENT	netinet/in.h	131;"	d
IPPROTO_GGP	netinet/in.h	92;"	d
IPPROTO_GMTP	netinet/in.h	187;"	d
IPPROTO_GRE	netinet/in.h	134;"	d
IPPROTO_HELLO	netinet/in.h	150;"	d
IPPROTO_HMP	netinet/in.h	107;"	d
IPPROTO_HOPOPTS	netinet/in.h	90;"	d
IPPROTO_ICMP	netinet/in.h	47;"	d
IPPROTO_ICMPV6	netinet/in.h	145;"	d
IPPROTO_IDP	netinet/in.h	109;"	d
IPPROTO_IDPR	netinet/in.h	122;"	d
IPPROTO_IDRP	netinet/in.h	132;"	d
IPPROTO_IGMP	netinet/in.h	91;"	d
IPPROTO_IGP	netinet/in.h	172;"	d
IPPROTO_IGRP	netinet/in.h	175;"	d
IPPROTO_IL	netinet/in.h	127;"	d
IPPROTO_INLSP	netinet/in.h	139;"	d
IPPROTO_INP	netinet/in.h	119;"	d
IPPROTO_IP	netinet/in.h	46;"	d
IPPROTO_IPCOMP	netinet/in.h	188;"	d
IPPROTO_IPCV	netinet/in.h	158;"	d
IPPROTO_IPEIP	netinet/in.h	181;"	d
IPPROTO_IPIP	netinet/in.h	94;"	d
IPPROTO_IPPC	netinet/in.h	154;"	d
IPPROTO_IPV4	netinet/in.h	93;"	d
IPPROTO_IPV6	netinet/in.h	128;"	d
IPPROTO_IRTP	netinet/in.h	115;"	d
IPPROTO_KRYPTOLAN	netinet/in.h	152;"	d
IPPROTO_LARP	netinet/in.h	178;"	d
IPPROTO_LEAF1	netinet/in.h	112;"	d
IPPROTO_LEAF2	netinet/in.h	113;"	d
IPPROTO_MAX	netinet/in.h	198;"	d
IPPROTO_MAXID	netinet/in.h	368;"	d
IPPROTO_MEAS	netinet/in.h	106;"	d
IPPROTO_MHRP	netinet/in.h	135;"	d
IPPROTO_MICP	netinet/in.h	182;"	d
IPPROTO_MOBILE	netinet/in.h	142;"	d
IPPROTO_MTP	netinet/in.h	179;"	d
IPPROTO_MUX	netinet/in.h	105;"	d
IPPROTO_ND	netinet/in.h	164;"	d
IPPROTO_NHRP	netinet/in.h	141;"	d
IPPROTO_NONE	netinet/in.h	146;"	d
IPPROTO_NSP	netinet/in.h	118;"	d
IPPROTO_NVPII	netinet/in.h	99;"	d
IPPROTO_OSPFIGP	netinet/in.h	176;"	d
IPPROTO_PFSYNC	netinet/in.h	193;"	d
IPPROTO_PGM	netinet/in.h	192;"	d
IPPROTO_PIGP	netinet/in.h	97;"	d
IPPROTO_PIM	netinet/in.h	190;"	d
IPPROTO_PRM	netinet/in.h	108;"	d
IPPROTO_PUP	netinet/in.h	100;"	d
IPPROTO_PVP	netinet/in.h	162;"	d
IPPROTO_RAW	netinet/in.h	197;"	d
IPPROTO_RCCMON	netinet/in.h	98;"	d
IPPROTO_RDP	netinet/in.h	114;"	d
IPPROTO_ROUTING	netinet/in.h	130;"	d
IPPROTO_RSVP	netinet/in.h	133;"	d
IPPROTO_RVD	netinet/in.h	153;"	d
IPPROTO_SATEXPAK	netinet/in.h	151;"	d
IPPROTO_SATMON	netinet/in.h	156;"	d
IPPROTO_SCCSP	netinet/in.h	183;"	d
IPPROTO_SDRP	netinet/in.h	129;"	d
IPPROTO_SEP	netinet/in.h	120;"	d
IPPROTO_SKIP	netinet/in.h	144;"	d
IPPROTO_SRPC	netinet/in.h	177;"	d
IPPROTO_ST	netinet/in.h	95;"	d
IPPROTO_SVMTP	netinet/in.h	169;"	d
IPPROTO_SWIPE	netinet/in.h	140;"	d
IPPROTO_TCF	netinet/in.h	174;"	d
IPPROTO_TCP	netinet/in.h	48;"	d
IPPROTO_TLSP	netinet/in.h	143;"	d
IPPROTO_TP	netinet/in.h	116;"	d
IPPROTO_TPXX	netinet/in.h	126;"	d
IPPROTO_TRUNK1	netinet/in.h	110;"	d
IPPROTO_TRUNK2	netinet/in.h	111;"	d
IPPROTO_TTP	netinet/in.h	171;"	d
IPPROTO_UDP	netinet/in.h	49;"	d
IPPROTO_VINES	netinet/in.h	170;"	d
IPPROTO_VISA	netinet/in.h	157;"	d
IPPROTO_VMTP	netinet/in.h	168;"	d
IPPROTO_WBEXPAK	netinet/in.h	166;"	d
IPPROTO_WBMON	netinet/in.h	165;"	d
IPPROTO_WSN	netinet/in.h	161;"	d
IPPROTO_XNET	netinet/in.h	103;"	d
IPPROTO_XTP	netinet/in.h	123;"	d
IPREASS_HASH	netinet/ip_input.c	122;"	d	file:
IPREASS_HMASK	netinet/ip_input.c	121;"	d	file:
IPREASS_NHASH	netinet/ip_input.c	120;"	d	file:
IPREASS_NHASH_LOG2	netinet/ip_input.c	119;"	d	file:
IPSEC	netinet/ip_icmp.c	72;"	d	file:
IPTOS_CE	netinet/ip.h	112;"	d
IPTOS_ECN_CE	netinet/ip.h	135;"	d
IPTOS_ECN_ECT0	netinet/ip.h	134;"	d
IPTOS_ECN_ECT1	netinet/ip.h	133;"	d
IPTOS_ECN_MASK	netinet/ip.h	136;"	d
IPTOS_ECN_NOTECT	netinet/ip.h	132;"	d
IPTOS_ECT	netinet/ip.h	113;"	d
IPTOS_LOWDELAY	netinet/ip.h	106;"	d
IPTOS_MINCOST	netinet/ip.h	109;"	d
IPTOS_PREC_CRITIC_ECP	netinet/ip.h	121;"	d
IPTOS_PREC_FLASH	netinet/ip.h	123;"	d
IPTOS_PREC_FLASHOVERRIDE	netinet/ip.h	122;"	d
IPTOS_PREC_IMMEDIATE	netinet/ip.h	124;"	d
IPTOS_PREC_INTERNETCONTROL	netinet/ip.h	120;"	d
IPTOS_PREC_NETCONTROL	netinet/ip.h	119;"	d
IPTOS_PREC_PRIORITY	netinet/ip.h	125;"	d
IPTOS_PREC_ROUTINE	netinet/ip.h	126;"	d
IPTOS_RELIABILITY	netinet/ip.h	108;"	d
IPTOS_THROUGHPUT	netinet/ip.h	107;"	d
IPTTLDEC	netinet/ip.h	217;"	d
IPVERSION	netinet/ip.h	45;"	d
IP_ADD_MEMBERSHIP	netinet/in.h	322;"	d
IP_ALLOWBROADCAST	netinet/ip_var.h	164;"	d
IP_DEFAULT_MULTICAST_LOOP	netinet/in.h	343;"	d
IP_DEFAULT_MULTICAST_TTL	netinet/in.h	342;"	d
IP_DF	netinet/ip.h	81;"	d
IP_DROP_MEMBERSHIP	netinet/in.h	323;"	d
IP_FORWARDING	netinet/ip_var.h	160;"	d
IP_FW_ADD	netinet/in.h	332;"	d
IP_FW_DEL	netinet/in.h	333;"	d
IP_FW_FLUSH	netinet/in.h	334;"	d
IP_FW_F_ACCEPT	netinet/ip_fw.h	110;"	d
IP_FW_F_COMMAND	netinet/ip_fw.h	107;"	d
IP_FW_F_COUNT	netinet/ip_fw.h	111;"	d
IP_FW_F_DENY	netinet/ip_fw.h	108;"	d
IP_FW_F_DIVERT	netinet/ip_fw.h	112;"	d
IP_FW_F_DRNG	netinet/ip_fw.h	122;"	d
IP_FW_F_FRAG	netinet/ip_fw.h	132;"	d
IP_FW_F_ICMPBIT	netinet/ip_fw.h	134;"	d
IP_FW_F_IIFACE	netinet/ip_fw.h	104;"	d
IP_FW_F_IIFNAME	netinet/ip_fw.h	126;"	d
IP_FW_F_IN	netinet/ip_fw.h	102;"	d
IP_FW_F_INVDST	netinet/ip_fw.h	130;"	d
IP_FW_F_INVSRC	netinet/ip_fw.h	129;"	d
IP_FW_F_MASK	netinet/ip_fw.h	136;"	d
IP_FW_F_OIFACE	netinet/ip_fw.h	105;"	d
IP_FW_F_OIFNAME	netinet/ip_fw.h	127;"	d
IP_FW_F_OUT	netinet/ip_fw.h	103;"	d
IP_FW_F_PRN	netinet/ip_fw.h	116;"	d
IP_FW_F_REJECT	netinet/ip_fw.h	109;"	d
IP_FW_F_SKIPTO	netinet/ip_fw.h	114;"	d
IP_FW_F_SRNG	netinet/ip_fw.h	118;"	d
IP_FW_F_TEE	netinet/ip_fw.h	113;"	d
IP_FW_GET	netinet/in.h	336;"	d
IP_FW_GETNDSTP	netinet/ip_fw.h	84;"	d
IP_FW_GETNSRCP	netinet/ip_fw.h	79;"	d
IP_FW_ICMPTYPES_DIM	netinet/ip_fw.h	63;"	d
IP_FW_IPOPT_LSRR	netinet/ip_fw.h	155;"	d
IP_FW_IPOPT_RR	netinet/ip_fw.h	157;"	d
IP_FW_IPOPT_SSRR	netinet/ip_fw.h	156;"	d
IP_FW_IPOPT_TS	netinet/ip_fw.h	158;"	d
IP_FW_MAX_PORTS	netinet/ip_fw.h	59;"	d
IP_FW_REJECT_RST	netinet/ip_fw.h	150;"	d
IP_FW_SETNDSTP	netinet/ip_fw.h	85;"	d
IP_FW_SETNSRCP	netinet/ip_fw.h	80;"	d
IP_FW_TCPF_ACK	netinet/ip_fw.h	167;"	d
IP_FW_TCPF_ESTAB	netinet/ip_fw.h	169;"	d
IP_FW_TCPF_FIN	netinet/ip_fw.h	163;"	d
IP_FW_TCPF_PSH	netinet/ip_fw.h	166;"	d
IP_FW_TCPF_RST	netinet/ip_fw.h	165;"	d
IP_FW_TCPF_SYN	netinet/ip_fw.h	164;"	d
IP_FW_TCPF_URG	netinet/ip_fw.h	168;"	d
IP_FW_ZERO	netinet/in.h	335;"	d
IP_HDRINCL	netinet/in.h	311;"	d
IP_HDR_LEN	netinet/ip_mroute.c	1061;"	d	file:
IP_MAKE_VHL	netinet/ip.h	91;"	d
IP_MAXPACKET	netinet/ip.h	101;"	d
IP_MAX_MEMBERSHIPS	netinet/in.h	344;"	d
IP_MF	netinet/ip.h	82;"	d
IP_MSS	netinet/ip.h	219;"	d
IP_MULTICAST_IF	netinet/in.h	319;"	d
IP_MULTICAST_LOOP	netinet/in.h	321;"	d
IP_MULTICAST_TTL	netinet/in.h	320;"	d
IP_MULTICAST_VIF	netinet/in.h	324;"	d
IP_NAT	netinet/in.h	337;"	d
IP_NAT_IN	netinet/in.h	454;"	d
IP_NAT_OUT	netinet/in.h	455;"	d
IP_OFFMASK	netinet/ip.h	83;"	d
IP_OPTIONS	netinet/in.h	310;"	d
IP_PORTRANGE	netinet/in.h	329;"	d
IP_PORTRANGE_DEFAULT	netinet/in.h	358;"	d
IP_PORTRANGE_HIGH	netinet/in.h	359;"	d
IP_PORTRANGE_LOW	netinet/in.h	360;"	d
IP_RAWOUTPUT	netinet/ip_var.h	161;"	d
IP_RECVDSTADDR	netinet/in.h	316;"	d
IP_RECVIF	netinet/in.h	330;"	d
IP_RECVOPTS	netinet/in.h	314;"	d
IP_RECVRETOPTS	netinet/in.h	315;"	d
IP_RETOPTS	netinet/in.h	318;"	d
IP_RF	netinet/ip.h	80;"	d
IP_ROUTETOIF	netinet/ip_var.h	163;"	d
IP_RSVP_OFF	netinet/in.h	326;"	d
IP_RSVP_ON	netinet/in.h	325;"	d
IP_RSVP_VIF_OFF	netinet/in.h	328;"	d
IP_RSVP_VIF_ON	netinet/in.h	327;"	d
IP_SENDONES	netinet/ip_var.h	162;"	d
IP_SENDSRCADDR	netinet/in.h	317;"	d
IP_TOS	netinet/in.h	312;"	d
IP_TTL	netinet/in.h	313;"	d
IP_VHL_BORING	netinet/ip.h	94;"	d
IP_VHL_HL	netinet/ip.h	92;"	d
IP_VHL_V	netinet/ip.h	93;"	d
IQUERY	arpa/nameser_compat.h	120;"	d
ISSORTMASK	libc/res_init.c	101;"	d	file:
IS_COLDFIRE	netinet/in_cksum_m68k.h	40;"	d
IS_COLDFIRE	netinet/in_cksum_m68k.h	42;"	d
KASSERT	net/raw_cb.c	56;"	d	file:
KERN_ARGMAX	sys/sysctl.h	336;"	d
KERN_BOOTFILE	sys/sysctl.h	354;"	d
KERN_BOOTTIME	sys/sysctl.h	349;"	d
KERN_CLOCKRATE	sys/sysctl.h	340;"	d
KERN_DUMMY	sys/sysctl.h	359;"	d
KERN_DUMPDEV	sys/sysctl.h	357;"	d
KERN_FAILURE	vm/vm_param.h	113;"	d
KERN_FILE	sys/sysctl.h	343;"	d
KERN_HOSTID	sys/sysctl.h	339;"	d
KERN_HOSTNAME	sys/sysctl.h	338;"	d
KERN_INVALID_ADDRESS	vm/vm_param.h	109;"	d
KERN_INVALID_ARGUMENT	vm/vm_param.h	112;"	d
KERN_IOV_MAX	sys/sysctl.h	363;"	d
KERN_IPC	sys/sysctl.h	358;"	d
KERN_JOB_CONTROL	sys/sysctl.h	347;"	d
KERN_LOGSIGEXIT	sys/sysctl.h	362;"	d
KERN_MAXFILES	sys/sysctl.h	335;"	d
KERN_MAXFILESPERPROC	sys/sysctl.h	355;"	d
KERN_MAXID	sys/sysctl.h	364;"	d
KERN_MAXPROC	sys/sysctl.h	334;"	d
KERN_MAXPROCPERUID	sys/sysctl.h	356;"	d
KERN_MAXVNODES	sys/sysctl.h	333;"	d
KERN_NGROUPS	sys/sysctl.h	346;"	d
KERN_NISDOMAINNAME	sys/sysctl.h	350;"	d
KERN_NOT_RECEIVER	vm/vm_param.h	115;"	d
KERN_NO_ACCESS	vm/vm_param.h	116;"	d
KERN_NO_SPACE	vm/vm_param.h	111;"	d
KERN_NTP_PLL	sys/sysctl.h	353;"	d
KERN_OSRELDATE	sys/sysctl.h	352;"	d
KERN_OSRELEASE	sys/sysctl.h	330;"	d
KERN_OSREV	sys/sysctl.h	331;"	d
KERN_OSTYPE	sys/sysctl.h	329;"	d
KERN_POSIX1	sys/sysctl.h	345;"	d
KERN_PROC	sys/sysctl.h	342;"	d
KERN_PROC_ALL	sys/sysctl.h	414;"	d
KERN_PROC_ARGS	sys/sysctl.h	421;"	d
KERN_PROC_GID	sys/sysctl.h	425;"	d
KERN_PROC_INC_THREAD	sys/sysctl.h	426;"	d
KERN_PROC_PGRP	sys/sysctl.h	416;"	d
KERN_PROC_PID	sys/sysctl.h	415;"	d
KERN_PROC_PROC	sys/sysctl.h	422;"	d
KERN_PROC_RGID	sys/sysctl.h	424;"	d
KERN_PROC_RUID	sys/sysctl.h	420;"	d
KERN_PROC_SESSION	sys/sysctl.h	417;"	d
KERN_PROC_SV_NAME	sys/sysctl.h	423;"	d
KERN_PROC_TTY	sys/sysctl.h	418;"	d
KERN_PROC_UID	sys/sysctl.h	419;"	d
KERN_PROF	sys/sysctl.h	344;"	d
KERN_PROTECTION_FAILURE	vm/vm_param.h	110;"	d
KERN_PS_STRINGS	sys/sysctl.h	360;"	d
KERN_RESOURCE_SHORTAGE	vm/vm_param.h	114;"	d
KERN_SAVED_IDS	sys/sysctl.h	348;"	d
KERN_SECURELVL	sys/sysctl.h	337;"	d
KERN_SUCCESS	vm/vm_param.h	108;"	d
KERN_UPDATEINTERVAL	sys/sysctl.h	351;"	d
KERN_USRSTACK	sys/sysctl.h	361;"	d
KERN_VERSION	sys/sysctl.h	332;"	d
KERN_VNODE	sys/sysctl.h	341;"	d
KINFO_BSDI_SYSINFO	kern/kern_sysctl.c	1342;"	d	file:
KINFO_CLOCKRATE	kern/kern_sysctl.c	1339;"	d	file:
KINFO_FILE	kern/kern_sysctl.c	1336;"	d	file:
KINFO_LOADAVG	kern/kern_sysctl.c	1338;"	d	file:
KINFO_METER	kern/kern_sysctl.c	1337;"	d	file:
KINFO_PROC	kern/kern_sysctl.c	1333;"	d	file:
KINFO_RT	kern/kern_sysctl.c	1334;"	d	file:
KINFO_VNODE	kern/kern_sysctl.c	1335;"	d	file:
KIPC_MAXSOCKBUF	sys/sysctl.h	434;"	d
KIPC_MAX_DATALEN	sys/sysctl.h	440;"	d
KIPC_MAX_HDR	sys/sysctl.h	439;"	d
KIPC_MAX_LINKHDR	sys/sysctl.h	437;"	d
KIPC_MAX_PROTOHDR	sys/sysctl.h	438;"	d
KIPC_SOCKBUF_WASTE	sys/sysctl.h	435;"	d
KIPC_SOMAXCONN	sys/sysctl.h	436;"	d
KMEMSTATS	sys/malloc.h	40;"	d
LD32_UNALGN	netinet/tcp_var.h	241;"	d
LDTMP	netinet/in_cksum_powerpc.h	21;"	d
LETTER	libc/linkaddr.c	55;"	d	file:
LINK_STATE_DOWN	net/if.h	155;"	d
LINK_STATE_UNKNOWN	net/if.h	154;"	d
LINK_STATE_UP	net/if.h	156;"	d
LLADDR	net/if_dl.h	70;"	d
LLC_DISC	net/if_llc.h	130;"	d
LLC_DISC_P	net/if_llc.h	131;"	d
LLC_DM	net/if_llc.h	138;"	d
LLC_DM_P	net/if_llc.h	139;"	d
LLC_FRMR	net/if_llc.h	136;"	d
LLC_FRMRLEN	net/if_llc.h	122;"	d
LLC_FRMR_P	net/if_llc.h	137;"	d
LLC_INFO	net/if_llc.h	155;"	d
LLC_ISFRAMELEN	net/if_llc.h	120;"	d
LLC_ISO_LSAP	net/if_llc.h	162;"	d
LLC_REJ	net/if_llc.h	150;"	d
LLC_RNR	net/if_llc.h	149;"	d
LLC_RR	net/if_llc.h	148;"	d
LLC_SABME	net/if_llc.h	142;"	d
LLC_SABME_P	net/if_llc.h	143;"	d
LLC_SNAPFRAMELEN	net/if_llc.h	123;"	d
LLC_SNAP_LSAP	net/if_llc.h	161;"	d
LLC_TEST	net/if_llc.h	134;"	d
LLC_TEST_P	net/if_llc.h	135;"	d
LLC_UA	net/if_llc.h	132;"	d
LLC_UA_P	net/if_llc.h	133;"	d
LLC_UFRAMELEN	net/if_llc.h	121;"	d
LLC_UI	net/if_llc.h	128;"	d
LLC_UI_P	net/if_llc.h	129;"	d
LLC_X25_LSAP	net/if_llc.h	160;"	d
LLC_XID	net/if_llc.h	140;"	d
LLC_XID_P	net/if_llc.h	141;"	d
LOAD	netinet/in_cksum_i386.h	24;"	d
LOAD	netinet/in_cksum_powerpc.h	35;"	d
LOCALDOMAINPARTS	resolv.h	119;"	d
LOCAL_CONNWAIT	sys/un.h	59;"	d
LOCAL_CREDS	sys/un.h	58;"	d
LOCAL_PEERCRED	sys/un.h	57;"	d
LOG_ALERT	sys/syslog.h	50;"	d
LOG_AUTH	sys/syslog.h	94;"	d
LOG_AUTHPRIV	sys/syslog.h	100;"	d
LOG_CONS	sys/syslog.h	168;"	d
LOG_CRIT	sys/syslog.h	51;"	d
LOG_CRON	sys/syslog.h	99;"	d
LOG_DAEMON	sys/syslog.h	93;"	d
LOG_DEBUG	sys/syslog.h	56;"	d
LOG_EMERG	sys/syslog.h	49;"	d
LOG_ERR	sys/syslog.h	52;"	d
LOG_FAC	sys/syslog.h	120;"	d
LOG_FACMASK	sys/syslog.h	118;"	d
LOG_FTP	sys/syslog.h	104;"	d
LOG_INFO	sys/syslog.h	55;"	d
LOG_KERN	sys/syslog.h	90;"	d
LOG_LOCAL0	sys/syslog.h	108;"	d
LOG_LOCAL1	sys/syslog.h	109;"	d
LOG_LOCAL2	sys/syslog.h	110;"	d
LOG_LOCAL3	sys/syslog.h	111;"	d
LOG_LOCAL4	sys/syslog.h	112;"	d
LOG_LOCAL5	sys/syslog.h	113;"	d
LOG_LOCAL6	sys/syslog.h	114;"	d
LOG_LOCAL7	sys/syslog.h	115;"	d
LOG_LPR	sys/syslog.h	96;"	d
LOG_MAIL	sys/syslog.h	92;"	d
LOG_MAKEPRI	sys/syslog.h	61;"	d
LOG_MASK	sys/syslog.h	158;"	d
LOG_NDELAY	sys/syslog.h	170;"	d
LOG_NEWS	sys/syslog.h	97;"	d
LOG_NFACILITIES	sys/syslog.h	117;"	d
LOG_NOTICE	sys/syslog.h	54;"	d
LOG_NOWAIT	sys/syslog.h	171;"	d
LOG_NTP	sys/syslog.h	105;"	d
LOG_ODELAY	sys/syslog.h	169;"	d
LOG_PERROR	sys/syslog.h	172;"	d
LOG_PID	sys/syslog.h	167;"	d
LOG_PRI	sys/syslog.h	60;"	d
LOG_PRIMASK	sys/syslog.h	58;"	d
LOG_PRINTF	sys/syslog.h	152;"	d
LOG_SYSLOG	sys/syslog.h	95;"	d
LOG_UPTO	sys/syslog.h	159;"	d
LOG_USER	sys/syslog.h	91;"	d
LOG_UUCP	sys/syslog.h	98;"	d
LOG_WARNING	sys/syslog.h	53;"	d
LOMTU	net/if_loop.c	93;"	d	file:
LOMTU	net/if_loop.c	95;"	d	file:
LOMTU	net/if_loop.c	97;"	d	file:
LogFacility	lib/syslog.c	/^static int LogFacility = LOG_USER;$/;"	v	file:
LogFd	lib/syslog.c	/^static int LogFd = -1;$/;"	v	file:
LogMask	lib/syslog.c	/^static int LogMask = 0xff;$/;"	v	file:
LogSemaphore	lib/syslog.c	/^static rtems_id LogSemaphore;$/;"	v	file:
LogStatus	lib/syslog.c	/^static int LogStatus = LOG_CONS;$/;"	v	file:
LogTag	lib/syslog.c	/^static const char *LogTag = "syslog";$/;"	v	file:
MAKEBOOTDEV	sys/reboot.h	100;"	d
MALLOC	sys/malloc.h	306;"	d
MALLOC	sys/malloc.h	311;"	d
MATCH	libc/res_init.c	253;"	d	file:
MAXADDRS	libc/gethostbydns.c	88;"	d	file:
MAXADDRS	libc/gethostbynis.c	47;"	d	file:
MAXADDRS	libc/getnetbynis.c	48;"	d	file:
MAXALIASES	libc/gethostbydns.c	87;"	d	file:
MAXALIASES	libc/gethostbyht.c	75;"	d	file:
MAXALIASES	libc/gethostbynis.c	46;"	d	file:
MAXALIASES	libc/getnetbydns.c	86;"	d	file:
MAXALIASES	libc/getnetbyht.c	60;"	d	file:
MAXALIASES	libc/getnetbynis.c	47;"	d	file:
MAXALIASES	libc/getprotoent.c	45;"	d	file:
MAXALIASES	libc/getservent.c	54;"	d	file:
MAXCDNAME	arpa/nameser_compat.h	102;"	d
MAXDFLSRCH	resolv.h	117;"	d
MAXDNAME	arpa/nameser_compat.h	101;"	d
MAXDNSRCH	resolv.h	118;"	d
MAXFIDSZ	sys/mount.h	48;"	d
MAXLABEL	arpa/nameser_compat.h	103;"	d
MAXNS	resolv.h	116;"	d
MAXPACKET	libc/gethostbydns.c	105;"	d	file:
MAXPACKET	libc/gethostbydns.c	107;"	d	file:
MAXPACKET	libc/getnetbydns.c	89;"	d	file:
MAXPACKET	libc/getnetbydns.c	91;"	d	file:
MAXPACKET	libc/res_query.c	94;"	d	file:
MAXPACKET	libc/res_query.c	96;"	d	file:
MAXQSIZE	netinet/ip_mroute.h	243;"	d
MAXRESOLVSORT	resolv.h	121;"	d
MAXTTL	netinet/ip.h	214;"	d
MAXVIFS	netinet/ip_mroute.h	83;"	d
MAX_BKT_SIZE	netinet/ip_mroute.h	242;"	d
MAX_DUMP_BYTES	net/if_ppp.c	1730;"	d	file:
MAX_DUMP_BYTES	net/ppp_tty.c	917;"	d	file:
MAX_HDR	net/slcompress.h	44;"	d
MAX_IPOPTLEN	netinet/ip_var.h	110;"	d
MAX_RESEND_DELAY	nfs/bootp_subr.c	86;"	d	file:
MAX_STATES	net/slcompress.h	43;"	d
MAX_SYSCTL_TRY	libc/getifaddrs.c	89;"	d	file:
MAX_UPQ	netinet/ip_mroute.h	237;"	d
MBTYPES	kern/uipc_mbuf.c	36;"	d	file:
MBUFLOCK	sys/mbuf.h	202;"	d
MBUF_MALLOC_MBUF	rtems/rtems_bsdnet.h	317;"	d
MBUF_MALLOC_MCLREFCNT	rtems/rtems_bsdnet.h	316;"	d
MBUF_MALLOC_NMBCLUSTERS	rtems/rtems_bsdnet.h	315;"	d
MCFail	kern/uipc_mbuf.c	/^static int MCFail;$/;"	v	file:
MCHTYPE	sys/mbuf.h	389;"	d
MCLALLOC	sys/mbuf.h	266;"	d
MCLFREE	sys/mbuf.h	288;"	d
MCLGET	sys/mbuf.h	277;"	d
MC_SEND	netinet/ip_mroute.c	1364;"	d	file:
MFCFIND	netinet/ip_mroute.c	324;"	d	file:
MFCHASH	netinet/ip_mroute.c	316;"	d	file:
MFCHASHMOD	netinet/ip_mroute.h	232;"	d
MFCHASHMOD	netinet/ip_mroute.h	234;"	d
MFCTBLSIZ	netinet/ip_mroute.h	230;"	d
MFREE	sys/mbuf.h	302;"	d
MFSNAMELEN	sys/mount.h	59;"	d
MGET	sys/mbuf.h	218;"	d
MGETHDR	sys/mbuf.h	238;"	d
MH	sys/mbuf.h	/^		} MH;$/;"	m	union:mbuf::__anon49	typeref:struct:mbuf::__anon49::__anon50
MHLEN	sys/mbuf.h	50;"	d
MH_ALIGN	sys/mbuf.h	347;"	d
MH_dat	sys/mbuf.h	/^			} MH_dat;$/;"	m	struct:mbuf::__anon49::__anon50	typeref:union:mbuf::__anon49::__anon50::__anon51
MH_databuf	sys/mbuf.h	/^				char	MH_databuf[MHLEN];$/;"	m	union:mbuf::__anon49::__anon50::__anon51
MH_ext	sys/mbuf.h	/^				struct	m_ext MH_ext;	\/* M_EXT set *\/$/;"	m	union:mbuf::__anon49::__anon50::__anon51	typeref:struct:mbuf::__anon49::__anon50::__anon51::m_ext
MH_pkthdr	sys/mbuf.h	/^			struct	pkthdr MH_pkthdr;	\/* M_PKTHDR set *\/$/;"	m	struct:mbuf::__anon49::__anon50	typeref:struct:mbuf::__anon49::__anon50::pkthdr
MII_1000TCR	rtems/rtems_mii_ioctl_kern.c	77;"	d	file:
MII_1000TSR	rtems/rtems_mii_ioctl_kern.c	81;"	d	file:
MII_100T2CR	dev/mii/mii.h	178;"	d
MII_100T2SR	dev/mii/mii.h	187;"	d
MII_ANAR	dev/mii/mii.h	122;"	d
MII_ANER	dev/mii/mii.h	163;"	d
MII_ANLPAR	dev/mii/mii.h	142;"	d
MII_ANLPRNP	dev/mii/mii.h	174;"	d
MII_ANNP	dev/mii/mii.h	171;"	d
MII_BMCR	dev/mii/mii.h	55;"	d
MII_BMSR	dev/mii/mii.h	73;"	d
MII_COMMAND_ACK	dev/mii/mii.h	53;"	d
MII_COMMAND_READ	dev/mii/mii.h	51;"	d
MII_COMMAND_START	dev/mii/mii.h	50;"	d
MII_COMMAND_WRITE	dev/mii/mii.h	52;"	d
MII_EXTSR	dev/mii/mii.h	197;"	d
MII_MODEL	dev/mii/mii.h	119;"	d
MII_NPHY	dev/mii/mii.h	44;"	d
MII_OUI	dev/mii/mii.h	118;"	d
MII_PHYIDR1	dev/mii/mii.h	111;"	d
MII_PHYIDR2	dev/mii/mii.h	113;"	d
MII_REV	dev/mii/mii.h	120;"	d
MINALLOCSIZE	sys/malloc.h	261;"	d
MINCLSIZE	sys/mbuf.h	51;"	d
MKDIR_MODE	rtems/mkrootfs.c	67;"	d	file:
MKFILE_MODE	nfs/bootp_subr.c	1176;"	d	file:
MKFILE_MODE	rtems/mkrootfs.c	66;"	d	file:
MKFILE_MODE	rtems/rtems_dhcp.c	1123;"	d	file:
MKFree	net/radix.h	101;"	d
MKGet	net/radix.h	94;"	d
MLEN	sys/mbuf.h	49;"	d
MNAMELEN	sys/mount.h	60;"	d
MNT_ASYNC	sys/mount.h	71;"	d
MNT_DEFEXPORTED	sys/mount.h	79;"	d
MNT_DELEXPORT	sys/mount.h	99;"	d
MNT_EXKERB	sys/mount.h	81;"	d
MNT_EXPORTANON	sys/mount.h	80;"	d
MNT_EXPORTED	sys/mount.h	78;"	d
MNT_EXPUBLIC	sys/mount.h	82;"	d
MNT_EXRDONLY	sys/mount.h	77;"	d
MNT_FORCE	sys/mount.h	101;"	d
MNT_IGNORE	sys/mount.h	92;"	d
MNT_LOCAL	sys/mount.h	88;"	d
MNT_NOATIME	sys/mount.h	72;"	d
MNT_NODEV	sys/mount.h	69;"	d
MNT_NOEXEC	sys/mount.h	67;"	d
MNT_NOSUID	sys/mount.h	68;"	d
MNT_QUOTA	sys/mount.h	89;"	d
MNT_RDONLY	sys/mount.h	65;"	d
MNT_RELOAD	sys/mount.h	100;"	d
MNT_ROOTFS	sys/mount.h	90;"	d
MNT_SYNCHRONOUS	sys/mount.h	66;"	d
MNT_UNION	sys/mount.h	70;"	d
MNT_UPDATE	sys/mount.h	98;"	d
MNT_USER	sys/mount.h	91;"	d
MODE_B	arpa/ftp.h	86;"	d
MODE_C	arpa/ftp.h	87;"	d
MODE_S	arpa/ftp.h	85;"	d
MOP	netinet/in_cksum_i386.h	26;"	d
MOP	netinet/in_cksum_powerpc.h	31;"	d
MPFail	kern/uipc_mbuf.c	/^static int MPFail;$/;"	v	file:
MRT_ADD_BW_UPCALL	netinet/ip_mroute.h	74;"	d
MRT_ADD_MFC	netinet/ip_mroute.h	67;"	d
MRT_ADD_VIF	netinet/ip_mroute.h	65;"	d
MRT_API_CONFIG	netinet/ip_mroute.h	73;"	d
MRT_API_SUPPORT	netinet/ip_mroute.h	72;"	d
MRT_ASSERT	netinet/ip_mroute.h	70;"	d
MRT_DEL_BW_UPCALL	netinet/ip_mroute.h	75;"	d
MRT_DEL_MFC	netinet/ip_mroute.h	68;"	d
MRT_DEL_VIF	netinet/ip_mroute.h	66;"	d
MRT_DONE	netinet/ip_mroute.h	64;"	d
MRT_INIT	netinet/ip_mroute.h	63;"	d
MRT_PIM	netinet/ip_mroute.h	71;"	d
MRT_VERSION	netinet/ip_mroute.h	69;"	d
MSG_COMPAT	sys/socket.h	321;"	d
MSG_CTRUNC	sys/socket.h	316;"	d
MSG_DONTROUTE	sys/socket.h	313;"	d
MSG_DONTWAIT	sys/socket.h	319;"	d
MSG_EOF	sys/socket.h	320;"	d
MSG_EOR	sys/socket.h	314;"	d
MSG_OOB	sys/socket.h	311;"	d
MSG_PEEK	sys/socket.h	312;"	d
MSG_TRUNC	sys/socket.h	315;"	d
MSG_WAITALL	sys/socket.h	317;"	d
MT_ATABLE	sys/mbuf.h	156;"	d
MT_CONTROL	sys/mbuf.h	162;"	d
MT_DATA	sys/mbuf.h	150;"	d
MT_FREE	sys/mbuf.h	149;"	d
MT_FTABLE	sys/mbuf.h	159;"	d
MT_HEADER	sys/mbuf.h	151;"	d
MT_HTABLE	sys/mbuf.h	155;"	d
MT_IFADDR	sys/mbuf.h	161;"	d
MT_MRTABLE	netinet/ip_mroute.c	187;"	d	file:
MT_OOBDATA	sys/mbuf.h	163;"	d
MT_PCB	sys/mbuf.h	153;"	d
MT_RIGHTS	sys/mbuf.h	160;"	d
MT_RTABLE	sys/mbuf.h	154;"	d
MT_SOCKET	sys/mbuf.h	152;"	d
MT_SONAME	sys/mbuf.h	157;"	d
MT_SOOPTS	sys/mbuf.h	158;"	d
MULTI_PTRS_ARE_ALIASES	libc/res_config.h	6;"	d
M_ALIGN	sys/mbuf.h	339;"	d
M_BCAST	sys/mbuf.h	138;"	d
M_BIOBUF	sys/malloc.h	129;"	d
M_CACHE	sys/malloc.h	78;"	d
M_CFS	sys/malloc.h	132;"	d
M_COPYALL	sys/mbuf.h	395;"	d
M_COPYFLAGS	sys/mbuf.h	144;"	d
M_COPY_PKTHDR	sys/mbuf.h	329;"	d
M_CRED	sys/malloc.h	68;"	d
M_DATASIZE	net/if_ppp.c	158;"	d	file:
M_DATASIZE	net/ppp_tty.c	145;"	d	file:
M_DATASTART	net/if_ppp.c	154;"	d	file:
M_DATASTART	net/ppp_tty.c	141;"	d	file:
M_DEVBUF	sys/malloc.h	54;"	d
M_DEVFSBACK	sys/malloc.h	118;"	d
M_DEVFSFRONT	sys/malloc.h	119;"	d
M_DEVFSMNT	sys/malloc.h	117;"	d
M_DEVFSNODE	sys/malloc.h	120;"	d
M_DEVL	sys/malloc.h	125;"	d
M_DONTWAIT	net/radix.c	45;"	d	file:
M_DONTWAIT	sys/mbuf.h	181;"	d
M_DQUOT	sys/malloc.h	79;"	d
M_EOR	sys/mbuf.h	132;"	d
M_ERRMARK	net/if_ppp.c	167;"	d	file:
M_ERRMARK	net/ppp_tty.c	154;"	d	file:
M_EXT	sys/mbuf.h	130;"	d
M_FFSNODE	sys/malloc.h	97;"	d
M_FHANDLE	sys/malloc.h	73;"	d
M_FILE	sys/malloc.h	90;"	d
M_FILEDESC	sys/malloc.h	91;"	d
M_FREE	sys/malloc.h	52;"	d
M_FTABLE	sys/malloc.h	59;"	d
M_GPROF	sys/malloc.h	65;"	d
M_GZIP	sys/malloc.h	123;"	d
M_HASCL	netinet/ip_mroute.c	181;"	d	file:
M_HASFCS	net/ethernet.h	44;"	d
M_HIGHPRI	net/if_ppp.c	166;"	d	file:
M_HIGHPRI	net/ppp_tty.c	153;"	d	file:
M_HTABLE	sys/malloc.h	58;"	d
M_IFADDR	sys/malloc.h	61;"	d
M_IFMADDR	sys/malloc.h	107;"	d
M_IOCTLOPS	sys/malloc.h	66;"	d
M_IOV	sys/malloc.h	71;"	d
M_IPFW	sys/malloc.h	124;"	d
M_IPMADDR	sys/malloc.h	106;"	d
M_IPMOPTS	sys/malloc.h	105;"	d
M_ISOFSMNT	sys/malloc.h	109;"	d
M_ISOFSNODE	sys/malloc.h	110;"	d
M_IS_CLUSTER	net/if_ppp.c	152;"	d	file:
M_IS_CLUSTER	net/ppp_tty.c	139;"	d	file:
M_KERNEL	sys/malloc.h	47;"	d
M_KTRACE	sys/malloc.h	130;"	d
M_LAST	sys/malloc.h	133;"	d
M_LEADINGSPACE	sys/mbuf.h	355;"	d
M_LFSNODE	sys/malloc.h	96;"	d
M_LOCKF	sys/malloc.h	92;"	d
M_MAPMEM	sys/malloc.h	67;"	d
M_MAXCOMPRESS	sys/mbuf.h	52;"	d
M_MBUF	sys/malloc.h	53;"	d
M_MCAST	sys/mbuf.h	139;"	d
M_MFSNODE	sys/malloc.h	98;"	d
M_MOUNT	sys/malloc.h	72;"	d
M_MRTABLE	sys/malloc.h	108;"	d
M_MSDOSFSFAT	sys/malloc.h	116;"	d
M_MSDOSFSMNT	sys/malloc.h	114;"	d
M_MSDOSFSNODE	sys/malloc.h	115;"	d
M_NAMEI	sys/malloc.h	64;"	d
M_NETADDR	sys/malloc.h	101;"	d
M_NFSBIGFH	sys/malloc.h	113;"	d
M_NFSD	sys/malloc.h	104;"	d
M_NFSDIROFF	sys/malloc.h	112;"	d
M_NFSMNT	sys/malloc.h	75;"	d
M_NFSNODE	sys/malloc.h	76;"	d
M_NFSREQ	sys/malloc.h	74;"	d
M_NFSRVDESC	sys/malloc.h	111;"	d
M_NFSSVC	sys/malloc.h	102;"	d
M_NFSUID	sys/malloc.h	103;"	d
M_NOWAIT	rtems/rtems_bsdnet_internal.h	133;"	d
M_NOWAIT	sys/malloc.h	46;"	d
M_NQLEASE	sys/malloc.h	99;"	d
M_NQMHOST	sys/malloc.h	100;"	d
M_PCB	sys/malloc.h	56;"	d
M_PGRP	sys/malloc.h	69;"	d
M_PKTCLASS	sys/malloc.h	126;"	d
M_PKTHDR	sys/mbuf.h	131;"	d
M_PREPEND	sys/mbuf.h	375;"	d
M_PROC	sys/malloc.h	93;"	d
M_PROTO1	sys/mbuf.h	133;"	d
M_RTABLE	sys/malloc.h	57;"	d
M_SECA	sys/malloc.h	128;"	d
M_SEGMENT	sys/malloc.h	95;"	d
M_SELECT	sys/malloc.h	131;"	d
M_SESSION	sys/malloc.h	70;"	d
M_SHM	sys/malloc.h	81;"	d
M_SOCKET	sys/malloc.h	55;"	d
M_SONAME	sys/malloc.h	63;"	d
M_SOOPTS	sys/malloc.h	62;"	d
M_SUBPROC	sys/malloc.h	94;"	d
M_SYSCTL	sys/malloc.h	127;"	d
M_SYSCTLOID	kern/kern_sysctl.c	71;"	d	file:
M_SYSCTLTMP	kern/kern_sysctl.c	72;"	d	file:
M_TEMP	sys/malloc.h	121;"	d
M_TRAILINGSPACE	sys/mbuf.h	364;"	d
M_TTYS	sys/malloc.h	122;"	d
M_UFSMNT	sys/malloc.h	80;"	d
M_VMMAP	sys/malloc.h	82;"	d
M_VMMAPENT	sys/malloc.h	83;"	d
M_VMOBJ	sys/malloc.h	84;"	d
M_VMOBJHASH	sys/malloc.h	85;"	d
M_VMPAGER	sys/malloc.h	88;"	d
M_VMPGDATA	sys/malloc.h	89;"	d
M_VMPMAP	sys/malloc.h	86;"	d
M_VMPVENT	sys/malloc.h	87;"	d
M_VNODE	sys/malloc.h	77;"	d
M_WAIT	sys/mbuf.h	182;"	d
M_WAITOK	sys/malloc.h	45;"	d
M_ZERO	kern/kern_sysctl.c	73;"	d	file:
M_ZOMBIE	sys/malloc.h	60;"	d
M_dat	sys/mbuf.h	/^	} M_dat;$/;"	m	struct:mbuf	typeref:union:mbuf::__anon49
M_databuf	sys/mbuf.h	/^		char	M_databuf[MLEN];		\/* !M_PKTHDR, !M_EXT *\/$/;"	m	union:mbuf::__anon49
NAMESERVER_PORT	arpa/nameser_compat.h	112;"	d
NAMING	libc/linkaddr.c	47;"	d	file:
NBPFILTER	opt_ppp.h	5;"	d
NCL_INIT	kern/uipc_mbuf.c	64;"	d	file:
NETDB_INTERNAL	netdb.h	122;"	d
NETDB_SUCCESS	netdb.h	123;"	d
NETISR_ARP	net/netisr.h	58;"	d
NETISR_ARP_EVENT	rtems/rtems_bsdnet_internal.h	218;"	d
NETISR_ATALK	net/netisr.h	57;"	d
NETISR_CCITT	net/netisr.h	56;"	d
NETISR_EVENTS	rtems/rtems_bsdnet_internal.h	219;"	d
NETISR_IMP	net/netisr.h	54;"	d
NETISR_IP	net/netisr.h	53;"	d
NETISR_IPX	net/netisr.h	59;"	d
NETISR_IP_EVENT	rtems/rtems_bsdnet_internal.h	217;"	d
NETISR_ISO	net/netisr.h	55;"	d
NETISR_PPP	net/netisr.h	61;"	d
NETISR_RAW	net/netisr.h	52;"	d
NETISR_SET	net/netisr.h	66;"	d
NETISR_USB	net/netisr.h	60;"	d
NET_MAXID	sys/socket.h	239;"	d
NET_RT_DUMP	sys/socket.h	280;"	d
NET_RT_FLAGS	sys/socket.h	281;"	d
NET_RT_IFLIST	sys/socket.h	282;"	d
NET_RT_MAXID	sys/socket.h	283;"	d
NEW_A	net/slcompress.h	99;"	d
NEW_C	net/slcompress.h	96;"	d
NEW_I	net/slcompress.h	97;"	d
NEW_S	net/slcompress.h	98;"	d
NEW_U	net/slcompress.h	101;"	d
NEW_W	net/slcompress.h	100;"	d
NFBLK	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFCHR	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFDIR	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFFIFO	nfs/nfsproto.h	/^	NFSOCK=6, NFFIFO=7 } nfstype;$/;"	e	enum:__anon8
NFLNK	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFNON	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFREG	nfs/nfsproto.h	/^typedef enum { NFNON=0, NFREG=1, NFDIR=2, NFBLK=3, NFCHR=4, NFLNK=5,$/;"	e	enum:__anon8
NFS	rtems/rtems_bsdnet.h	25;"	d
NFS	rtems/rtems_bsdnet.h	32;"	d
NFSERR_ACCES	nfs/nfsproto.h	73;"	d
NFSERR_AUTHERR	nfs/nfsproto.h	104;"	d
NFSERR_BADHANDLE	nfs/nfsproto.h	90;"	d
NFSERR_BADTYPE	nfs/nfsproto.h	96;"	d
NFSERR_BAD_COOKIE	nfs/nfsproto.h	92;"	d
NFSERR_DQUOT	nfs/nfsproto.h	86;"	d
NFSERR_EXIST	nfs/nfsproto.h	74;"	d
NFSERR_FBIG	nfs/nfsproto.h	80;"	d
NFSERR_INVAL	nfs/nfsproto.h	79;"	d
NFSERR_IO	nfs/nfsproto.h	71;"	d
NFSERR_ISDIR	nfs/nfsproto.h	78;"	d
NFSERR_JUKEBOX	nfs/nfsproto.h	97;"	d
NFSERR_MLINK	nfs/nfsproto.h	83;"	d
NFSERR_NAMETOL	nfs/nfsproto.h	84;"	d
NFSERR_NODEV	nfs/nfsproto.h	76;"	d
NFSERR_NOENT	nfs/nfsproto.h	70;"	d
NFSERR_NOSPC	nfs/nfsproto.h	81;"	d
NFSERR_NOTDIR	nfs/nfsproto.h	77;"	d
NFSERR_NOTEMPTY	nfs/nfsproto.h	85;"	d
NFSERR_NOTSUPP	nfs/nfsproto.h	93;"	d
NFSERR_NOT_SYNC	nfs/nfsproto.h	91;"	d
NFSERR_NXIO	nfs/nfsproto.h	72;"	d
NFSERR_PERM	nfs/nfsproto.h	69;"	d
NFSERR_REMOTE	nfs/nfsproto.h	88;"	d
NFSERR_RETERR	nfs/nfsproto.h	105;"	d
NFSERR_RETVOID	nfs/nfsproto.h	103;"	d
NFSERR_ROFS	nfs/nfsproto.h	82;"	d
NFSERR_SERVERFAULT	nfs/nfsproto.h	95;"	d
NFSERR_STALE	nfs/nfsproto.h	87;"	d
NFSERR_STALEWRITEVERF	nfs/nfsproto.h	99;"	d
NFSERR_TOOSMALL	nfs/nfsproto.h	94;"	d
NFSERR_TRYLATER	nfs/nfsproto.h	98;"	d
NFSERR_WFLUSH	nfs/nfsproto.h	89;"	d
NFSERR_XDEV	nfs/nfsproto.h	75;"	d
NFSMNT_ACDIRMAX	nfsclient/nfsargs.h	87;"	d
NFSMNT_ACDIRMIN	nfsclient/nfsargs.h	86;"	d
NFSMNT_ACREGMAX	nfsclient/nfsargs.h	85;"	d
NFSMNT_ACREGMIN	nfsclient/nfsargs.h	84;"	d
NFSMNT_DEADTHRESH	nfsclient/nfsargs.h	80;"	d
NFSMNT_DUMBTIMR	nfsclient/nfsargs.h	77;"	d
NFSMNT_HASWRITEVERF	nfsclient/nfsargs.h	90;"	d
NFSMNT_INT	nfsclient/nfsargs.h	72;"	d
NFSMNT_MAXGRPS	nfsclient/nfsargs.h	71;"	d
NFSMNT_NFSV3	nfsclient/nfsargs.h	75;"	d
NFSMNT_NFSV4	nfsclient/nfsargs.h	89;"	d
NFSMNT_NOCONN	nfsclient/nfsargs.h	73;"	d
NFSMNT_NOLOCKD	nfsclient/nfsargs.h	88;"	d
NFSMNT_RDIRPLUS	nfsclient/nfsargs.h	82;"	d
NFSMNT_READAHEAD	nfsclient/nfsargs.h	79;"	d
NFSMNT_READDIRSIZE	nfsclient/nfsargs.h	83;"	d
NFSMNT_RESVPORT	nfsclient/nfsargs.h	81;"	d
NFSMNT_RETRANS	nfsclient/nfsargs.h	70;"	d
NFSMNT_RSIZE	nfsclient/nfsargs.h	68;"	d
NFSMNT_SOFT	nfsclient/nfsargs.h	66;"	d
NFSMNT_TIMEO	nfsclient/nfsargs.h	69;"	d
NFSMNT_WSIZE	nfsclient/nfsargs.h	67;"	d
NFSOCK	nfs/nfsproto.h	/^	NFSOCK=6, NFFIFO=7 } nfstype;$/;"	e	enum:__anon8
NFSPROC_ACCESS	nfs/nfsproto.h	155;"	d
NFSPROC_COMMIT	nfs/nfsproto.h	172;"	d
NFSPROC_CREATE	nfs/nfsproto.h	159;"	d
NFSPROC_FSINFO	nfs/nfsproto.h	170;"	d
NFSPROC_FSSTAT	nfs/nfsproto.h	169;"	d
NFSPROC_GETATTR	nfs/nfsproto.h	152;"	d
NFSPROC_LINK	nfs/nfsproto.h	166;"	d
NFSPROC_LOOKUP	nfs/nfsproto.h	154;"	d
NFSPROC_MKDIR	nfs/nfsproto.h	160;"	d
NFSPROC_MKNOD	nfs/nfsproto.h	162;"	d
NFSPROC_NOOP	nfs/nfsproto.h	173;"	d
NFSPROC_NULL	nfs/nfsproto.h	151;"	d
NFSPROC_PATHCONF	nfs/nfsproto.h	171;"	d
NFSPROC_READ	nfs/nfsproto.h	157;"	d
NFSPROC_READDIR	nfs/nfsproto.h	167;"	d
NFSPROC_READDIRPLUS	nfs/nfsproto.h	168;"	d
NFSPROC_READLINK	nfs/nfsproto.h	156;"	d
NFSPROC_REMOVE	nfs/nfsproto.h	163;"	d
NFSPROC_RENAME	nfs/nfsproto.h	165;"	d
NFSPROC_RMDIR	nfs/nfsproto.h	164;"	d
NFSPROC_SETATTR	nfs/nfsproto.h	153;"	d
NFSPROC_SYMLINK	nfs/nfsproto.h	161;"	d
NFSPROC_WRITE	nfs/nfsproto.h	158;"	d
NFSV2PROC_CREATE	nfs/nfsproto.h	187;"	d
NFSV2PROC_GETATTR	nfs/nfsproto.h	178;"	d
NFSV2PROC_LINK	nfs/nfsproto.h	190;"	d
NFSV2PROC_LOOKUP	nfs/nfsproto.h	182;"	d
NFSV2PROC_MKDIR	nfs/nfsproto.h	192;"	d
NFSV2PROC_NOOP	nfs/nfsproto.h	180;"	d
NFSV2PROC_NULL	nfs/nfsproto.h	177;"	d
NFSV2PROC_READ	nfs/nfsproto.h	184;"	d
NFSV2PROC_READDIR	nfs/nfsproto.h	194;"	d
NFSV2PROC_READLINK	nfs/nfsproto.h	183;"	d
NFSV2PROC_REMOVE	nfs/nfsproto.h	188;"	d
NFSV2PROC_RENAME	nfs/nfsproto.h	189;"	d
NFSV2PROC_RMDIR	nfs/nfsproto.h	193;"	d
NFSV2PROC_ROOT	nfs/nfsproto.h	181;"	d
NFSV2PROC_SETATTR	nfs/nfsproto.h	179;"	d
NFSV2PROC_STATFS	nfs/nfsproto.h	195;"	d
NFSV2PROC_SYMLINK	nfs/nfsproto.h	191;"	d
NFSV2PROC_WRITE	nfs/nfsproto.h	186;"	d
NFSV2PROC_WRITECACHE	nfs/nfsproto.h	185;"	d
NFSV3ACCESS_DELETE	nfs/nfsproto.h	208;"	d
NFSV3ACCESS_EXECUTE	nfs/nfsproto.h	209;"	d
NFSV3ACCESS_EXTEND	nfs/nfsproto.h	207;"	d
NFSV3ACCESS_LOOKUP	nfs/nfsproto.h	205;"	d
NFSV3ACCESS_MODIFY	nfs/nfsproto.h	206;"	d
NFSV3ACCESS_READ	nfs/nfsproto.h	204;"	d
NFSV3CREATE_EXCLUSIVE	nfs/nfsproto.h	217;"	d
NFSV3CREATE_GUARDED	nfs/nfsproto.h	216;"	d
NFSV3CREATE_UNCHECKED	nfs/nfsproto.h	215;"	d
NFSV3FSINFO_CANSETTIME	nfs/nfsproto.h	222;"	d
NFSV3FSINFO_HOMOGENEOUS	nfs/nfsproto.h	221;"	d
NFSV3FSINFO_LINK	nfs/nfsproto.h	219;"	d
NFSV3FSINFO_SYMLINK	nfs/nfsproto.h	220;"	d
NFSV3SATTRTIME_DONTCHANGE	nfs/nfsproto.h	200;"	d
NFSV3SATTRTIME_TOCLIENT	nfs/nfsproto.h	202;"	d
NFSV3SATTRTIME_TOSERVER	nfs/nfsproto.h	201;"	d
NFSV3WRITE_DATASYNC	nfs/nfsproto.h	212;"	d
NFSV3WRITE_FILESYNC	nfs/nfsproto.h	213;"	d
NFSV3WRITE_UNSTABLE	nfs/nfsproto.h	211;"	d
NFSX_COOKIEVERF	nfs/nfsproto.h	144;"	d
NFSX_FATTR	nfs/nfsproto.h	136;"	d
NFSX_FH	nfs/nfsproto.h	133;"	d
NFSX_POSTOPATTR	nfs/nfsproto.h	138;"	d
NFSX_POSTOPORFATTR	nfs/nfsproto.h	139;"	d
NFSX_PREOPATTR	nfs/nfsproto.h	137;"	d
NFSX_READDIR	nfs/nfsproto.h	146;"	d
NFSX_SATTR	nfs/nfsproto.h	143;"	d
NFSX_SRVFH	nfs/nfsproto.h	135;"	d
NFSX_STATFS	nfs/nfsproto.h	148;"	d
NFSX_UNSIGNED	nfs/nfsproto.h	108;"	d
NFSX_V2COOKIE	nfs/nfsproto.h	114;"	d
NFSX_V2FATTR	nfs/nfsproto.h	112;"	d
NFSX_V2FH	nfs/nfsproto.h	111;"	d
NFSX_V2SATTR	nfs/nfsproto.h	113;"	d
NFSX_V2STATFS	nfs/nfsproto.h	115;"	d
NFSX_V3COOKIEVERF	nfs/nfsproto.h	125;"	d
NFSX_V3CREATEVERF	nfs/nfsproto.h	127;"	d
NFSX_V3FATTR	nfs/nfsproto.h	120;"	d
NFSX_V3FH	nfs/nfsproto.h	118;"	d
NFSX_V3FHMAX	nfs/nfsproto.h	119;"	d
NFSX_V3FSINFO	nfs/nfsproto.h	129;"	d
NFSX_V3PATHCONF	nfs/nfsproto.h	130;"	d
NFSX_V3POSTOPATTR	nfs/nfsproto.h	123;"	d
NFSX_V3SATTR	nfs/nfsproto.h	121;"	d
NFSX_V3SRVSATTR	nfs/nfsproto.h	122;"	d
NFSX_V3STATFS	nfs/nfsproto.h	128;"	d
NFSX_V3WCCDATA	nfs/nfsproto.h	124;"	d
NFSX_V3WRITEVERF	nfs/nfsproto.h	126;"	d
NFSX_WCCDATA	nfs/nfsproto.h	141;"	d
NFSX_WCCORFATTR	nfs/nfsproto.h	142;"	d
NFSX_WRITEVERF	nfs/nfsproto.h	145;"	d
NFS_FABLKSIZE	nfs/nfsproto.h	65;"	d
NFS_MAXDATA	nfs/nfsproto.h	59;"	d
NFS_MAXDGRAMDATA	nfs/nfsproto.h	58;"	d
NFS_MAXNAMLEN	nfs/nfsproto.h	61;"	d
NFS_MAXPACKET	nfs/nfsproto.h	63;"	d
NFS_MAXPATHLEN	nfs/nfsproto.h	60;"	d
NFS_MAXPKTHDR	nfs/nfsproto.h	62;"	d
NFS_MINPACKET	nfs/nfsproto.h	64;"	d
NFS_NPROCS	nfs/nfsproto.h	174;"	d
NFS_OK	nfs/nfsproto.h	68;"	d
NFS_PORT	nfs/nfsproto.h	53;"	d
NFS_PROG	nfs/nfsproto.h	54;"	d
NFS_SMALLFH	nfs/nfsproto.h	237;"	d
NFS_V2MAXDATA	nfs/nfsproto.h	57;"	d
NFS_VER2	nfs/nfsproto.h	55;"	d
NFS_VER3	nfs/nfsproto.h	56;"	d
NLOOP	loop.h	8;"	d
NMB_INIT	kern/uipc_mbuf.c	66;"	d	file:
NOCRED	sys/ucred.h	53;"	d
NOERROR	arpa/nameser_compat.h	125;"	d
NOTAUTH	arpa/nameser_compat.h	134;"	d
NOTIMP	arpa/nameser_compat.h	129;"	d
NOTZONE	arpa/nameser_compat.h	135;"	d
NO_ADDRESS	netdb.h	128;"	d
NO_DATA	netdb.h	127;"	d
NO_RECOVERY	netdb.h	126;"	d
NO_RTE_FOUND	netinet/ip_mroute.c	204;"	d	file:
NPMODE_DROP	net/ppp_defs.h	/^    NPMODE_DROP,		\/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/ppp_defs.h	/^    NPMODE_ERROR,		\/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/ppp_defs.h	/^    NPMODE_PASS,		\/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/ppp_defs.h	/^    NPMODE_QUEUE		\/* save it up for later. *\/$/;"	e	enum:NPmode
NPPP	opt_ppp.h	4;"	d
NPRIMES	kern/kern_subr.c	124;"	d	file:
NP_IP	net/if_pppvar.h	63;"	d
NPmode	net/ppp_defs.h	/^enum NPmode {$/;"	g
NSIG	rtems/rtems_bsdnet_internal.h	83;"	d
NSMAX	libc/res_update.c	58;"	d	file:
NS_ALG_EXPIRE_ONLY	arpa/nameser.h	331;"	d
NS_ALG_MD5RSA	arpa/nameser.h	330;"	d
NS_ALG_PRIVATE_OID	arpa/nameser.h	332;"	d
NS_CMPRSFLGS	arpa/nameser.h	91;"	d
NS_DEFAULTPORT	arpa/nameser.h	92;"	d
NS_GET16	arpa/nameser.h	362;"	d
NS_GET32	arpa/nameser.h	370;"	d
NS_HFIXEDSZ	arpa/nameser.h	83;"	d
NS_IN6ADDRSZ	arpa/nameser.h	90;"	d
NS_INADDRSZ	arpa/nameser.h	89;"	d
NS_INT16SZ	arpa/nameser.h	87;"	d
NS_INT32SZ	arpa/nameser.h	86;"	d
NS_INT8SZ	arpa/nameser.h	88;"	d
NS_KEY_EMAIL	arpa/nameser.h	319;"	d
NS_KEY_ENTITY	arpa/nameser.h	316;"	d
NS_KEY_EXPERIMENTAL	arpa/nameser.h	312;"	d
NS_KEY_IPSEC	arpa/nameser.h	318;"	d
NS_KEY_NO_AUTH	arpa/nameser.h	310;"	d
NS_KEY_NO_CONF	arpa/nameser.h	311;"	d
NS_KEY_RESERVED10	arpa/nameser.h	320;"	d
NS_KEY_RESERVED11	arpa/nameser.h	321;"	d
NS_KEY_RESERVED3	arpa/nameser.h	313;"	d
NS_KEY_RESERVED4	arpa/nameser.h	314;"	d
NS_KEY_RESERVED_BITMASK	arpa/nameser.h	324;"	d
NS_KEY_SIGNATORYMASK	arpa/nameser.h	322;"	d
NS_KEY_TYPEMASK	arpa/nameser.h	304;"	d
NS_KEY_TYPE_AUTH_CONF	arpa/nameser.h	305;"	d
NS_KEY_TYPE_AUTH_ONLY	arpa/nameser.h	307;"	d
NS_KEY_TYPE_CONF_ONLY	arpa/nameser.h	306;"	d
NS_KEY_TYPE_NO_KEY	arpa/nameser.h	308;"	d
NS_KEY_USERACCOUNT	arpa/nameser.h	315;"	d
NS_KEY_ZONEKEY	arpa/nameser.h	317;"	d
NS_MAXCDNAME	arpa/nameser.h	81;"	d
NS_MAXDNAME	arpa/nameser.h	80;"	d
NS_MAXLABEL	arpa/nameser.h	82;"	d
NS_MD5RSA_MAX_BASE64	arpa/nameser.h	340;"	d
NS_MD5RSA_MAX_BITS	arpa/nameser.h	336;"	d
NS_MD5RSA_MAX_BYTES	arpa/nameser.h	338;"	d
NS_MD5RSA_MIN_BITS	arpa/nameser.h	335;"	d
NS_NOTIFY_OP	arpa/nameser_compat.h	122;"	d
NS_NXT_BITS	arpa/nameser.h	353;"	d
NS_NXT_BIT_CLEAR	arpa/nameser.h	355;"	d
NS_NXT_BIT_ISSET	arpa/nameser.h	356;"	d
NS_NXT_BIT_SET	arpa/nameser.h	354;"	d
NS_PACKETSZ	arpa/nameser.h	79;"	d
NS_PUT16	arpa/nameser.h	380;"	d
NS_PUT32	arpa/nameser.h	388;"	d
NS_QFIXEDSZ	arpa/nameser.h	84;"	d
NS_RRFIXEDSZ	arpa/nameser.h	85;"	d
NS_SIG_ALG	arpa/nameser.h	344;"	d
NS_SIG_EXPIR	arpa/nameser.h	347;"	d
NS_SIG_FOOT	arpa/nameser.h	349;"	d
NS_SIG_LABELS	arpa/nameser.h	345;"	d
NS_SIG_OTTL	arpa/nameser.h	346;"	d
NS_SIG_SIGNED	arpa/nameser.h	348;"	d
NS_SIG_SIGNER	arpa/nameser.h	350;"	d
NS_SIG_TYPE	arpa/nameser.h	343;"	d
NS_UPDATE_OP	arpa/nameser_compat.h	123;"	d
NTOHL	netinet/ip_mroute.c	48;"	d	file:
NTOHL	netinet/ip_mroute.c	53;"	d	file:
NTOHS	netinet/ip_mroute.c	49;"	d	file:
NTOHS	netinet/ip_mroute.c	54;"	d	file:
NUM_MBUFQ	net/if_pppvar.h	65;"	d
NUM_NAMESERVERS	rtems/rtems_dhcp.c	190;"	d	file:
NUM_NP	net/if_pppvar.h	64;"	d
NXDOMAIN	arpa/nameser_compat.h	128;"	d
NXRRSET	arpa/nameser_compat.h	133;"	d
OID_AUTO	sys/sysctl.h	107;"	d
OPEN_RETRY_LIMIT	lib/tftpDriver.c	53;"	d	file:
OPTBIT	netinet/ip_output.c	781;"	d	file:
OPTSET	netinet/ip_output.c	677;"	d	file:
OPTSET	netinet/ip_output.c	701;"	d	file:
OPTSIZ	netinet/ip_input.c	1180;"	d	file:
OPTSIZ	netinet/ip_input.c	1209;"	d	file:
PACKETPTR	net/if_ppp.c	134;"	d	file:
PACKETSZ	arpa/nameser_compat.h	100;"	d
PACKET_FIRST_TIMEOUT_MILLISECONDS	lib/tftpDriver.c	51;"	d	file:
PACKET_TIMEOUT_MILLISECONDS	lib/tftpDriver.c	52;"	d	file:
PERIOD	libc/res_comp.c	137;"	d	file:
PF_APPLETALK	sys/socket.h	215;"	d
PF_CCITT	sys/socket.h	209;"	d
PF_CHAOS	sys/socket.h	203;"	d
PF_CNT	sys/socket.h	220;"	d
PF_COIP	sys/socket.h	219;"	d
PF_DATAKIT	sys/socket.h	208;"	d
PF_DECnet	sys/socket.h	211;"	d
PF_DLI	sys/socket.h	212;"	d
PF_ECMA	sys/socket.h	207;"	d
PF_HYLINK	sys/socket.h	214;"	d
PF_IMPLINK	sys/socket.h	201;"	d
PF_INET	sys/socket.h	200;"	d
PF_INET6	sys/socket.h	227;"	d
PF_IPX	sys/socket.h	222;"	d
PF_ISDN	sys/socket.h	225;"	d
PF_ISO	sys/socket.h	205;"	d
PF_KEY	sys/socket.h	226;"	d
PF_LAT	sys/socket.h	213;"	d
PF_LINK	sys/socket.h	217;"	d
PF_LOCAL	sys/socket.h	198;"	d
PF_MAX	sys/socket.h	229;"	d
PF_NETBIOS	sys/socket.h	204;"	d
PF_OSI	sys/socket.h	206;"	d
PF_PIP	sys/socket.h	224;"	d
PF_PUP	sys/socket.h	202;"	d
PF_ROUTE	sys/socket.h	216;"	d
PF_RTIP	sys/socket.h	223;"	d
PF_SIP	sys/socket.h	221;"	d
PF_SNA	sys/socket.h	210;"	d
PF_UNIX	sys/socket.h	199;"	d
PF_UNSPEC	sys/socket.h	197;"	d
PF_XTP	sys/socket.h	218;"	d
POLLERR	sys/poll.h	78;"	d
POLLHUP	sys/poll.h	79;"	d
POLLIN	sys/poll.h	61;"	d
POLLINIGNEOF	sys/poll.h	71;"	d
POLLNVAL	sys/poll.h	80;"	d
POLLOUT	sys/poll.h	63;"	d
POLLPRI	sys/poll.h	62;"	d
POLLRDBAND	sys/poll.h	66;"	d
POLLRDNORM	sys/poll.h	64;"	d
POLLSTANDARD	sys/poll.h	84;"	d
POLLWRBAND	sys/poll.h	67;"	d
POLLWRNORM	sys/poll.h	65;"	d
PPPD_EVENT	net/if_pppvar.h	147;"	d
PPPIOCGASYNCMAP	net/if_ppp.h	106;"	d
PPPIOCGFLAGS	net/if_ppp.h	104;"	d
PPPIOCGIDLE	net/if_ppp.h	120;"	d
PPPIOCGMRU	net/if_ppp.h	111;"	d
PPPIOCGMTU	net/if_ppp.h	127;"	d
PPPIOCGNPMODE	net/if_ppp.h	118;"	d
PPPIOCGRASYNCMAP	net/if_ppp.h	109;"	d
PPPIOCGUNIT	net/if_ppp.h	108;"	d
PPPIOCGXASYNCMAP	net/if_ppp.h	114;"	d
PPPIOCSACTIVE	net/if_ppp.h	123;"	d
PPPIOCSASYNCMAP	net/if_ppp.h	107;"	d
PPPIOCSCOMPRESS	net/if_ppp.h	117;"	d
PPPIOCSFLAGS	net/if_ppp.h	105;"	d
PPPIOCSMAXCID	net/if_ppp.h	113;"	d
PPPIOCSMRU	net/if_ppp.h	112;"	d
PPPIOCSMTU	net/if_ppp.h	128;"	d
PPPIOCSNPMODE	net/if_ppp.h	119;"	d
PPPIOCSPASS	net/if_ppp.h	122;"	d
PPPIOCSRASYNCMAP	net/if_ppp.h	110;"	d
PPPIOCSTASK	net/if_ppp.h	103;"	d
PPPIOCSXASYNCMAP	net/if_ppp.h	115;"	d
PPPIOCXFERUNIT	net/if_ppp.h	116;"	d
PPP_ADDRESS	net/ppp_defs.h	43;"	d
PPP_ALLSTATIONS	net/ppp_defs.h	50;"	d
PPP_AT	net/ppp_defs.h	60;"	d
PPP_ATCP	net/ppp_defs.h	67;"	d
PPP_CBCP	net/ppp_defs.h	75;"	d
PPP_CCP	net/ppp_defs.h	70;"	d
PPP_CHAP	net/ppp_defs.h	74;"	d
PPP_COMP	net/ppp_defs.h	65;"	d
PPP_COMPRESS	opt_ppp.h	8;"	d
PPP_CONTROL	net/ppp_defs.h	44;"	d
PPP_ESCAPE	net/ppp_defs.h	53;"	d
PPP_FCS	net/ppp_defs.h	82;"	d
PPP_FCSLEN	net/ppp_defs.h	40;"	d
PPP_FILTER	opt_ppp.h	7;"	d
PPP_FLAG	net/ppp_defs.h	52;"	d
PPP_GOODFCS	net/ppp_defs.h	81;"	d
PPP_HDRLEN	net/ppp_defs.h	39;"	d
PPP_HIWAT	net/ppp_tty.c	169;"	d	file:
PPP_INITFCS	net/ppp_defs.h	80;"	d
PPP_IP	net/ppp_defs.h	59;"	d
PPP_IPCP	net/ppp_defs.h	66;"	d
PPP_IPV6	net/ppp_defs.h	64;"	d
PPP_IPV6CP	net/ppp_defs.h	69;"	d
PPP_IPX	net/ppp_defs.h	61;"	d
PPP_IPXCP	net/ppp_defs.h	68;"	d
PPP_LCP	net/ppp_defs.h	71;"	d
PPP_LOWAT	net/ppp_tty.c	168;"	d	file:
PPP_LQR	net/ppp_defs.h	73;"	d
PPP_MAXMRU	net/if_ppp.h	33;"	d
PPP_MAXMTU	net/if_ppp.h	34;"	d
PPP_MRU	net/ppp_defs.h	41;"	d
PPP_MTU	net/if_ppp.h	32;"	d
PPP_PAP	net/ppp_defs.h	72;"	d
PPP_PROTOCOL	net/ppp_defs.h	45;"	d
PPP_TRANS	net/ppp_defs.h	54;"	d
PPP_UI	net/ppp_defs.h	51;"	d
PPP_VJC_COMP	net/ppp_defs.h	62;"	d
PPP_VJC_UNCOMP	net/ppp_defs.h	63;"	d
PRCO_GETOPT	sys/protosw.h	283;"	d
PRCO_NCMDS	sys/protosw.h	286;"	d
PRCO_SETOPT	sys/protosw.h	284;"	d
PRC_HOSTDEAD	sys/protosw.h	237;"	d
PRC_HOSTUNREACH	sys/protosw.h	238;"	d
PRC_IFDOWN	sys/protosw.h	231;"	d
PRC_IFUP	sys/protosw.h	233;"	d
PRC_IS_REDIRECT	sys/protosw.h	256;"	d
PRC_MSGSIZE	sys/protosw.h	236;"	d
PRC_NCMDS	sys/protosw.h	254;"	d
PRC_PARAMPROB	sys/protosw.h	251;"	d
PRC_QUENCH	sys/protosw.h	235;"	d
PRC_QUENCH2	sys/protosw.h	234;"	d
PRC_REDIRECT_HOST	sys/protosw.h	246;"	d
PRC_REDIRECT_NET	sys/protosw.h	245;"	d
PRC_REDIRECT_TOSHOST	sys/protosw.h	248;"	d
PRC_REDIRECT_TOSNET	sys/protosw.h	247;"	d
PRC_ROUTEDEAD	sys/protosw.h	232;"	d
PRC_TIMXCEED_INTRANS	sys/protosw.h	249;"	d
PRC_TIMXCEED_REASS	sys/protosw.h	250;"	d
PRC_UNREACH_ADMIN_PROHIB	sys/protosw.h	252;"	d
PRC_UNREACH_HOST	sys/protosw.h	240;"	d
PRC_UNREACH_NET	sys/protosw.h	239;"	d
PRC_UNREACH_PORT	sys/protosw.h	242;"	d
PRC_UNREACH_PROTOCOL	sys/protosw.h	241;"	d
PRC_UNREACH_SRCFAIL	sys/protosw.h	244;"	d
PRELIM	arpa/ftp.h	44;"	d
PRUREQUESTS	netinet/tcp_debug.c	42;"	d	file:
PRUS_EOF	sys/protosw.h	197;"	d
PRUS_OOB	sys/protosw.h	196;"	d
PRU_ABORT	sys/protosw.h	137;"	d
PRU_ACCEPT	sys/protosw.h	132;"	d
PRU_ATTACH	sys/protosw.h	127;"	d
PRU_BIND	sys/protosw.h	129;"	d
PRU_CONNECT	sys/protosw.h	131;"	d
PRU_CONNECT2	sys/protosw.h	144;"	d
PRU_CONTROL	sys/protosw.h	138;"	d
PRU_DETACH	sys/protosw.h	128;"	d
PRU_DISCONNECT	sys/protosw.h	133;"	d
PRU_FASTTIMO	sys/protosw.h	146;"	d
PRU_LISTEN	sys/protosw.h	130;"	d
PRU_NREQ	sys/protosw.h	152;"	d
PRU_OLDSTYLE	sys/protosw.h	212;"	d
PRU_PEERADDR	sys/protosw.h	143;"	d
PRU_PROTORCV	sys/protosw.h	148;"	d
PRU_PROTOSEND	sys/protosw.h	149;"	d
PRU_RCVD	sys/protosw.h	135;"	d
PRU_RCVOOB	sys/protosw.h	140;"	d
PRU_SEND	sys/protosw.h	136;"	d
PRU_SENDOOB	sys/protosw.h	141;"	d
PRU_SEND_EOF	sys/protosw.h	151;"	d
PRU_SENSE	sys/protosw.h	139;"	d
PRU_SHUTDOWN	sys/protosw.h	134;"	d
PRU_SLOWTIMO	sys/protosw.h	147;"	d
PRU_SOCKADDR	sys/protosw.h	142;"	d
PR_ADDR	sys/protosw.h	108;"	d
PR_ATOMIC	sys/protosw.h	107;"	d
PR_CONNREQUIRED	sys/protosw.h	109;"	d
PR_FASTHZ	sys/protosw.h	96;"	d
PR_IMPLOPCL	sys/protosw.h	112;"	d
PR_LASTHDR	sys/protosw.h	113;"	d
PR_RIGHTS	sys/protosw.h	111;"	d
PR_SLOWHZ	sys/protosw.h	95;"	d
PR_WANTRCVD	sys/protosw.h	110;"	d
PULLUP_TO	netinet/ip_fw.c	448;"	d	file:
PULLUP_TO	netinet/ip_fw.c	529;"	d	file:
PUTLONG	arpa/nameser_compat.h	191;"	d
PUTSHORT	arpa/nameser_compat.h	190;"	d
Pad64	libc/base64.c	/^static const char Pad64 = '=';$/;"	v	file:
Perror	libc/res_send.c	/^    Perror($/;"	f	file:
Perror	libc/res_send.c	132;"	d	file:
QFIXEDSZ	arpa/nameser_compat.h	105;"	d
QUERY	arpa/nameser_compat.h	119;"	d
Qhook	libc/res_send.c	/^static res_send_qhook Qhook = NULL;$/;"	v	file:
RANGECHK	netinet/in_pcb.c	101;"	d	file:
RANGECHK	netinet/in_pcb.c	81;"	d	file:
RAWRCVQ	net/raw_cb.h	59;"	d
RAWSNDQ	net/raw_cb.h	58;"	d
RB_ASKNAME	sys/reboot.h	45;"	d
RB_AUTOBOOT	sys/reboot.h	43;"	d
RB_BOOTINFO	sys/reboot.h	64;"	d
RB_CDROM	sys/reboot.h	58;"	d
RB_CONFIG	sys/reboot.h	55;"	d
RB_DFLTROOT	sys/reboot.h	50;"	d
RB_DUMP	sys/reboot.h	53;"	d
RB_GDB	sys/reboot.h	60;"	d
RB_HALT	sys/reboot.h	48;"	d
RB_INITNAME	sys/reboot.h	49;"	d
RB_KDB	sys/reboot.h	51;"	d
RB_MINIROOT	sys/reboot.h	54;"	d
RB_MUTE	sys/reboot.h	61;"	d
RB_NOSYNC	sys/reboot.h	47;"	d
RB_POWEROFF	sys/reboot.h	59;"	d
RB_RDONLY	sys/reboot.h	52;"	d
RB_SELFTEST	sys/reboot.h	62;"	d
RB_SERIAL	sys/reboot.h	57;"	d
RB_SINGLE	sys/reboot.h	46;"	d
RB_VERBOSE	sys/reboot.h	56;"	d
REASS_MBUF	netinet/tcp_var.h	245;"	d
REC_EOF	arpa/ftp.h	97;"	d
REC_EOR	arpa/ftp.h	96;"	d
REC_ESC	arpa/ftp.h	95;"	d
REDUCE	netinet/in_cksum.c	80;"	d	file:
REDUCE	netinet/in_cksum_arm.h	125;"	d
REDUCE	netinet/in_cksum_i386.h	14;"	d
REDUCE	netinet/in_cksum_m68k.h	45;"	d
REDUCE	netinet/in_cksum_powerpc.h	14;"	d
REDUCE	netinet/in_cksum_sparc.h	169;"	d
REFUSED	arpa/nameser_compat.h	130;"	d
REQ_LOCKED	sys/sysctl.h	121;"	d
REQ_UNLOCKED	sys/sysctl.h	120;"	d
REQ_WIRED	sys/sysctl.h	122;"	d
RESET	libc/linkaddr.c	50;"	d	file:
RESOLVSORT	libc/res_config.h	2;"	d
RES_AAONLY	resolv.h	153;"	d
RES_DEBUG	resolv.h	152;"	d
RES_DEFAULT	resolv.h	167;"	d
RES_DEFNAMES	resolv.h	158;"	d
RES_DNSRCH	resolv.h	160;"	d
RES_IGNTC	resolv.h	156;"	d
RES_INIT	resolv.h	151;"	d
RES_INSECURE1	resolv.h	161;"	d
RES_INSECURE2	resolv.h	162;"	d
RES_MAXNDOTS	resolv.h	122;"	d
RES_NOALIASES	resolv.h	163;"	d
RES_NOTLDQUERY	resolv.h	165;"	d
RES_PRF_ADD	resolv.h	180;"	d
RES_PRF_ANS	resolv.h	178;"	d
RES_PRF_AUTH	resolv.h	179;"	d
RES_PRF_CLASS	resolv.h	175;"	d
RES_PRF_CMD	resolv.h	176;"	d
RES_PRF_HEAD1	resolv.h	181;"	d
RES_PRF_HEAD2	resolv.h	182;"	d
RES_PRF_HEADX	resolv.h	184;"	d
RES_PRF_INIT	resolv.h	187;"	d
RES_PRF_QUERY	resolv.h	185;"	d
RES_PRF_QUES	resolv.h	177;"	d
RES_PRF_REPLY	resolv.h	186;"	d
RES_PRF_STATS	resolv.h	173;"	d
RES_PRF_TTLID	resolv.h	183;"	d
RES_PRF_UPDATE	resolv.h	174;"	d
RES_PRIMARY	resolv.h	155;"	d
RES_RECURSE	resolv.h	157;"	d
RES_STAYOPEN	resolv.h	159;"	d
RES_TIMEOUT	resolv.h	120;"	d
RES_USEVC	resolv.h	154;"	d
RES_USE_INET6	resolv.h	164;"	d
RFC1535	libc/res_config.h	3;"	d
RIPRCVQ	netinet/raw_ip.c	80;"	d	file:
RIPSNDQ	netinet/raw_ip.c	79;"	d	file:
RNF_ACTIVE	net/radix.h	48;"	d
RNF_NORMAL	net/radix.h	46;"	d
RNF_ROOT	net/radix.h	47;"	d
ROL	netinet/in_cksum_arm.h	134;"	d
ROL	netinet/in_cksum_sparc.h	171;"	d
ROUNDUP	net/if.c	137;"	d	file:
ROUNDUP	net/route.c	391;"	d	file:
ROUNDUP	net/rtsock.c	371;"	d	file:
RPCAKN_FULLNAME	nfs/rpcv2.h	60;"	d
RPCAKN_NICKNAME	nfs/rpcv2.h	61;"	d
RPCAUTH_KERB4	nfs/rpcv2.h	52;"	d
RPCAUTH_MAXSIZ	nfs/rpcv2.h	53;"	d
RPCAUTH_NULL	nfs/rpcv2.h	49;"	d
RPCAUTH_SHORT	nfs/rpcv2.h	51;"	d
RPCAUTH_UNIX	nfs/rpcv2.h	50;"	d
RPCAUTH_UNIXGIDS	nfs/rpcv2.h	55;"	d
RPCMNT_DUMP	nfs/rpcv2.h	100;"	d
RPCMNT_EXPORT	nfs/rpcv2.h	103;"	d
RPCMNT_MOUNT	nfs/rpcv2.h	99;"	d
RPCMNT_NAMELEN	nfs/rpcv2.h	104;"	d
RPCMNT_PATHLEN	nfs/rpcv2.h	105;"	d
RPCMNT_UMNTALL	nfs/rpcv2.h	102;"	d
RPCMNT_UMOUNT	nfs/rpcv2.h	101;"	d
RPCMNT_VER1	nfs/rpcv2.h	97;"	d
RPCMNT_VER3	nfs/rpcv2.h	98;"	d
RPCPROG_MNT	nfs/rpcv2.h	96;"	d
RPCPROG_NFS	nfs/rpcv2.h	106;"	d
RPCVERF_MAXSIZ	nfs/rpcv2.h	54;"	d
RPC_AUTHERR	nfs/rpcv2.h	81;"	d
RPC_CALL	nfs/rpcv2.h	64;"	d
RPC_GARBAGE	nfs/rpcv2.h	76;"	d
RPC_MISMATCH	nfs/rpcv2.h	80;"	d
RPC_MSGACCEPTED	nfs/rpcv2.h	68;"	d
RPC_MSGDENIED	nfs/rpcv2.h	69;"	d
RPC_PROCUNAVAIL	nfs/rpcv2.h	75;"	d
RPC_PROGMISMATCH	nfs/rpcv2.h	74;"	d
RPC_PROGUNAVAIL	nfs/rpcv2.h	73;"	d
RPC_REPLY	nfs/rpcv2.h	65;"	d
RPC_REPLYSIZ	nfs/rpcv2.h	93;"	d
RPC_SIZ	nfs/rpcv2.h	92;"	d
RPC_SUCCESS	nfs/rpcv2.h	72;"	d
RPC_SYSTEMERR	nfs/rpcv2.h	77;"	d
RPC_VER2	nfs/rpcv2.h	46;"	d
RRFIXEDSZ	arpa/nameser_compat.h	106;"	d
RTA	netinet/ip_input.c	1358;"	d	file:
RTAX_AUTHOR	net/route.h	246;"	d
RTAX_BRD	net/route.h	247;"	d
RTAX_DST	net/route.h	240;"	d
RTAX_GATEWAY	net/route.h	241;"	d
RTAX_GENMASK	net/route.h	243;"	d
RTAX_IFA	net/route.h	245;"	d
RTAX_IFP	net/route.h	244;"	d
RTAX_MAX	net/route.h	248;"	d
RTAX_NETMASK	net/route.h	242;"	d
RTA_AUTHOR	net/route.h	234;"	d
RTA_BRD	net/route.h	235;"	d
RTA_DST	net/route.h	228;"	d
RTA_GATEWAY	net/route.h	229;"	d
RTA_GENMASK	net/route.h	231;"	d
RTA_IFA	net/route.h	233;"	d
RTA_IFP	net/route.h	232;"	d
RTA_MASKS	libc/getifaddrs.c	183;"	d	file:
RTA_NETMASK	net/route.h	230;"	d
RTEMS_DHCP_FAILSAFE_BROADCAST_DELAY	rtems/rtems_dhcp_failsafe.h	33;"	d
RTEMS_DHCP_FAILSAFE_DHCP_MONITOR_PRIORITY	rtems/rtems_dhcp_failsafe.h	37;"	d
RTEMS_DHCP_FAILSAFE_NETWORK_DOWN_TIME	rtems/rtems_dhcp_failsafe.h	29;"	d
RTEMS_DHCP_FAILSAFE_NETWORK_FAIL_TIMEOUT	rtems/rtems_dhcp_failsafe.h	25;"	d
RTEMS_FAST_MUTEX	rtems/rtems_glue.c	5;"	d	file:
RTEMS_FAST_MUTEX	rtems/rtems_malloc_mbuf.c	5;"	d	file:
RTEMS_FTPFS_CTRL_PORT	rtems/ftpfs.h	79;"	d
RTEMS_FTPFS_IOCTL_GET_TIMEOUT	rtems/ftpfs.h	/^  RTEMS_FTPFS_IOCTL_GET_TIMEOUT = _IOR( 'd', 2, struct timeval *),$/;"	e	enum:__anon24
RTEMS_FTPFS_IOCTL_GET_VERBOSE	rtems/ftpfs.h	/^  RTEMS_FTPFS_IOCTL_GET_VERBOSE = _IOR( 'd', 1, bool *),$/;"	e	enum:__anon24
RTEMS_FTPFS_IOCTL_SET_TIMEOUT	rtems/ftpfs.h	/^  RTEMS_FTPFS_IOCTL_SET_TIMEOUT = _IOW( 'd', 2, struct timeval *)$/;"	e	enum:__anon24
RTEMS_FTPFS_IOCTL_SET_VERBOSE	rtems/ftpfs.h	/^  RTEMS_FTPFS_IOCTL_SET_VERBOSE = _IOW( 'd', 1, bool *),$/;"	e	enum:__anon24
RTEMS_FTPFS_MOUNT_POINT_DEFAULT	rtems/ftpfs.h	84;"	d
RTEMS_FTPFS_PASV_DATA	lib/ftpfs.c	/^  RTEMS_FTPFS_PASV_DATA,$/;"	e	enum:__anon20	file:
RTEMS_FTPFS_PASV_DONE	lib/ftpfs.c	/^  RTEMS_FTPFS_PASV_DONE$/;"	e	enum:__anon20	file:
RTEMS_FTPFS_PASV_JUNK	lib/ftpfs.c	/^  RTEMS_FTPFS_PASV_JUNK,$/;"	e	enum:__anon20	file:
RTEMS_FTPFS_PASV_START	lib/ftpfs.c	/^  RTEMS_FTPFS_PASV_START = 0,$/;"	e	enum:__anon20	file:
RTEMS_FTPFS_REPLY_1	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_1 = '1',$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_2	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_2 = '2',$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_3	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_3 = '3',$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_4	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_4 = '4',$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_5	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_5 = '5'$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_DONE	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_DONE,$/;"	e	enum:__anon17	file:
RTEMS_FTPFS_REPLY_ERROR	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_ERROR = 0,$/;"	e	enum:__anon18	file:
RTEMS_FTPFS_REPLY_MULTI_LINE	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_MULTI_LINE,$/;"	e	enum:__anon17	file:
RTEMS_FTPFS_REPLY_MULTI_LINE_START	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_MULTI_LINE_START$/;"	e	enum:__anon17	file:
RTEMS_FTPFS_REPLY_SINGLE_LINE	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_SINGLE_LINE,$/;"	e	enum:__anon17	file:
RTEMS_FTPFS_REPLY_SIZE	lib/ftpfs.c	278;"	d	file:
RTEMS_FTPFS_REPLY_START	lib/ftpfs.c	/^  RTEMS_FTPFS_REPLY_START,$/;"	e	enum:__anon17	file:
RTEMS_FTPFS_SIZE_NL	lib/ftpfs.c	/^  RTEMS_FTPFS_SIZE_NL$/;"	e	enum:__anon22	file:
RTEMS_FTPFS_SIZE_NUMBER	lib/ftpfs.c	/^  RTEMS_FTPFS_SIZE_NUMBER,$/;"	e	enum:__anon22	file:
RTEMS_FTPFS_SIZE_SPACE	lib/ftpfs.c	/^  RTEMS_FTPFS_SIZE_SPACE,$/;"	e	enum:__anon22	file:
RTEMS_FTPFS_SIZE_START	lib/ftpfs.c	/^  RTEMS_FTPFS_SIZE_START = 0,$/;"	e	enum:__anon22	file:
RTEMS_MII_IOCTL_H	rtems/rtems_mii_ioctl.h	52;"	d
RTE_FOUND	netinet/ip_mroute.c	205;"	d	file:
RTFREE	net/route.h	264;"	d
RTF_ANNOUNCE	netinet/if_ether.h	94;"	d
RTF_BLACKHOLE	net/route.h	147;"	d
RTF_BROADCAST	net/route.h	157;"	d
RTF_CLONING	net/route.h	143;"	d
RTF_DONE	net/route.h	141;"	d
RTF_DYNAMIC	net/route.h	139;"	d
RTF_GATEWAY	net/route.h	136;"	d
RTF_HOST	net/route.h	137;"	d
RTF_LLINFO	net/route.h	145;"	d
RTF_LOCAL	net/route.h	156;"	d
RTF_MODIFIED	net/route.h	140;"	d
RTF_MULTICAST	net/route.h	158;"	d
RTF_PINNED	net/route.h	155;"	d
RTF_PRCLONING	net/route.h	151;"	d
RTF_PROTO1	net/route.h	149;"	d
RTF_PROTO2	net/route.h	148;"	d
RTF_PROTO3	net/route.h	153;"	d
RTF_REJECT	net/route.h	138;"	d
RTF_STATIC	net/route.h	146;"	d
RTF_UP	net/route.h	135;"	d
RTF_USETRAILERS	netinet/if_ether.h	93;"	d
RTF_WASCLONED	net/route.h	152;"	d
RTF_XRESOLVE	net/route.h	144;"	d
RTM_ADD	net/route.h	194;"	d
RTM_CHANGE	net/route.h	196;"	d
RTM_DELADDR	net/route.h	206;"	d
RTM_DELETE	net/route.h	195;"	d
RTM_DELMADDR	net/route.h	209;"	d
RTM_GET	net/route.h	197;"	d
RTM_IEEE80211	net/route.h	211;"	d
RTM_IFANNOUNCE	net/route.h	210;"	d
RTM_IFINFO	net/route.h	207;"	d
RTM_LOCK	net/route.h	201;"	d
RTM_LOSING	net/route.h	198;"	d
RTM_MISS	net/route.h	200;"	d
RTM_NEWADDR	net/route.h	205;"	d
RTM_NEWMADDR	net/route.h	208;"	d
RTM_OLDADD	net/route.h	202;"	d
RTM_OLDDEL	net/route.h	203;"	d
RTM_REDIRECT	net/route.h	199;"	d
RTM_RESOLVE	net/route.h	204;"	d
RTM_RTTUNIT	net/route.h	84;"	d
RTM_VERSION	net/route.h	189;"	d
RTPRF_OURS	netinet/in_rmx.c	73;"	d	file:
RTQ_TIMEOUT	netinet/in_rmx.c	296;"	d	file:
RTTTOPRHZ	net/route.h	85;"	d
RTV_EXPIRE	net/route.h	218;"	d
RTV_HOPCOUNT	net/route.h	217;"	d
RTV_MTU	net/route.h	216;"	d
RTV_RPIPE	net/route.h	219;"	d
RTV_RTT	net/route.h	222;"	d
RTV_RTTVAR	net/route.h	223;"	d
RTV_SPIPE	net/route.h	220;"	d
RTV_SSTHRESH	net/route.h	221;"	d
RX_EMPTY	net/if_pppvar.h	144;"	d
RX_MBUF	net/if_pppvar.h	143;"	d
RX_PACKET	net/if_pppvar.h	142;"	d
R_Malloc	net/radix.h	139;"	d
R_Malloc	net/radix.h	146;"	d
R_Zalloc	net/radix.h	140;"	d
Rhook	libc/res_send.c	/^static res_send_rhook Rhook = NULL;$/;"	v	file:
SA	net/route.c	58;"	d	file:
SA	netinet/ip_input.c	1001;"	d	file:
SALIGN	libc/getifaddrs.c	62;"	d	file:
SAS_ALTSTACK	sys/signalvar.h	65;"	d
SAS_OLDMASK	sys/signalvar.h	64;"	d
SA_CANTMASK	sys/signalvar.h	105;"	d
SA_CONT	sys/signalvar.h	104;"	d
SA_CORE	sys/signalvar.h	100;"	d
SA_IGNORE	sys/signalvar.h	103;"	d
SA_KILL	sys/signalvar.h	99;"	d
SA_LEN	libc/getifaddrs.c	55;"	d	file:
SA_LEN	libc/getifaddrs.c	59;"	d	file:
SA_RLEN	libc/getifaddrs.c	63;"	d	file:
SA_STOP	sys/signalvar.h	101;"	d
SA_TTYSTOP	sys/signalvar.h	102;"	d
SBLOCKWAIT	kern/uipc_socket.c	308;"	d	file:
SBWAIT_EVENT	rtems/rtems_bsdnet_internal.h	215;"	d
SB_ASYNC	sys/socketvar.h	99;"	d
SB_LOCK	sys/socketvar.h	95;"	d
SB_MAX	sys/socketvar.h	94;"	d
SB_NOINTR	sys/socketvar.h	101;"	d
SB_NOTIFY	sys/socketvar.h	100;"	d
SB_SEL	sys/socketvar.h	98;"	d
SB_WAIT	sys/socketvar.h	97;"	d
SB_WANT	sys/socketvar.h	96;"	d
SCM_RIGHTS	sys/socket.h	350;"	d
SCM_TIMESTAMP	sys/socket.h	351;"	d
SC_CCP_OPEN	net/if_ppp.h	45;"	d
SC_CCP_UP	net/if_ppp.h	46;"	d
SC_COMP_AC	net/if_ppp.h	40;"	d
SC_COMP_PROT	net/if_ppp.h	39;"	d
SC_COMP_RUN	net/if_ppp.h	64;"	d
SC_COMP_TCP	net/if_ppp.h	41;"	d
SC_DC_ERROR	net/if_ppp.h	66;"	d
SC_DC_FERROR	net/if_ppp.h	67;"	d
SC_DEBUG	net/if_ppp.h	47;"	d
SC_DECOMP_RUN	net/if_ppp.h	65;"	d
SC_ESCAPED	net/if_ppp.h	71;"	d
SC_FLUSH	net/if_ppp.h	70;"	d
SC_LOG_FLUSH	net/if_ppp.h	51;"	d
SC_LOG_INPKT	net/if_ppp.h	48;"	d
SC_LOG_OUTPKT	net/if_ppp.h	49;"	d
SC_LOG_RAWIN	net/if_ppp.h	50;"	d
SC_MASK	net/if_ppp.h	57;"	d
SC_NO_TCP_CCID	net/if_ppp.h	42;"	d
SC_PKTLOST	net/if_ppp.h	69;"	d
SC_RCV_B7_0	net/if_ppp.h	52;"	d
SC_RCV_B7_1	net/if_ppp.h	53;"	d
SC_RCV_EVNP	net/if_ppp.h	54;"	d
SC_RCV_ODDP	net/if_ppp.h	55;"	d
SC_REJ_COMP_AC	net/if_ppp.h	43;"	d
SC_REJ_COMP_TCP	net/if_ppp.h	44;"	d
SC_SYNC	net/if_ppp.h	56;"	d
SC_TBUSY	net/if_ppp.h	68;"	d
SC_TIMEOUT	net/if_ppp.h	62;"	d
SC_TX_BUSY	net/if_pppvar.h	150;"	d
SC_TX_ESCAPE	net/if_pppvar.h	152;"	d
SC_TX_FCS	net/if_pppvar.h	151;"	d
SC_TX_LASTCHAR	net/if_pppvar.h	153;"	d
SC_TX_PENDING	net/if_pppvar.h	154;"	d
SC_VJ_RESET	net/if_ppp.h	63;"	d
SDL	netinet/if_ether.c	67;"	d	file:
SEQ_GEQ	netinet/tcp_seq.h	44;"	d
SEQ_GT	netinet/tcp_seq.h	43;"	d
SEQ_LEQ	netinet/tcp_seq.h	42;"	d
SEQ_LT	netinet/tcp_seq.h	41;"	d
SERVFAIL	arpa/nameser_compat.h	127;"	d
SERVICE_BIND	libc/gethostnamadr.c	/^  SERVICE_BIND,$/;"	e	enum:service_type	file:
SERVICE_BIND	libc/getnetnamadr.c	/^  SERVICE_BIND,$/;"	e	enum:service_type	file:
SERVICE_HOSTS	libc/gethostnamadr.c	/^  SERVICE_HOSTS,$/;"	e	enum:service_type	file:
SERVICE_MAX	libc/gethostnamadr.c	52;"	d	file:
SERVICE_MAX	libc/getnetnamadr.c	52;"	d	file:
SERVICE_NIS	libc/gethostnamadr.c	/^  SERVICE_NIS };$/;"	e	enum:service_type	file:
SERVICE_NIS	libc/getnetnamadr.c	/^  SERVICE_NIS };$/;"	e	enum:service_type	file:
SERVICE_NONE	libc/gethostnamadr.c	/^  SERVICE_NONE = 0,$/;"	e	enum:service_type	file:
SERVICE_NONE	libc/getnetnamadr.c	/^  SERVICE_NONE = 0,$/;"	e	enum:service_type	file:
SERVICE_TABLE	libc/getnetnamadr.c	/^  SERVICE_TABLE,$/;"	e	enum:service_type	file:
SET_BEGIN	sys/linker_set.h	85;"	d
SET_COUNT	sys/linker_set.h	106;"	d
SET_DECLARE	sys/linker_set.h	81;"	d
SET_ENTRY	sys/linker_set.h	76;"	d
SET_FOREACH	sys/linker_set.h	97;"	d
SET_ITEM	sys/linker_set.h	100;"	d
SET_LIMIT	sys/linker_set.h	87;"	d
SHUT_RD	sys/socket.h	376;"	d
SHUT_RDWR	sys/socket.h	378;"	d
SHUT_WR	sys/socket.h	377;"	d
SIGACTION	sys/signalvar.h	75;"	d
SIG_CATCH	sys/signalvar.h	68;"	d
SIG_HOLD	sys/signalvar.h	69;"	d
SIN	netinet/if_ether.c	66;"	d	file:
SIN_PROXY	netinet/if_ether.h	88;"	d
SIOCGPPPCSTATS	net/if_ppp.h	135;"	d
SIOCGPPPSTATS	net/if_ppp.h	134;"	d
SIO_RTEMS_SHOW_STATS	rtems/rtems_bsdnet_internal.h	196;"	d
SIZEOF_BPF_HDR	net/bpf.h	131;"	d
SI_COLL	sys/select.h	53;"	d
SI_ORDER_ANY	sys/kernel.h	/^	SI_ORDER_ANY		= 0xffffffff	\/* last*\/$/;"	e	enum:sysinit_elem_order
SI_ORDER_FIRST	sys/kernel.h	/^	SI_ORDER_FIRST		= 0x00000000,	\/* first*\/$/;"	e	enum:sysinit_elem_order
SI_ORDER_MIDDLE	sys/kernel.h	/^	SI_ORDER_MIDDLE		= 0x10000000,	\/* somewhere in the middle *\/$/;"	e	enum:sysinit_elem_order
SI_ORDER_SECOND	sys/kernel.h	/^	SI_ORDER_SECOND		= 0x00000001,	\/* second*\/$/;"	e	enum:sysinit_elem_order
SI_ORDER_THIRD	sys/kernel.h	/^	SI_ORDER_THIRD		= 0x00000002,	\/* third*\/$/;"	e	enum:sysinit_elem_order
SI_SUB_CLIST	sys/kernel.h	/^	SI_SUB_CLIST		= 0x58000000,	\/* clists*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_CLOCKS	sys/kernel.h	/^	SI_SUB_CLOCKS		= 0x48000000,	\/* real time and stat clocks*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_CONFIGURE	sys/kernel.h	/^	SI_SUB_CONFIGURE	= 0x24000000,	\/* Configure devices *\/$/;"	e	enum:sysinit_sub_id
SI_SUB_CONSOLE	sys/kernel.h	/^	SI_SUB_CONSOLE		= 0x08000000,	\/* console*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_COPYRIGHT	sys/kernel.h	/^	SI_SUB_COPYRIGHT	= 0x08000001,	\/* first use of console*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_CPU	sys/kernel.h	/^	SI_SUB_CPU		= 0x20000000,	\/* CPU resource(s)*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_DEVFS	sys/kernel.h	/^	SI_SUB_DEVFS		= 0x22000000,	\/* get DEVFS ready *\/$/;"	e	enum:sysinit_sub_id
SI_SUB_DRIVERS	sys/kernel.h	/^	SI_SUB_DRIVERS		= 0x23000000,	\/* Let Drivers initialize *\/$/;"	e	enum:sysinit_sub_id
SI_SUB_DUMMY	sys/kernel.h	/^	SI_SUB_DUMMY		= 0x00000000,	\/* not executed; for linker*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_INTRINSIC	sys/kernel.h	/^	SI_SUB_INTRINSIC	= 0x28000000,	\/* proc 0*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_INTRINSIC_POST	sys/kernel.h	/^	SI_SUB_INTRINSIC_POST	= 0xd0000000,	\/* proc 0 cleanup*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KICK_SCHEDULER	sys/kernel.h	/^	SI_SUB_KICK_SCHEDULER	= 0xa0000000,	\/* start the timeout events*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KMEM	sys/kernel.h	/^	SI_SUB_KMEM		= 0x18000000,	\/* kernel memory*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KPROF	sys/kernel.h	/^	SI_SUB_KPROF		= 0x90000000,	\/* kernel profiling*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KTHREAD_INIT	sys/kernel.h	/^	SI_SUB_KTHREAD_INIT	= 0xe0000000,	\/* init process*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KTHREAD_PAGE	sys/kernel.h	/^	SI_SUB_KTHREAD_PAGE	= 0xe4000000,	\/* pageout daemon*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KTHREAD_UPDATE	sys/kernel.h	/^	SI_SUB_KTHREAD_UPDATE	= 0xec000000,	\/* update daemon*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_KTHREAD_VM	sys/kernel.h	/^	SI_SUB_KTHREAD_VM	= 0xe8000000,	\/* vm daemon*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_MBUF	sys/kernel.h	/^	SI_SUB_MBUF		= 0x50000000,	\/* mbufs*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_PROTO_BEGIN	sys/kernel.h	/^	SI_SUB_PROTO_BEGIN	= 0x80000000,	\/* XXX: set splimp (kludge)*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_PROTO_DOMAIN	sys/kernel.h	/^	SI_SUB_PROTO_DOMAIN	= 0x88000000,	\/* domains (address families?)*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_PROTO_END	sys/kernel.h	/^	SI_SUB_PROTO_END	= 0x8fffffff,	\/* XXX: set splx (kludge)*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_PROTO_IF	sys/kernel.h	/^	SI_SUB_PROTO_IF		= 0x84000000,	\/* interfaces*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_PSEUDO	sys/kernel.h	/^	SI_SUB_PSEUDO		= 0x70000000,	\/* pseudo devices*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_ROOT	sys/kernel.h	/^	SI_SUB_ROOT		= 0xb0000000,	\/* root mount*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_ROOT_FDTAB	sys/kernel.h	/^	SI_SUB_ROOT_FDTAB	= 0xb8000000,	\/* root vnode in fd table...*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_RUN_QUEUE	sys/kernel.h	/^	SI_SUB_RUN_QUEUE	= 0x30000000,	\/* the run queue*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_RUN_SCHEDULER	sys/kernel.h	/^	SI_SUB_RUN_SCHEDULER	= 0xffffffff	\/* scheduler: no return*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_SWAP	sys/kernel.h	/^	SI_SUB_SWAP		= 0xc0000000,	\/* swap*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_SYSV_MSG	sys/kernel.h	/^	SI_SUB_SYSV_MSG		= 0x6C000000,	\/* System V message queues*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_SYSV_SEM	sys/kernel.h	/^	SI_SUB_SYSV_SEM		= 0x68000000,	\/* System V semaphores*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_SYSV_SHM	sys/kernel.h	/^	SI_SUB_SYSV_SHM		= 0x64000000,	\/* System V shared memory*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_VFS	sys/kernel.h	/^	SI_SUB_VFS		= 0x40000000,	\/* virtual file system*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_VM	sys/kernel.h	/^	SI_SUB_VM		= 0x10000000,	\/* virtual memory system init*\/$/;"	e	enum:sysinit_sub_id
SI_SUB_VM_CONF	sys/kernel.h	/^	SI_SUB_VM_CONF		= 0x38000000,	\/* config VM, set limits*\/$/;"	e	enum:sysinit_sub_id
SLF_TOSS	net/slcompress.h	153;"	d
SOCK_DGRAM	sys/socket.h	63;"	d
SOCK_RAW	sys/socket.h	64;"	d
SOCK_RDM	sys/socket.h	66;"	d
SOCK_SEQPACKET	sys/socket.h	68;"	d
SOCK_STREAM	sys/socket.h	62;"	d
SOL_SOCKET	sys/socket.h	131;"	d
SOMAXCONN	sys/socket.h	295;"	d
SOSLEEP_EVENT	rtems/rtems_bsdnet_internal.h	216;"	d
SO_ACCEPTCONN	sys/socket.h	74;"	d
SO_ACCEPTFILTER	sys/socket.h	88;"	d
SO_BINTIME	sys/socket.h	89;"	d
SO_BROADCAST	sys/socket.h	78;"	d
SO_DEBUG	sys/socket.h	73;"	d
SO_DONTROUTE	sys/socket.h	77;"	d
SO_ERROR	sys/socket.h	101;"	d
SO_KEEPALIVE	sys/socket.h	76;"	d
SO_LINGER	sys/socket.h	82;"	d
SO_NOSIGPIPE	sys/socket.h	87;"	d
SO_OOBINLINE	sys/socket.h	83;"	d
SO_PRIVSTATE	sys/socket.h	103;"	d
SO_RCVBUF	sys/socket.h	96;"	d
SO_RCVLOWAT	sys/socket.h	98;"	d
SO_RCVTIMEO	sys/socket.h	100;"	d
SO_RCVWAKEUP	sys/socket.h	109;"	d
SO_REUSEADDR	sys/socket.h	75;"	d
SO_REUSEPORT	sys/socket.h	85;"	d
SO_SNDBUF	sys/socket.h	95;"	d
SO_SNDLOWAT	sys/socket.h	97;"	d
SO_SNDTIMEO	sys/socket.h	99;"	d
SO_SNDWAKEUP	sys/socket.h	108;"	d
SO_TIMESTAMP	sys/socket.h	86;"	d
SO_TYPE	sys/socket.h	102;"	d
SO_USELOOPBACK	sys/socket.h	80;"	d
SPECIALS_MASK	net/slcompress.h	106;"	d
SPECIAL_D	net/slcompress.h	105;"	d
SPECIAL_I	net/slcompress.h	104;"	d
SPRINTF	libc/gethostbydns.c	85;"	d	file:
SPRINTF	libc/inet_ntop.c	31;"	d	file:
SPRINTF	libc/ns_print.c	40;"	d	file:
SPRINTF	libc/ns_ttl.c	31;"	d	file:
SPRINTF	libc/res_debug.c	123;"	d	file:
SS_ASYNC	sys/socketvar.h	121;"	d
SS_CANTRCVMORE	sys/socketvar.h	116;"	d
SS_CANTSENDMORE	sys/socketvar.h	115;"	d
SS_COMP	sys/socketvar.h	125;"	d
SS_INCOMP	sys/socketvar.h	124;"	d
SS_ISCONFIRMING	sys/socketvar.h	122;"	d
SS_ISCONNECTED	sys/socketvar.h	112;"	d
SS_ISCONNECTING	sys/socketvar.h	113;"	d
SS_ISDISCONNECTING	sys/socketvar.h	114;"	d
SS_NBIO	sys/socketvar.h	120;"	d
SS_NOFDREF	sys/socketvar.h	111;"	d
SS_PRIV	sys/socketvar.h	119;"	d
SS_RCVATMARK	sys/socketvar.h	117;"	d
STATE_DONE	lib/ftpfs.c	/^  STATE_DONE,$/;"	e	enum:__anon19	file:
STATE_HOST_NAME	lib/ftpfs.c	/^  STATE_HOST_NAME,$/;"	e	enum:__anon19	file:
STATE_INVALID	lib/ftpfs.c	/^  STATE_INVALID$/;"	e	enum:__anon19	file:
STATE_PASSWORD	lib/ftpfs.c	/^  STATE_PASSWORD,$/;"	e	enum:__anon19	file:
STATE_START_HOST_NAME	lib/ftpfs.c	/^  STATE_START_HOST_NAME,$/;"	e	enum:__anon19	file:
STATE_START_HOST_NAME_OR_PATH	lib/ftpfs.c	/^  STATE_START_HOST_NAME_OR_PATH,$/;"	e	enum:__anon19	file:
STATE_START_PASSWORD	lib/ftpfs.c	/^  STATE_START_PASSWORD,$/;"	e	enum:__anon19	file:
STATE_START_PATH	lib/ftpfs.c	/^  STATE_START_PATH,$/;"	e	enum:__anon19	file:
STATE_USER_NAME	lib/ftpfs.c	/^  STATE_USER_NAME,$/;"	e	enum:__anon19	file:
STATUS	arpa/nameser_compat.h	121;"	d
STR32_UNALGN	netinet/tcp_var.h	238;"	d
STRU_F	arpa/ftp.h	75;"	d
STRU_P	arpa/ftp.h	77;"	d
STRU_R	arpa/ftp.h	76;"	d
SUNSECURITY	libc/res_config.h	5;"	d
SUN_LEN	sys/un.h	69;"	d
SYSCTL_ADD_INT	sys/sysctl.h	237;"	d
SYSCTL_ADD_LONG	sys/sysctl.h	255;"	d
SYSCTL_ADD_NODE	sys/sysctl.h	219;"	d
SYSCTL_ADD_OID	sys/sysctl.h	209;"	d
SYSCTL_ADD_OPAQUE	sys/sysctl.h	273;"	d
SYSCTL_ADD_PROC	sys/sysctl.h	292;"	d
SYSCTL_ADD_STRING	sys/sysctl.h	228;"	d
SYSCTL_ADD_STRUCT	sys/sysctl.h	283;"	d
SYSCTL_ADD_UINT	sys/sysctl.h	246;"	d
SYSCTL_ADD_ULONG	sys/sysctl.h	264;"	d
SYSCTL_CHILDREN	sys/sysctl.h	182;"	d
SYSCTL_CHILDREN_SET	sys/sysctl.h	184;"	d
SYSCTL_DECL	sys/sysctl.h	178;"	d
SYSCTL_HANDLER_ARGS	sys/sysctl.h	116;"	d
SYSCTL_IN	sys/sysctl.h	162;"	d
SYSCTL_INIT	kern/kern_sysctl.c	90;"	d	file:
SYSCTL_INIT	kern/kern_sysctl.c	94;"	d	file:
SYSCTL_INT	sys/sysctl.h	233;"	d
SYSCTL_LOCK	kern/kern_sysctl.c	88;"	d	file:
SYSCTL_LOCK	kern/kern_sysctl.c	92;"	d	file:
SYSCTL_LONG	sys/sysctl.h	251;"	d
SYSCTL_NODE	sys/sysctl.h	213;"	d
SYSCTL_NODE_CHILDREN	sys/sysctl.h	199;"	d
SYSCTL_OID	sys/sysctl.h	203;"	d
SYSCTL_OPAQUE	sys/sysctl.h	269;"	d
SYSCTL_OUT	sys/sysctl.h	163;"	d
SYSCTL_PROC	sys/sysctl.h	288;"	d
SYSCTL_STATIC_CHILDREN	sys/sysctl.h	186;"	d
SYSCTL_STRING	sys/sysctl.h	224;"	d
SYSCTL_STRUCT	sys/sysctl.h	278;"	d
SYSCTL_UINT	sys/sysctl.h	242;"	d
SYSCTL_ULONG	sys/sysctl.h	260;"	d
SYSCTL_UNLOCK	kern/kern_sysctl.c	89;"	d	file:
SYSCTL_UNLOCK	kern/kern_sysctl.c	93;"	d	file:
SYSINIT	sys/kernel.h	166;"	d
SYSINIT_KT	sys/kernel.h	172;"	d
SYSLOG_PORT	lib/syslog.c	30;"	d	file:
S_ADDT	arpa/nameser_compat.h	117;"	d
S_PREREQ	arpa/nameser_compat.h	115;"	d
S_UPDATE	arpa/nameser_compat.h	116;"	d
S_ZONE	arpa/nameser_compat.h	114;"	d
ShrinkBuffer	libc/res_mkupdate.c	49;"	d	file:
T	libc/ns_print.c	58;"	d	file:
T	libc/ns_ttl.c	39;"	d	file:
TANAMES	netinet/tcp_debug.c	45;"	d	file:
TA_DROP	netinet/tcp_debug.h	54;"	d
TA_INPUT	netinet/tcp_debug.h	50;"	d
TA_OUTPUT	netinet/tcp_debug.h	51;"	d
TA_RESPOND	netinet/tcp_debug.h	53;"	d
TA_USER	netinet/tcp_debug.h	52;"	d
TBF_REPROCESS	netinet/ip_mroute.c	227;"	d	file:
TCBHASHSIZE	netinet/tcp_subr.c	95;"	d	file:
TCPCTL_DO_RFC1323	netinet/tcp_var.h	338;"	d
TCPCTL_DO_RFC1644	netinet/tcp_var.h	339;"	d
TCPCTL_KEEPIDLE	netinet/tcp_var.h	343;"	d
TCPCTL_KEEPINIT	netinet/tcp_var.h	347;"	d
TCPCTL_KEEPINTVL	netinet/tcp_var.h	344;"	d
TCPCTL_MAXID	netinet/tcp_var.h	349;"	d
TCPCTL_MSSDFLT	netinet/tcp_var.h	340;"	d
TCPCTL_NAMES	netinet/tcp_var.h	351;"	d
TCPCTL_PCBLIST	netinet/tcp_var.h	348;"	d
TCPCTL_RECVSPACE	netinet/tcp_var.h	346;"	d
TCPCTL_RTTDFLT	netinet/tcp_var.h	342;"	d
TCPCTL_SENDSPACE	netinet/tcp_var.h	345;"	d
TCPCTL_STATS	netinet/tcp_var.h	341;"	d
TCPDEBUG0	netinet/tcp_usrreq.c	85;"	d	file:
TCPDEBUG0	netinet/tcp_usrreq.c	90;"	d	file:
TCPDEBUG1	netinet/tcp_usrreq.c	86;"	d	file:
TCPDEBUG1	netinet/tcp_usrreq.c	91;"	d	file:
TCPDEBUG2	netinet/tcp_usrreq.c	87;"	d	file:
TCPDEBUG2	netinet/tcp_usrreq.c	92;"	d	file:
TCPOLEN_CC	netinet/tcp.h	103;"	d
TCPOLEN_CC_APPA	netinet/tcp.h	104;"	d
TCPOLEN_MAXSEG	netinet/tcp.h	85;"	d
TCPOLEN_SACK_PERMITTED	netinet/tcp.h	89;"	d
TCPOLEN_TIMESTAMP	netinet/tcp.h	92;"	d
TCPOLEN_TSTAMP_APPA	netinet/tcp.h	93;"	d
TCPOLEN_WINDOW	netinet/tcp.h	87;"	d
TCPOOB_HADDATA	netinet/tcp_var.h	134;"	d
TCPOOB_HAVEDATA	netinet/tcp_var.h	133;"	d
TCPOPT_CC	netinet/tcp.h	100;"	d
TCPOPT_CCECHO	netinet/tcp.h	102;"	d
TCPOPT_CCNEW	netinet/tcp.h	101;"	d
TCPOPT_CC_HDR	netinet/tcp.h	105;"	d
TCPOPT_EOL	netinet/tcp.h	82;"	d
TCPOPT_MAXSEG	netinet/tcp.h	84;"	d
TCPOPT_NOP	netinet/tcp.h	83;"	d
TCPOPT_SACK	netinet/tcp.h	90;"	d
TCPOPT_SACK_PERMITTED	netinet/tcp.h	88;"	d
TCPOPT_TIMESTAMP	netinet/tcp.h	91;"	d
TCPOPT_TSTAMP_HDR	netinet/tcp.h	94;"	d
TCPOPT_WINDOW	netinet/tcp.h	86;"	d
TCPOUTFLAGS	netinet/tcp_output.c	56;"	d	file:
TCPSTATES	netinet/tcp_debug.c	43;"	d	file:
TCPS_CLOSED	netinet/tcp_fsm.h	46;"	d
TCPS_CLOSE_WAIT	netinet/tcp_fsm.h	52;"	d
TCPS_CLOSING	netinet/tcp_fsm.h	55;"	d
TCPS_ESTABLISHED	netinet/tcp_fsm.h	51;"	d
TCPS_FIN_WAIT_1	netinet/tcp_fsm.h	54;"	d
TCPS_FIN_WAIT_2	netinet/tcp_fsm.h	58;"	d
TCPS_HAVEESTABLISHED	netinet/tcp_fsm.h	62;"	d
TCPS_HAVERCVDFIN	netinet/tcp_fsm.h	63;"	d
TCPS_HAVERCVDSYN	netinet/tcp_fsm.h	61;"	d
TCPS_LAST_ACK	netinet/tcp_fsm.h	56;"	d
TCPS_LISTEN	netinet/tcp_fsm.h	47;"	d
TCPS_SYN_RECEIVED	netinet/tcp_fsm.h	49;"	d
TCPS_SYN_SENT	netinet/tcp_fsm.h	48;"	d
TCPS_TIME_WAIT	netinet/tcp_fsm.h	59;"	d
TCPTIMERS	netinet/tcp_debug.c	44;"	d	file:
TCPTV_KEEPCNT	netinet/tcp_timer.h	98;"	d
TCPTV_KEEPINTVL	netinet/tcp_timer.h	97;"	d
TCPTV_KEEP_IDLE	netinet/tcp_timer.h	96;"	d
TCPTV_KEEP_INIT	netinet/tcp_timer.h	95;"	d
TCPTV_MIN	netinet/tcp_timer.h	100;"	d
TCPTV_MSL	netinet/tcp_timer.h	86;"	d
TCPTV_PERSMAX	netinet/tcp_timer.h	93;"	d
TCPTV_PERSMIN	netinet/tcp_timer.h	92;"	d
TCPTV_REXMTMAX	netinet/tcp_timer.h	101;"	d
TCPTV_RTOBASE	netinet/tcp_timer.h	89;"	d
TCPTV_SRTTBASE	netinet/tcp_timer.h	87;"	d
TCPTV_SRTTDFLT	netinet/tcp_timer.h	90;"	d
TCPTV_TWTRUNC	netinet/tcp_timer.h	103;"	d
TCPT_2MSL	netinet/tcp_timer.h	45;"	d
TCPT_KEEP	netinet/tcp_timer.h	44;"	d
TCPT_NTIMERS	netinet/tcp_timer.h	40;"	d
TCPT_PERSIST	netinet/tcp_timer.h	43;"	d
TCPT_RANGESET	netinet/tcp_timer.h	117;"	d
TCPT_REXMT	netinet/tcp_timer.h	42;"	d
TCP_DELTA_SHIFT	netinet/tcp_var.h	207;"	d
TCP_INFO	netinet/tcp.h	135;"	d
TCP_ISSINCR	netinet/tcp_seq.h	93;"	d
TCP_ISSINCR	netinet/tcp_seq.h	97;"	d
TCP_LINGERTIME	netinet/tcp_timer.h	105;"	d
TCP_MAXHLEN	netinet/tcp.h	121;"	d
TCP_MAXOLEN	netinet/tcp.h	122;"	d
TCP_MAXRXTSHIFT	netinet/tcp_timer.h	107;"	d
TCP_MAXSEG	netinet/tcp.h	131;"	d
TCP_MAXWIN	netinet/tcp.h	116;"	d
TCP_MAX_WINSHIFT	netinet/tcp.h	119;"	d
TCP_MD5SIG	netinet/tcp.h	134;"	d
TCP_MSS	netinet/tcp.h	114;"	d
TCP_NDEBUG	netinet/tcp_debug.h	61;"	d
TCP_NODELAY	netinet/tcp.h	129;"	d
TCP_NOOPT	netinet/tcp.h	133;"	d
TCP_NOPUSH	netinet/tcp.h	132;"	d
TCP_NSTATES	netinet/tcp_fsm.h	44;"	d
TCP_PAWS_IDLE	netinet/tcp_seq.h	75;"	d
TCP_PUSH_BIT	net/slcompress.h	108;"	d
TCP_REASS	netinet/tcp_input.c	109;"	d	file:
TCP_REASS	netinet/tcp_input.c	129;"	d	file:
TCP_REXMTVAL	netinet/tcp_var.h	225;"	d
TCP_RTTVAR_SCALE	netinet/tcp_var.h	205;"	d
TCP_RTTVAR_SHIFT	netinet/tcp_var.h	206;"	d
TCP_RTT_SCALE	netinet/tcp_var.h	203;"	d
TCP_RTT_SHIFT	netinet/tcp_var.h	204;"	d
TEXT_SET	sys/linker_set.h	72;"	d
TFTPFS_VERBOSE	lib/tftpDriver.c	147;"	d	file:
TFTP_BUFSIZE	lib/tftpDriver.c	68;"	d	file:
TFTP_OPCODE_ACK	lib/tftpDriver.c	62;"	d	file:
TFTP_OPCODE_DATA	lib/tftpDriver.c	61;"	d	file:
TFTP_OPCODE_ERROR	lib/tftpDriver.c	63;"	d	file:
TFTP_OPCODE_RRQ	lib/tftpDriver.c	59;"	d	file:
TFTP_OPCODE_WRQ	lib/tftpDriver.c	60;"	d	file:
TF_ACKNOW	netinet/tcp_var.h	53;"	d
TF_DELACK	netinet/tcp_var.h	54;"	d
TF_FASTRECOVERY	netinet/tcp_var.h	73;"	d
TF_LASTIDLE	netinet/tcp_var.h	71;"	d
TF_LQ_OVERFLOW	netinet/tcp_var.h	70;"	d
TF_MORETOCOME	netinet/tcp_var.h	69;"	d
TF_NEEDFIN	netinet/tcp_var.h	64;"	d
TF_NEEDSYN	netinet/tcp_var.h	63;"	d
TF_NODELAY	netinet/tcp_var.h	55;"	d
TF_NOOPT	netinet/tcp_var.h	56;"	d
TF_NOPUSH	netinet/tcp_var.h	65;"	d
TF_RCVD_CC	netinet/tcp_var.h	67;"	d
TF_RCVD_SCALE	netinet/tcp_var.h	59;"	d
TF_RCVD_TSTMP	netinet/tcp_var.h	61;"	d
TF_REQ_CC	netinet/tcp_var.h	66;"	d
TF_REQ_SCALE	netinet/tcp_var.h	58;"	d
TF_REQ_TSTMP	netinet/tcp_var.h	60;"	d
TF_RXWIN0SENT	netinet/tcp_var.h	72;"	d
TF_SACK_PERMIT	netinet/tcp_var.h	62;"	d
TF_SENDCCNEW	netinet/tcp_var.h	68;"	d
TF_SENTFIN	netinet/tcp_var.h	57;"	d
TF_SIGNATURE	netinet/tcp_var.h	75;"	d
TF_WASFRECOVERY	netinet/tcp_var.h	74;"	d
TH_ACK	netinet/tcp.h	71;"	d
TH_CWR	netinet/tcp.h	74;"	d
TH_ECE	netinet/tcp.h	73;"	d
TH_FIN	netinet/tcp.h	67;"	d
TH_FLAGS	netinet/tcp.h	75;"	d
TH_PUSH	netinet/tcp.h	70;"	d
TH_RST	netinet/tcp.h	69;"	d
TH_SYN	netinet/tcp.h	68;"	d
TH_URG	netinet/tcp.h	72;"	d
TOF_CC	netinet/tcp_var.h	164;"	d
TOF_CCECHO	netinet/tcp_var.h	166;"	d
TOF_CCNEW	netinet/tcp_var.h	165;"	d
TOF_MSS	netinet/tcp_var.h	167;"	d
TOF_SACK	netinet/tcp_var.h	171;"	d
TOF_SCALE	netinet/tcp_var.h	168;"	d
TOF_SIGLEN	netinet/tcp_var.h	170;"	d
TOF_SIGNATURE	netinet/tcp_var.h	169;"	d
TOF_TS	netinet/tcp_var.h	163;"	d
TRANSIENT	arpa/ftp.h	47;"	d
TRY_AGAIN	netdb.h	125;"	d
TSTMP_GEQ	netinet/tcp_seq.h	48;"	d
TSTMP_LT	netinet/tcp_seq.h	47;"	d
TTCP_CLIENT_SND_WND	netinet/tcp.h	117;"	d
TTYDEFCHARS	sys/ttydefaults.h	95;"	d
TTYDEF_CFLAG	sys/ttydefaults.h	53;"	d
TTYDEF_IFLAG	sys/ttydefaults.h	50;"	d
TTYDEF_LFLAG	sys/ttydefaults.h	52;"	d
TTYDEF_OFLAG	sys/ttydefaults.h	51;"	d
TTYDEF_SPEED	sys/ttydefaults.h	54;"	d
TUNNEL_LEN	netinet/ip_mroute.c	1062;"	d	file:
TV_DELTA	netinet/ip_mroute.c	349;"	d	file:
TV_LT	netinet/ip_mroute.c	367;"	d	file:
TX_PACKET	net/if_pppvar.h	145;"	d
TX_TRANSMIT	net/if_pppvar.h	146;"	d
TYPE_A	arpa/ftp.h	53;"	d
TYPE_COMPRESSED_TCP	net/slcompress.h	92;"	d
TYPE_E	arpa/ftp.h	54;"	d
TYPE_ERROR	net/slcompress.h	93;"	d
TYPE_I	arpa/ftp.h	55;"	d
TYPE_IP	net/slcompress.h	90;"	d
TYPE_L	arpa/ftp.h	56;"	d
TYPE_UNCOMPRESSED_TCP	net/slcompress.h	91;"	d
T_A	arpa/nameser_compat.h	140;"	d
T_AAAA	arpa/nameser_compat.h	167;"	d
T_AFSDB	arpa/nameser_compat.h	157;"	d
T_ANY	arpa/nameser_compat.h	179;"	d
T_ATMA	arpa/nameser_compat.h	173;"	d
T_AXFR	arpa/nameser_compat.h	176;"	d
T_CNAME	arpa/nameser_compat.h	144;"	d
T_EID	arpa/nameser_compat.h	170;"	d
T_GPOS	arpa/nameser_compat.h	166;"	d
T_HINFO	arpa/nameser_compat.h	152;"	d
T_ISDN	arpa/nameser_compat.h	159;"	d
T_IXFR	arpa/nameser_compat.h	175;"	d
T_KEY	arpa/nameser_compat.h	164;"	d
T_LOC	arpa/nameser_compat.h	168;"	d
T_MAILA	arpa/nameser_compat.h	178;"	d
T_MAILB	arpa/nameser_compat.h	177;"	d
T_MB	arpa/nameser_compat.h	146;"	d
T_MD	arpa/nameser_compat.h	142;"	d
T_MF	arpa/nameser_compat.h	143;"	d
T_MG	arpa/nameser_compat.h	147;"	d
T_MINFO	arpa/nameser_compat.h	153;"	d
T_MR	arpa/nameser_compat.h	148;"	d
T_MX	arpa/nameser_compat.h	154;"	d
T_NAPTR	arpa/nameser_compat.h	174;"	d
T_NIMLOC	arpa/nameser_compat.h	171;"	d
T_NS	arpa/nameser_compat.h	141;"	d
T_NSAP	arpa/nameser_compat.h	161;"	d
T_NSAP_PTR	arpa/nameser_compat.h	162;"	d
T_NULL	arpa/nameser_compat.h	149;"	d
T_NXT	arpa/nameser_compat.h	169;"	d
T_PTR	arpa/nameser_compat.h	151;"	d
T_PX	arpa/nameser_compat.h	165;"	d
T_RP	arpa/nameser_compat.h	156;"	d
T_RT	arpa/nameser_compat.h	160;"	d
T_SIG	arpa/nameser_compat.h	163;"	d
T_SOA	arpa/nameser_compat.h	145;"	d
T_SRV	arpa/nameser_compat.h	172;"	d
T_TXT	arpa/nameser_compat.h	155;"	d
T_WKS	arpa/nameser_compat.h	150;"	d
T_X25	arpa/nameser_compat.h	158;"	d
UDBHASHSIZE	netinet/udp_usrreq.c	84;"	d	file:
UDPCTL_CHECKSUM	netinet/udp_var.h	77;"	d
UDPCTL_MAXDGRAM	netinet/udp_var.h	79;"	d
UDPCTL_MAXID	netinet/udp_var.h	82;"	d
UDPCTL_NAMES	netinet/udp_var.h	84;"	d
UDPCTL_PCBLIST	netinet/udp_var.h	81;"	d
UDPCTL_RECVSPACE	netinet/udp_var.h	80;"	d
UDPCTL_STATS	netinet/udp_var.h	78;"	d
UDP_PORT_BASE	lib/tftpDriver.c	46;"	d	file:
UNIX_BASE_TO_NTP_BASE	lib/rtems_bsdnet_ntp.c	40;"	d	file:
UPCALL_EXPIRE	netinet/ip_mroute.c	219;"	d	file:
USELOOPBACK	libc/res_config.h	4;"	d
USER_BC_BASE_MAX	sys/sysctl.h	476;"	d
USER_BC_DIM_MAX	sys/sysctl.h	477;"	d
USER_BC_SCALE_MAX	sys/sysctl.h	478;"	d
USER_BC_STRING_MAX	sys/sysctl.h	479;"	d
USER_COLL_WEIGHTS_MAX	sys/sysctl.h	480;"	d
USER_CS_PATH	sys/sysctl.h	475;"	d
USER_EXPR_NEST_MAX	sys/sysctl.h	481;"	d
USER_LINE_MAX	sys/sysctl.h	482;"	d
USER_MAXID	sys/sysctl.h	495;"	d
USER_POSIX2_CHAR_TERM	sys/sysctl.h	487;"	d
USER_POSIX2_C_BIND	sys/sysctl.h	485;"	d
USER_POSIX2_C_DEV	sys/sysctl.h	486;"	d
USER_POSIX2_FORT_DEV	sys/sysctl.h	488;"	d
USER_POSIX2_FORT_RUN	sys/sysctl.h	489;"	d
USER_POSIX2_LOCALEDEF	sys/sysctl.h	490;"	d
USER_POSIX2_SW_DEV	sys/sysctl.h	491;"	d
USER_POSIX2_UPE	sys/sysctl.h	492;"	d
USER_POSIX2_VERSION	sys/sysctl.h	484;"	d
USER_RE_DUP_MAX	sys/sysctl.h	483;"	d
USER_STREAM_MAX	sys/sysctl.h	493;"	d
USER_TZNAME_MAX	sys/sysctl.h	494;"	d
USE_WRITEV	libc/res_send.c	105;"	d	file:
VIFF_SRCRT	netinet/ip_mroute.h	110;"	d
VIFF_TUNNEL	netinet/ip_mroute.h	109;"	d
VIFM_CLR	netinet/ip_mroute.h	89;"	d
VIFM_CLRALL	netinet/ip_mroute.h	91;"	d
VIFM_COPY	netinet/ip_mroute.h	92;"	d
VIFM_ISSET	netinet/ip_mroute.h	90;"	d
VIFM_SAME	netinet/ip_mroute.h	93;"	d
VIFM_SET	netinet/ip_mroute.h	88;"	d
VJC	opt_ppp.h	6;"	d
VM_H	vm/vm.h	62;"	d
VM_LOADAVG	vm/vm_param.h	78;"	d
VM_MAXID	vm/vm_param.h	88;"	d
VM_METER	vm/vm_param.h	77;"	d
VM_PAGEOUT_ALGORITHM	vm/vm_param.h	86;"	d
VM_SWAPPING_ENABLED	vm/vm_param.h	87;"	d
VM_TOTAL	vm/vm_param.h	76;"	d
VM_V_CACHE_MAX	vm/vm_param.h	84;"	d
VM_V_CACHE_MIN	vm/vm_param.h	83;"	d
VM_V_FREE_MIN	vm/vm_param.h	79;"	d
VM_V_FREE_RESERVED	vm/vm_param.h	81;"	d
VM_V_FREE_TARGET	vm/vm_param.h	80;"	d
VM_V_INACTIVE_TARGET	vm/vm_param.h	82;"	d
VM_V_PAGEOUT_FREE_MIN	vm/vm_param.h	85;"	d
WHATPRINT	rtems/rtems_mii_ioctl.c	82;"	d	file:
X_ip_mcast_src	netinet/ip_mroute.c	/^X_ip_mcast_src(int vifi)$/;"	f	file:
X_ip_mforward	netinet/ip_mroute.c	/^X_ip_mforward(struct ip *ip, struct ifnet *ifp, struct mbuf *m,$/;"	f	file:
X_ip_mrouter_done	netinet/ip_mroute.c	/^X_ip_mrouter_done(void)$/;"	f	file:
X_ip_mrouter_get	netinet/ip_mroute.c	/^X_ip_mrouter_get(int cmd, struct socket *so, struct mbuf **m)$/;"	f	file:
X_ip_mrouter_set	netinet/ip_mroute.c	/^X_ip_mrouter_set(int cmd, struct socket *so, struct mbuf *m)$/;"	f	file:
X_ipip_input	netinet/ip_mroute.c	/^X_ipip_input(struct mbuf *m, int iphlen)$/;"	f
X_legal_vif_num	netinet/ip_mroute.c	/^X_legal_vif_num(int vif)$/;"	f	file:
X_mrt_ioctl	netinet/ip_mroute.c	/^X_mrt_ioctl(int cmd, caddr_t data)$/;"	f	file:
YXDOMAIN	arpa/nameser_compat.h	131;"	d
YXRRSET	arpa/nameser_compat.h	132;"	d
_ARPA_FTP_H_	arpa/ftp.h	37;"	d
_ARPA_INET_H_	arpa/inet.h	59;"	d
_ARPA_NAMESER_COMPAT_	arpa/nameser_compat.h	39;"	d
_ARPA_NAMESER_H_	arpa/nameser.h	58;"	d
_BSD_OFF_T_	rtems/rtems_bsdnet_internal.h	26;"	d
_BSD_PID_T_	rtems/rtems_bsdnet_internal.h	27;"	d
_BSD_VA_LIST_	rtems/rtems_bsdnet_internal.h	28;"	d
_DEV_MII_MII_H_	dev/mii/mii.h	38;"	d
_IFADDRS_H_	ifaddrs.h	29;"	d
_IF_PPP_H_	net/if_ppp.h	24;"	d
_IN_ADDR_T_DECLARED	arpa/inet.h	74;"	d
_IN_ADDR_T_DECLARED	netinet/in.h	42;"	d
_IN_PORT_T_DECLARED	arpa/inet.h	79;"	d
_IN_PORT_T_DECLARED	netinet/in.h	56;"	d
_IP_FW_H	netinet/ip_fw.h	16;"	d
_KERNEL	rtems/rtems_bsdnet.h	23;"	d
_KERNEL	rtems/rtems_bsdnet.h	30;"	d
_KERNEL	rtems/rtems_mii_ioctl.c	57;"	d	file:
_MACHINE_IN_CKSUM_H_	machine/in_cksum.h	51;"	d
_NETDB_H_	netdb.h	63;"	d
_NETINET_ICMP_VAR_H_	netinet/icmp_var.h	37;"	d
_NETINET_IF_ETHER_H_	netinet/if_ether.h	35;"	d
_NETINET_IGMP_H_	netinet/igmp.h	41;"	d
_NETINET_IGMP_VAR_H_	netinet/igmp_var.h	38;"	d
_NETINET_IN_H_	netinet/in.h	35;"	d
_NETINET_IN_PCB_H_	netinet/in_pcb.h	35;"	d
_NETINET_IN_SYSTM_H_	netinet/in_systm.h	34;"	d
_NETINET_IN_VAR_H_	netinet/in_var.h	34;"	d
_NETINET_IP_H_	netinet/ip.h	35;"	d
_NETINET_IP_ICMP_H_	netinet/ip_icmp.h	35;"	d
_NETINET_IP_MROUTE_H_	netinet/ip_mroute.h	39;"	d
_NETINET_IP_VAR_H_	netinet/ip_var.h	35;"	d
_NETINET_TCPIP_H_	netinet/tcpip.h	35;"	d
_NETINET_TCP_DEBUG_H_	netinet/tcp_debug.h	35;"	d
_NETINET_TCP_FSM_H_	netinet/tcp_fsm.h	37;"	d
_NETINET_TCP_H_	netinet/tcp.h	35;"	d
_NETINET_TCP_SEQ_H_	netinet/tcp_seq.h	35;"	d
_NETINET_TCP_TIMER_H_	netinet/tcp_timer.h	34;"	d
_NETINET_TCP_VAR_H_	netinet/tcp_var.h	34;"	d
_NETINET_UDP_H_	netinet/udp.h	37;"	d
_NETINET_UDP_VAR_H_	netinet/udp_var.h	35;"	d
_NET_BPF_H_	net/bpf.h	43;"	d
_NET_ETHERNET_H_	net/ethernet.h	10;"	d
_NET_IF_ARP_H_	net/if_arp.h	35;"	d
_NET_IF_DL_H_	net/if_dl.h	35;"	d
_NET_IF_H_	net/if.h	35;"	d
_NET_IF_LLC_H_	net/if_llc.h	35;"	d
_NET_IF_MEDIA_H_	net/if_media.h	39;"	d
_NET_IF_PPPVAR_H_	net/if_pppvar.h	47;"	d
_NET_IF_TYPES_H_	net/if_types.h	36;"	d
_NET_IF_VAR_H_	net/if_var.h	35;"	d
_NET_NETISR_H_	net/netisr.h	35;"	d
_NET_PPP_COMP_H	net/ppp_comp.h	32;"	d
_NET_RAW_CB_H_	net/raw_cb.h	35;"	d
_NET_ROUTE_H_	net/route.h	35;"	d
_NET_SLCOMPRESS_H_	net/slcompress.h	37;"	d
_NFSCLIENT_NFSARGS_H_	nfsclient/nfsargs.h	38;"	d
_NFS_NFSDISKLESS_H_	nfsclient/nfsdiskless.h	36;"	d
_NFS_NFSPROTO_H_	nfs/nfsproto.h	38;"	d
_NFS_RPCV2_H_	nfs/rpcv2.h	38;"	d
_NFS_XDR_SUBS_H_	nfs/xdr_subs.h	38;"	d
_NIOS2_Add_ones_complement	machine/in_cksum.h	/^static inline uint32_t _NIOS2_Add_ones_complement ( const uint32_t a,$/;"	f
_NIOS2_Add_ones_complement_16	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Add_ones_complement_16$/;"	f
_NIOS2_Add_ones_complement_32	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Add_ones_complement_32$/;"	f
_NIOS2_Add_ones_complement_4	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Add_ones_complement_4$/;"	f
_NIOS2_Add_ones_complement_64	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Add_ones_complement_64$/;"	f
_NIOS2_Add_ones_complement_8	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Add_ones_complement_8$/;"	f
_NIOS2_Add_ones_complement_word_halves	machine/in_cksum.h	/^static inline uint16_t _NIOS2_Add_ones_complement_word_halves$/;"	f
_NIOS2_Reduce_checksum	netinet/in_cksum_nios2.h	/^static inline uint32_t _NIOS2_Reduce_checksum ( uint32_t a )$/;"	f
_PATH_HEQUIV	netdb.h	74;"	d
_PATH_HOSTCONF	libc/gethostnamadr.c	45;"	d	file:
_PATH_HOSTS	netdb.h	76;"	d
_PATH_LOG	sys/syslog.h	37;"	d
_PATH_NETCONF	libc/getnetnamadr.c	44;"	d	file:
_PATH_NETWORKS	netdb.h	77;"	d
_PATH_OLDLOG	sys/syslog.h	38;"	d
_PATH_PROTOCOLS	netdb.h	78;"	d
_PATH_RESCONF	resolv.h	87;"	d
_PATH_SERVICES	netdb.h	79;"	d
_POLL_H_	poll.h	2;"	d
_PPP_DEFS_H_	net/ppp_defs.h	32;"	d
_PPP_H_	opt_ppp.h	2;"	d
_RADIX_H_	net/radix.h	34;"	d
_RESOLV_H_	resolv.h	53;"	d
_RTEMS_BSDNET_H	rtems/rtems_bsdnet.h	7;"	d
_RTEMS_BSDNET_LOOP_H	loop.h	2;"	d
_RTEMS_BSDNET_SERVERS_H	rtems/bsdnet/servers.h	7;"	d
_RTEMS_BSDNET__TYPES_H_	rtems/bsdnet/_types.h	31;"	d
_RTEMS_DHCP_FAILSAFE_H_	rtems/rtems_dhcp_failsafe.h	15;"	d
_RTEMS_FTPFS_H	rtems/ftpfs.h	33;"	d
_RTEMS_MKROOTFS_H	rtems/mkrootfs.h	22;"	d
_RTEMS_RTEMS_BSDNET_INTERNAL_H	rtems/rtems_bsdnet_internal.h	11;"	d
_RTEMS_TFTP_H	rtems/tftp.h	24;"	d
_SA_FAMILY_T_DECLARED	netinet/in.h	61;"	d
_SA_FAMILY_T_DECLARED	sys/socket.h	51;"	d
_SA_FAMILY_T_DECLARED	sys/un.h	42;"	d
_SOCKLEN_T_DECLARED	arpa/inet.h	88;"	d
_SOCKLEN_T_DECLARED	netdb.h	70;"	d
_SOCKLEN_T_DECLARED	sys/socket.h	56;"	d
_STRUCT_IN_ADDR_DECLARED	arpa/inet.h	95;"	d
_STRUCT_IN_ADDR_DECLARED	netinet/in.h	69;"	d
_SYS_CALLOUT_H_	sys/callout.h	39;"	d
_SYS_CONF_H_	sys/conf.h	42;"	d
_SYS_DOMAIN_H_	sys/domain.h	33;"	d
_SYS_KERNEL_H_	sys/kernel.h	45;"	d
_SYS_LIBKERN_H_	sys/libkern.h	35;"	d
_SYS_LINKER_SET_H_	sys/linker_set.h	31;"	d
_SYS_MALLOC_H_	sys/malloc.h	37;"	d
_SYS_MBUF_H_	sys/mbuf.h	35;"	d
_SYS_MOUNT_H_	sys/mount.h	35;"	d
_SYS_POLL_H_	sys/poll.h	32;"	d
_SYS_PROTOSW_H_	sys/protosw.h	34;"	d
_SYS_REBOOT_H_	sys/reboot.h	37;"	d
_SYS_SELECT_H_	sys/select.h	37;"	d
_SYS_SIGNALVAR_H_	sys/signalvar.h	35;"	d
_SYS_SOCKETVAR_H_	sys/socketvar.h	34;"	d
_SYS_SOCKET_H_	sys/socket.h	35;"	d
_SYS_SYSCTL_H_	sys/sysctl.h	37;"	d
_SYS_SYSLOG_H_	sys/syslog.h	35;"	d
_SYS_SYSTM_H_	sys/systm.h	40;"	d
_SYS_TTYDEFAULTS_H_	sys/ttydefaults.h	45;"	d
_SYS_UCRED_H_	sys/ucred.h	37;"	d
_SYS_UN_H_	sys/un.h	35;"	d
_VM_EXTERN_H_	vm/vm_extern.h	34;"	d
_VM_PARAM_	vm/vm_param.h	69;"	d
_VM_VM_KERN_H_	vm/vm_kern.h	65;"	d
__BIND	arpa/nameser_compat.h	41;"	d
__BSD_VISIBLE	net/if.h	45;"	d
__BSD_VISIBLE	netinet/tcp.h	38;"	d
__BSD_VISIBLE	rtems/rtems_bsdnet.h	28;"	d
__BSD_VISIBLE	rtems/rtems_bsdnet.h	35;"	d
__BSD_VISIBLE	rtems/rtems_dhcp.c	69;"	d	file:
__BSD_VISIBLE	sys/socket.h	36;"	d
__CONCAT	sys/linker_set.h	45;"	d
__CONCAT1	sys/linker_set.h	44;"	d
__GNUC__	net/if_llc.h	37;"	d
__GNUC__	netinet/ip.h	49;"	d
__INSIDE_RTEMS_BSD_TCPIP_STACK__	rtems/rtems_dhcp.c	65;"	d	file:
__KERNEL__	rtems/rtems_mii_ioctl_kern.c	65;"	d	file:
__MAKE_SET	sys/linker_set.h	59;"	d
__MAKE_SET	sys/linker_set.h	66;"	d
__NAMESER	arpa/nameser.h	74;"	d
__P	net/ppp_defs.h	153;"	d
__P	net/ppp_defs.h	155;"	d
__RES	resolv.h	69;"	d
__RTEMS_BOOTP_H__	rtems/bootp.h	4;"	d
__RTEMS_DHCP_H__	rtems/dhcp.h	19;"	d
___getservbyname_yp	libc/getservent.c	/^char *___getservbyname_yp = NULL;$/;"	v
___getservbyport_yp	libc/getservent.c	/^int ___getservbyport_yp = 0;$/;"	v
___getservbyproto_yp	libc/getservent.c	/^char *___getservbyproto_yp = NULL;$/;"	v
__aligned	netinet/ip.h	53;"	d
__aligned	netinet/ip.h	56;"	d
__aligned	netinet/ip_var.h	43;"	d
__check_rhosts_file	libc/rcmd.c	/^int	__check_rhosts_file = 1;$/;"	v
__dead2	sys/systm.h	46;"	d
__dns_decodename	libc/gethostnamadr.c	/^static int __dns_decodename(unsigned char *packet,unsigned int offset,unsigned char *dest,$/;"	f	file:
__dns_gethostbyx_r	libc/gethostnamadr.c	/^static int __dns_gethostbyx_r($/;"	f	file:
__icheckhost	libc/rcmd.c	/^__icheckhost(raddr, lhost)$/;"	f	file:
__ivaliduser	libc/rcmd.c	/^__ivaliduser(hostf, raddr, luser, ruser)$/;"	f
__ns_class	arpa/nameser.h	/^typedef enum __ns_class {$/;"	g
__ns_flag	arpa/nameser.h	/^typedef enum __ns_flag {$/;"	g
__ns_msg	arpa/nameser.h	/^typedef struct __ns_msg {$/;"	s
__ns_opcode	arpa/nameser.h	/^typedef enum __ns_opcode {$/;"	g
__ns_rcode	arpa/nameser.h	/^typedef	enum __ns_rcode {$/;"	g
__ns_rr	arpa/nameser.h	/^typedef	struct __ns_rr {$/;"	s
__ns_sect	arpa/nameser.h	/^typedef enum __ns_sect {$/;"	g
__ns_type	arpa/nameser.h	/^typedef enum __ns_type {$/;"	g
__ns_update_operation	arpa/nameser.h	/^typedef enum __ns_update_operation {$/;"	g
__p_class_syms	libc/res_debug.c	/^const struct res_sym __p_class_syms[] = {$/;"	v	typeref:struct:res_sym
__p_default_section_syms	libc/res_debug.c	/^const struct res_sym __p_default_section_syms[] = {$/;"	v	typeref:struct:res_sym
__p_type_syms	libc/res_debug.c	/^const struct res_sym __p_type_syms[] = {$/;"	v	typeref:struct:res_sym
__p_update_section_syms	libc/res_debug.c	/^const struct res_sym __p_update_section_syms[] = {$/;"	v	typeref:struct:res_sym
__packed	net/if_llc.h	/^} __packed;$/;"	v	typeref:struct:frmrinfo
__packed	net/if_llc.h	/^} __packed;$/;"	v	typeref:struct:llc
__packed	net/if_llc.h	40;"	d
__packed	net/if_llc.h	42;"	d
__packed	netinet/ip.h	52;"	d
__packed	netinet/ip.h	55;"	d
__packed	netinet/ip_var.h	42;"	d
__putlong	libc/res_comp.c	/^void __putlong(u_int32_t src, u_char *dst) { ns_put32(src, dst); }$/;"	f
__putshort	libc/res_comp.c	/^void __putshort(u_int16_t src, u_char *dst) { ns_put16(src, dst); }$/;"	f
__rcmd_errstr	libc/rcmd.c	/^char	*__rcmd_errstr;$/;"	v
__res_state	resolv.h	/^struct __res_state {$/;"	s
__sa_family_t	rtems/bsdnet/_types.h	/^typedef	uint8_t		__sa_family_t;$/;"	t
__sighandler_t	rtems/rtems_bsdnet_internal.h	/^typedef void __sighandler_t(int);$/;"	t
__socklen_t	rtems/bsdnet/_types.h	/^typedef	uint32_t	__socklen_t;$/;"	t
__start_set_sysctl_set	kern/kern_sysctl.c	/^struct sysctl_oid *__start_set_sysctl_set[];$/;"	v	typeref:struct:sysctl_oid
__stop_set_sysctl_set	kern/kern_sysctl.c	/^struct sysctl_oid *__stop_set_sysctl_set[];$/;"	v	typeref:struct:sysctl_oid
__sysctl	kern/kern_sysctl.c	/^__sysctl(struct thread *td, struct sysctl_args *uap)$/;"	f
__used	sys/linker_set.h	41;"	d
_code	sys/syslog.h	/^typedef struct _code {$/;"	s
_compat	sys/sysctl.h	/^SYSCTL_DECL(_compat);$/;"	v
_counts	arpa/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg
_debug	sys/sysctl.h	/^SYSCTL_DECL(_debug);$/;"	v
_debug_sizeof	sys/sysctl.h	/^SYSCTL_DECL(_debug_sizeof);$/;"	v
_dns_ttl_	libc/gethostbydns.c	/^int _dns_ttl_;$/;"	v
_endhostdnsent	libc/gethostbydns.c	/^_endhostdnsent(void)$/;"	f
_endhosthtent	libc/gethostbyht.c	/^_endhosthtent(void)$/;"	f
_endnetdnsent	libc/getnetbydns.c	/^_endnetdnsent(void)$/;"	f
_endnethtent	libc/getnetbyht.c	/^_endnethtent(void)$/;"	f
_eom	arpa/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg
_flags	arpa/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg
_gethostbydnsaddr	libc/gethostbydns.c	/^_gethostbydnsaddr($/;"	f
_gethostbydnsname	libc/gethostbydns.c	/^_gethostbydnsname($/;"	f
_gethostbyhtaddr	libc/gethostbyht.c	/^_gethostbyhtaddr($/;"	f
_gethostbyhtname	libc/gethostbyht.c	/^_gethostbyhtname($/;"	f
_gethostbynis	libc/gethostbynis.c	/^_gethostbynis($/;"	f	file:
_gethostbynisaddr	libc/gethostbynis.c	/^_gethostbynisaddr($/;"	f
_gethostbynisname	libc/gethostbynis.c	/^_gethostbynisname($/;"	f
_getlong	libc/res_comp.c	/^u_int32_t _getlong(const u_char *src) { return (ns_get32(src)); }$/;"	f
_getnetbydnsaddr	libc/getnetbydns.c	/^_getnetbydnsaddr($/;"	f
_getnetbydnsname	libc/getnetbydns.c	/^_getnetbydnsname($/;"	f
_getnetbyhtaddr	libc/getnetbyht.c	/^_getnetbyhtaddr($/;"	f
_getnetbyhtname	libc/getnetbyht.c	/^_getnetbyhtname(const char *name)$/;"	f
_getnetbynis	libc/getnetbynis.c	/^_getnetbynis($/;"	f	file:
_getnetbynisaddr	libc/getnetbynis.c	/^_getnetbynisaddr($/;"	f
_getnetbynisname	libc/getnetbynis.c	/^_getnetbynisname($/;"	f
_getservbyname_yp	libc/getservent.c	/^_getservbyname_yp(line)$/;"	f	file:
_getservbyport_yp	libc/getservent.c	/^_getservbyport_yp(line)$/;"	f	file:
_getservent_yp	libc/getservent.c	/^_getservent_yp(line)$/;"	f	file:
_getshort	libc/res_comp.c	/^u_int16_t _getshort(const u_char *src) { return (ns_get16(src)); }$/;"	f
_hw	sys/sysctl.h	/^SYSCTL_DECL(_hw);$/;"	v
_id	arpa/nameser.h	/^	u_int16_t	_id, _flags, _counts[ns_s_max];$/;"	m	struct:__ns_msg
_ip_mcast_src	netinet/ip_mroute.c	/^_ip_mcast_src(int vifi) { return INADDR_ANY; }$/;"	f
_ip_mforward	netinet/ip_mroute.c	/^_ip_mforward(struct ip *ip, struct ifnet *ifp, struct mbuf *m,$/;"	f
_ip_mrouter_done	netinet/ip_mroute.c	/^_ip_mrouter_done(void)$/;"	f
_ip_mrouter_get	netinet/ip_mroute.c	/^_ip_mrouter_get(int cmd, struct socket *so, struct mbuf **m)$/;"	f
_ip_mrouter_set	netinet/ip_mroute.c	/^_ip_mrouter_set(int cmd, struct socket *so, struct mbuf *m)$/;"	f
_kern	sys/sysctl.h	/^SYSCTL_DECL(_kern);$/;"	v
_machdep	sys/sysctl.h	/^SYSCTL_DECL(_machdep);$/;"	v
_map_v4v6_address	libc/map_v4v6.c	/^_map_v4v6_address(const char *src, char *dst)$/;"	f
_map_v4v6_hostent	libc/map_v4v6.c	/^_map_v4v6_hostent($/;"	f
_mrt_ioctl	netinet/ip_mroute.c	/^_mrt_ioctl(int req, caddr_t data, struct proc *p)$/;"	f
_msg	arpa/nameser.h	/^	const u_char	*_msg, *_eom;$/;"	m	struct:__ns_msg
_net	sys/sysctl.h	/^SYSCTL_DECL(_net);$/;"	v
_net_inet_icmp	netinet/icmp_var.h	/^SYSCTL_DECL(_net_inet_icmp);$/;"	v
_net_inet_igmp	netinet/igmp_var.h	/^SYSCTL_DECL(_net_inet_igmp);$/;"	v
_net_inet_ip	netinet/in_var.h	/^SYSCTL_DECL(_net_inet_ip);$/;"	v
_net_inet_raw	netinet/in_var.h	/^SYSCTL_DECL(_net_inet_raw);$/;"	v
_net_inet_tcp	netinet/tcp_var.h	/^SYSCTL_DECL(_net_inet_tcp);$/;"	v
_net_inet_udp	netinet/udp_var.h	/^SYSCTL_DECL(_net_inet_udp);$/;"	v
_net_link	net/if_ethersubr.c	/^SYSCTL_DECL(_net_link);$/;"	v
_net_link_ether	netinet/if_ether.c	/^SYSCTL_DECL(_net_link_ether);$/;"	v
_net_stayopen	libc/getnetbyht.c	/^static int _net_stayopen;$/;"	v	file:
_ns_flagdata	arpa/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	s
_ns_flagdata	libc/ns_parse.c	/^struct _ns_flagdata _ns_flagdata[16] = {$/;"	v	typeref:struct:_ns_flagdata
_offsetof	net/if.c	134;"	d	file:
_proto_stayopen	libc/getprotoent.c	/^int _proto_stayopen;$/;"	v
_ptr	arpa/nameser.h	/^	const u_char	*_ptr;$/;"	m	struct:__ns_msg
_res	libc/res_init.c	/^struct __res_state _res$/;"	v	typeref:struct:__res_state
_res_opcodes	libc/res_data.c	/^const char *_res_opcodes[] = {$/;"	v
_res_resultcodes	libc/res_data.c	/^const char *_res_resultcodes[] = {$/;"	v
_res_sectioncodes	libc/res_data.c	/^const char *_res_sectioncodes[] = {$/;"	v
_rrnum	arpa/nameser.h	/^	int		_rrnum;$/;"	m	struct:__ns_msg
_rtems_bsdnet_nameserver	rtems/rtems_glue.c	/^static struct in_addr _rtems_bsdnet_nameserver[sizeof rtems_bsdnet_config.name_server \/$/;"	v	typeref:struct:in_addr	file:
_rtems_bsdnet_ntpserver	rtems/rtems_glue.c	/^static struct in_addr _rtems_bsdnet_ntpserver[sizeof rtems_bsdnet_config.ntp_server \/$/;"	v	typeref:struct:in_addr	file:
_sect	arpa/nameser.h	/^	ns_sect		_sect;$/;"	m	struct:__ns_msg
_sections	arpa/nameser.h	/^	const u_char	*_sections[ns_s_max];$/;"	m	struct:__ns_msg
_serv_stayopen	libc/getservent.c	/^int _serv_stayopen;$/;"	v
_sethostdnsent	libc/gethostbydns.c	/^_sethostdnsent(int stayopen)$/;"	f
_sethosthtent	libc/gethostbyht.c	/^_sethosthtent(int f)$/;"	f
_setnetdnsent	libc/getnetbydns.c	/^_setnetdnsent($/;"	f
_setnethtent	libc/getnetbyht.c	/^_setnethtent(int f)$/;"	f
_sysctl	sys/sysctl.h	/^SYSCTL_DECL(_sysctl);$/;"	v
_user	sys/sysctl.h	/^SYSCTL_DECL(_user);$/;"	v
_vfs	sys/sysctl.h	/^SYSCTL_DECL(_vfs);$/;"	v
_vm	sys/sysctl.h	/^SYSCTL_DECL(_vm);$/;"	v
aa	arpa/nameser_compat.h	/^	unsigned	aa :1;		\/* authoritive answer *\/$/;"	m	struct:__anon47
aa	arpa/nameser_compat.h	/^	unsigned	aa: 1;		\/* authoritive answer *\/$/;"	m	struct:__anon47
ac	libc/gethostbydns.c	/^    char ac;$/;"	m	union:__anon29	file:
ac	libc/getnetbydns.c	/^	char	ac;$/;"	m	union:__anon31	file:
ac	libc/map_v4v6.c	/^	char ac;$/;"	m	union:__anon26	file:
ac_enaddr	net/if_arp.h	/^	u_char	ac_enaddr[6];		\/* ethernet hardware address *\/$/;"	m	struct:arpcom
ac_if	net/if_arp.h	/^	struct 	ifnet ac_if;		\/* network-visible interface *\/$/;"	m	struct:arpcom	typeref:struct:arpcom::ifnet
ac_multiaddrs	net/if_arp.h	/^	struct	ether_multi *ac_multiaddrs; \/* list of ether multicast addrs *\/$/;"	m	struct:arpcom	typeref:struct:arpcom::ether_multi
ac_multicnt	net/if_arp.h	/^	int	ac_multicnt;		\/* length of ac_multiaddrs list *\/$/;"	m	struct:arpcom
ac_netgraph	net/if_arp.h	/^	void	*ac_netgraph;		\/* ng_ether(4) netgraph node info *\/$/;"	m	struct:arpcom
accept	rtems/rtems_syscall.c	/^accept (int s, struct sockaddr *name, int *namelen)$/;"	f
ad	arpa/nameser_compat.h	/^	unsigned	ad: 1;		\/* authentic data from named *\/$/;"	m	struct:__anon47
add_entry	netinet/ip_fw.c	/^add_entry(struct ip_fw_head *chainptr, struct ip_fw *frwl)$/;"	f	file:
add_mfc	netinet/ip_mroute.c	/^add_mfc(struct mfcctl *mfccp)$/;"	f	file:
add_vif	netinet/ip_mroute.c	/^add_vif(struct vifctl *vifcp)$/;"	f	file:
addlen	libc/ns_print.c	/^addlen(size_t len, char **buf, size_t *buflen) {$/;"	f	file:
addmask_key	net/radix.c	/^static char *addmask_key;$/;"	v	file:
addname	libc/ns_print.c	/^addname(const u_char *msg, size_t msglen,$/;"	f	file:
addr	nfsclient/nfsargs.h	/^	struct sockaddr	*addr;		\/* file server address *\/$/;"	m	struct:nfs_args	typeref:struct:nfs_args::sockaddr
addr	resolv.h	/^		struct in_addr	addr;$/;"	m	struct:__res_state::__anon7	typeref:struct:__res_state::__anon7::in_addr
address_template	rtems/rtems_glue.c	/^static const struct sockaddr_in address_template = {$/;"	v	typeref:struct:sockaddr_in	file:
addrlen	nfsclient/nfsargs.h	/^	int		addrlen;	\/* length of address *\/$/;"	m	struct:nfs_args
addrsort	libc/gethostbydns.c	/^addrsort($/;"	f	file:
addstr	libc/ns_print.c	/^addstr(const char *src, size_t len, char **buf, size_t *buflen) {$/;"	f	file:
addtab	libc/ns_print.c	/^addtab(size_t len, size_t target, int spaced, char **buf, size_t *buflen) {$/;"	f	file:
al	libc/gethostbydns.c	/^    int32_t al;$/;"	m	union:__anon29	file:
al	libc/getnetbydns.c	/^	long	al;$/;"	m	union:__anon31	file:
al	libc/map_v4v6.c	/^	int32_t al;$/;"	m	union:__anon26	file:
align	libc/gethostbydns.c	/^} align;$/;"	t	typeref:union:__anon29	file:
align	libc/getnetbydns.c	/^} align;$/;"	t	typeref:union:__anon31	file:
align	libc/map_v4v6.c	/^} align;$/;"	t	typeref:union:__anon26	file:
alphachar	libc/res_comp.c	142;"	d	file:
always_keepalive	netinet/tcp_timer.c	/^static int	always_keepalive = 0;$/;"	v	file:
ancount	arpa/nameser_compat.h	/^	unsigned	ancount :16;	\/* number of answer entries *\/$/;"	m	struct:__anon47
any_count	net/route.h	/^	int	any_count;$/;"	m	struct:route_cb
ar_hln	net/if_arp.h	/^	u_char	ar_hln;		\/* length of hardware address *\/$/;"	m	struct:arphdr
ar_hrd	net/if_arp.h	/^	u_short	ar_hrd;		\/* format of hardware address *\/$/;"	m	struct:arphdr
ar_op	net/if_arp.h	/^	u_short	ar_op;		\/* one of: *\/$/;"	m	struct:arphdr
ar_pln	net/if_arp.h	/^	u_char	ar_pln;		\/* length of protocol address *\/$/;"	m	struct:arphdr
ar_pro	net/if_arp.h	/^	u_short	ar_pro;		\/* format of protocol address *\/$/;"	m	struct:arphdr
ar_sha	net/if_arp.h	/^	u_char	ar_sha[];	\/* sender hardware address *\/$/;"	m	struct:arphdr
ar_sha	net/if_arp.h	78;"	d
ar_spa	net/if_arp.h	/^	u_char	ar_spa[];	\/* sender protocol address *\/$/;"	m	struct:arphdr
ar_spa	net/if_arp.h	79;"	d
ar_tha	net/if_arp.h	/^	u_char	ar_tha[];	\/* target hardware address *\/$/;"	m	struct:arphdr
ar_tha	net/if_arp.h	80;"	d
ar_tpa	net/if_arp.h	/^	u_char	ar_tpa[];	\/* target protocol address *\/$/;"	m	struct:arphdr
ar_tpa	net/if_arp.h	81;"	d
arcount	arpa/nameser_compat.h	/^	unsigned	arcount :16;	\/* number of resource entries *\/$/;"	m	struct:__anon47
arg	kern/kern_sysctl.c	/^	int	arg;$/;"	m	struct:getkerninfo_args	file:
arg	rtems/rtems_glue.c	/^	void *arg;$/;"	m	struct:newtask	file:
arg0	sys/kernel.h	/^	char		*arg0;			\/* arg 0 (for 'ps' listing)*\/$/;"	m	struct:kproc_desc
arp_allocated	netinet/if_ether.c	/^static int	arp_inuse, arp_allocated;$/;"	v	file:
arp_flags	net/if_arp.h	/^	int	arp_flags;			\/* flags *\/$/;"	m	struct:arpreq
arp_ha	net/if_arp.h	/^	struct	sockaddr arp_ha;		\/* hardware address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_hln	netinet/if_ether.h	76;"	d
arp_hrd	netinet/if_ether.h	74;"	d
arp_ifinit	netinet/if_ether.c	/^arp_ifinit(struct arpcom *ac, struct ifaddr *ifa)$/;"	f
arp_inuse	netinet/if_ether.c	/^static int	arp_inuse, arp_allocated;$/;"	v	file:
arp_maxtries	netinet/if_ether.c	/^static int	arp_maxtries = 5;$/;"	v	file:
arp_op	netinet/if_ether.h	78;"	d
arp_pa	net/if_arp.h	/^	struct	sockaddr arp_pa;		\/* protocol address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_pln	netinet/if_ether.h	77;"	d
arp_pro	netinet/if_ether.h	75;"	d
arp_proxyall	netinet/if_ether.c	/^static int	arp_proxyall = 0;$/;"	v	file:
arp_rtrequest	netinet/if_ether.c	/^arp_rtrequest(int req, struct rtentry *rt, struct sockaddr *sa)$/;"	f	file:
arp_sha	netinet/if_ether.h	/^	u_char	arp_sha[ETHER_ADDR_LEN];	\/* sender hardware address *\/$/;"	m	struct:ether_arp
arp_spa	netinet/if_ether.h	/^	u_char	arp_spa[4];	\/* sender protocol address *\/$/;"	m	struct:ether_arp
arp_tha	netinet/if_ether.h	/^	u_char	arp_tha[ETHER_ADDR_LEN];	\/* target hardware address *\/$/;"	m	struct:ether_arp
arp_tpa	netinet/if_ether.h	/^	u_char	arp_tpa[4];	\/* target protocol address *\/$/;"	m	struct:ether_arp
arpcom	net/if_arp.h	/^struct	arpcom {$/;"	s
arphdr	net/if_arp.h	/^struct	arphdr {$/;"	s
arphdr_len	net/if_arp.h	85;"	d
arphdr_len2	net/if_arp.h	83;"	d
arpintr	netinet/if_ether.c	/^arpintr(void)$/;"	f
arpintrq	netinet/if_ether.c	/^struct	ifqueue arpintrq = {0, 0, 0, 50, 0};$/;"	v	typeref:struct:ifqueue
arplookup	netinet/if_ether.c	/^arplookup(u_long addr, int create, int proxy)$/;"	f	file:
arpreq	net/if_arp.h	/^struct arpreq {$/;"	s
arprequest	netinet/if_ether.c	/^arprequest(struct arpcom *ac, struct in_addr *sip, struct in_addr *tip, u_char *enaddr)$/;"	f	file:
arpresolve	netinet/if_ether.c	/^arpresolve($/;"	f
arpt_down	netinet/if_ether.c	/^static int arpt_down = 20;	\/* once declared down, don't send for 20 sec *\/$/;"	v	file:
arpt_keep	netinet/if_ether.c	/^static int arpt_keep = (20*60); \/* once resolved, good for 20 more minutes *\/$/;"	v	file:
arpt_prune	netinet/if_ether.c	/^static int arpt_prune = (5*60*1); \/* walk list every 5 minutes *\/$/;"	v	file:
arptfree	netinet/if_ether.c	/^arptfree(struct llinfo_arp *la)$/;"	f	file:
arptimer	netinet/if_ether.c	/^arptimer(void *ignored_arg)$/;"	f	file:
ascii	net/if.h	/^	char	ascii[IFSTATMAX + 1];$/;"	m	struct:ifstat
asterchar	libc/res_comp.c	141;"	d	file:
attach	rtems/rtems_bsdnet.h	/^	int		(*attach)(struct rtems_bsdnet_ifconfig *conf, int attaching);$/;"	m	struct:rtems_bsdnet_ifconfig
authenticator	lib/rtems_bsdnet_ntp.c	/^	char			authenticator[96];$/;"	m	struct:ntpPacket	file:
b64_ntop	libc/base64.c	/^b64_ntop(u_char const *src, size_t srclength, char *target, size_t targsize) {$/;"	f
b64_ntop	resolv.h	227;"	d
b64_pton	libc/base64.c	/^b64_pton($/;"	f
b64_pton	resolv.h	228;"	d
bcd2bin	sys/libkern.h	45;"	d
bcmp	libc/rcmd.c	72;"	d	file:
bcopy	libc/rcmd.c	73;"	d	file:
bcopy	sys/systm.h	77;"	d
bf_insns	net/bpf.h	/^	struct bpf_insn *bf_insns;$/;"	m	struct:bpf_program	typeref:struct:bpf_program::bpf_insn
bf_len	net/bpf.h	/^	u_int bf_len;$/;"	m	struct:bpf_program
bh_caplen	net/bpf.h	/^	bpf_u_int32	bh_caplen;	\/* length of captured portion *\/$/;"	m	struct:bpf_hdr
bh_datalen	net/bpf.h	/^	bpf_u_int32	bh_datalen;	\/* original length of packet *\/$/;"	m	struct:bpf_hdr
bh_hdrlen	net/bpf.h	/^	u_short		bh_hdrlen;	\/* length of bpf header (this struct$/;"	m	struct:bpf_hdr
bh_tstamp	net/bpf.h	/^	struct timeval	bh_tstamp;	\/* time stamp *\/$/;"	m	struct:bpf_hdr	typeref:struct:bpf_hdr::timeval
bin2bcd	sys/libkern.h	46;"	d
bind	rtems/rtems_syscall.c	/^bind (int s, const struct sockaddr *name, int namelen)$/;"	f
blocknum	lib/tftpDriver.c	/^        uint16_t      blocknum;$/;"	m	struct:tftpPacket::tftpACK	file:
blocknum	lib/tftpDriver.c	/^        uint16_t      blocknum;$/;"	m	struct:tftpPacket::tftpDATA	file:
blocknum	lib/tftpDriver.c	/^    uint16_t      blocknum;$/;"	m	struct:tftpStream	file:
boolean_t	rtems/rtems_bsdnet_internal.h	/^typedef	int		boolean_t;$/;"	t
boolean_t	vm/vm.h	/^typedef int boolean_t;$/;"	t
bootp	rtems/rtems_bsdnet.h	/^	void			(*bootp)(void);$/;"	m	struct:rtems_bsdnet_config
bootp_packet	nfs/bootp_subr.c	/^struct bootp_packet {$/;"	s	file:
bootp_strdup_realloc	nfs/bootp_subr.c	/^void *bootp_strdup_realloc(char *dst,const char *src)$/;"	f
bootpboot_p_iflist	nfs/bootp_subr.c	/^bootpboot_p_iflist(void)$/;"	f
bootpboot_p_ma	nfs/bootp_subr.c	/^bootpboot_p_ma(struct sockaddr *ma)$/;"	f
bootpboot_p_rtentry	nfs/bootp_subr.c	/^bootpboot_p_rtentry(struct rtentry *rt)$/;"	f
bootpboot_p_rtlist	nfs/bootp_subr.c	/^bootpboot_p_rtlist(void)$/;"	f
bootpboot_p_sa	nfs/bootp_subr.c	/^bootpboot_p_sa(struct sockaddr *sa, struct sockaddr *ma)$/;"	f
bootpboot_p_tree	nfs/bootp_subr.c	/^bootpboot_p_tree(struct radix_node *rn)$/;"	f
bootpc_adjust_interface	nfs/bootp_subr.c	/^bootpc_adjust_interface(struct ifreq *ireq,struct socket *so,$/;"	f
bootpc_call	nfs/bootp_subr.c	/^bootpc_call($/;"	f
bootpc_fakeup_interface	nfs/bootp_subr.c	/^bootpc_fakeup_interface(struct ifreq *ireq,struct socket *so,$/;"	f
bootpc_init	nfs/bootp_subr.c	/^bootpc_init(bool update_files, bool forever)$/;"	f
borderchar	libc/res_comp.c	146;"	d	file:
bpar	rtems/rtems_bsdnet.h	/^	unsigned int	bpar;   \/* memory of the board *\/$/;"	m	struct:rtems_bsdnet_ifconfig
bpf_hdr	net/bpf.h	/^struct bpf_hdr {$/;"	s
bpf_insn	net/bpf.h	/^struct bpf_insn {$/;"	s
bpf_int32	net/bpf.h	/^typedef	int32_t	  bpf_int32;$/;"	t
bpf_program	net/bpf.h	/^struct bpf_program {$/;"	s
bpf_stat	net/bpf.h	/^struct bpf_stat {$/;"	s
bpf_u_int32	net/bpf.h	/^typedef	u_int32_t bpf_u_int32;$/;"	t
bpf_version	net/bpf.h	/^struct bpf_version {$/;"	s
broadcast_delay	rtems/rtems_dhcp_failsafe.c	/^static int broadcast_delay = RTEMS_DHCP_FAILSAFE_BROADCAST_DELAY;$/;"	v	file:
bs_drop	net/bpf.h	/^	u_int bs_drop;		\/* number of packets dropped *\/$/;"	m	struct:bpf_stat
bs_recv	net/bpf.h	/^	u_int bs_recv;		\/* number of packets received *\/$/;"	m	struct:bpf_stat
bsd_init	rtems/rtems_glue.c	/^bsd_init (void)$/;"	f	file:
bsdi_hostname	kern/kern_sysctl.c	/^	int	bsdi_hostname;		\/* hostname on BSD\/386 *\/$/;"	m	struct:__anon48	file:
bsdi_machine	kern/kern_sysctl.c	/^	int	bsdi_machine;		\/* "i386" on BSD\/386 *\/$/;"	m	struct:__anon48	file:
bsdi_osrelease	kern/kern_sysctl.c	/^	int	bsdi_osrelease;		\/* "1.1" on BSD\/386 *\/$/;"	m	struct:__anon48	file:
bsdi_ostype	kern/kern_sysctl.c	/^	int	bsdi_ostype;		\/* "BSD\/386" on BSD\/386 *\/$/;"	m	struct:__anon48	file:
bsdi_si	kern/kern_sysctl.c	/^} bsdi_si;$/;"	v	typeref:struct:__anon48	file:
bsdi_strings	kern/kern_sysctl.c	/^static char bsdi_strings[80];	\/* It had better be less than this! *\/$/;"	v	file:
bslashchar	libc/res_comp.c	139;"	d	file:
btokmemx	sys/malloc.h	299;"	d
btokup	sys/malloc.h	300;"	d
buf	libc/gethostbydns.c	/^    u_char buf[MAXPACKET];$/;"	m	union:__anon28	file:
buf	libc/getnetbydns.c	/^	u_char	buf[MAXPACKET];$/;"	m	union:__anon30	file:
buffer	lib/ftpfs.c	/^  char buffer [];$/;"	m	struct:__anon15	file:
bv_major	net/bpf.h	/^	u_short bv_major;$/;"	m	struct:bpf_version
bv_minor	net/bpf.h	/^	u_short bv_minor;$/;"	m	struct:bpf_version
bytecnt	netinet/ip_mroute.h	/^    u_long bytecnt;$/;"	m	struct:sioc_sg_req
bzero	libc/rcmd.c	71;"	d	file:
bzero	sys/systm.h	78;"	d
c	net/ppp_defs.h	/^    struct compstat c;		\/* packet compression statistics *\/$/;"	m	struct:ppp_comp_stats	typeref:struct:ppp_comp_stats::compstat
c_arg	sys/callout.h	/^	void	*c_arg;				\/* function argument *\/$/;"	m	struct:callout
c_func	sys/callout.h	/^	void	(*c_func)(void *);		\/* function to call *\/$/;"	m	struct:callout
c_name	sys/syslog.h	/^	const char	*c_name;$/;"	m	struct:_code
c_next	sys/callout.h	/^	struct	callout *c_next;		\/* next callout in queue *\/$/;"	m	struct:callout	typeref:struct:callout::callout
c_time	sys/callout.h	/^	int	c_time;				\/* ticks to the event *\/$/;"	m	struct:callout
c_val	sys/syslog.h	/^	int		c_val;$/;"	m	struct:_code
callfree	rtems/rtems_glue.c	/^struct callout *callfree = NULL;$/;"	v	typeref:struct:callout
callout	sys/callout.h	/^struct callout {$/;"	s
calltodo	rtems/rtems_glue.c	/^struct callout calltodo;$/;"	v	typeref:struct:callout
capacity	rtems/rtems_showroute.c	/^	int		capacity;$/;"	m	struct:dinfo	file:
cc_recv	netinet/tcp_var.h	/^	tcp_cc	cc_recv;		\/* receive connection count *\/$/;"	m	struct:tcpcb
cc_send	netinet/tcp_var.h	/^	tcp_cc	cc_send;		\/* send connection count *\/$/;"	m	struct:tcpcb
cd	arpa/nameser_compat.h	/^	unsigned	cd: 1;		\/* checking disabled by resolver *\/$/;"	m	struct:__anon47
chaddr	nfs/bootp_subr.c	/^  unsigned char chaddr[16];$/;"	m	struct:bootp_packet	file:
chaddr	rtems/rtems_dhcp.c	/^  unsigned char  chaddr[16];$/;"	m	struct:dhcp_packet	file:
chain	netinet/ip_fw.h	/^        LIST_ENTRY(ip_fw_chain) chain;$/;"	m	struct:ip_fw_chain
charstr	libc/ns_print.c	/^charstr(const u_char *rdata, const u_char *edata, char **buf, size_t *buflen) {$/;"	f	file:
check_ipfw_mbuf	netinet/ip_fw.c	/^check_ipfw_mbuf(struct mbuf *m)$/;"	f	file:
check_ipfw_struct	netinet/ip_fw.c	/^check_ipfw_struct(struct ip_fw *frwl)$/;"	f	file:
ciaddr	nfs/bootp_subr.c	/^  struct in_addr ciaddr;$/;"	m	struct:bootp_packet	typeref:struct:bootp_packet::in_addr	file:
ciaddr	rtems/rtems_dhcp.c	/^  struct in_addr ciaddr;$/;"	m	struct:dhcp_packet	typeref:struct:dhcp_packet::in_addr	file:
clean_dns_entries	rtems/rtems_dhcp.c	/^clean_dns_entries (void)$/;"	f	file:
client_address	lib/ftpfs.c	/^  uint32_t client_address;$/;"	m	struct:__anon15	file:
closelog	lib/syslog.c	/^closelog(void)$/;"	f
cltom	sys/mbuf.h	64;"	d
cmsg_len	sys/socket.h	/^	socklen_t	cmsg_len;		\/* data byte count, including hdr *\/$/;"	m	struct:cmsghdr
cmsg_level	sys/socket.h	/^	int	cmsg_level;		\/* originating protocol *\/$/;"	m	struct:cmsghdr
cmsg_type	sys/socket.h	/^	int	cmsg_type;		\/* protocol-specific type *\/$/;"	m	struct:cmsghdr
cmsghdr	sys/socket.h	/^struct cmsghdr {$/;"	s
code	net/bpf.h	/^	u_short		code;$/;"	m	struct:bpf_insn
collate	netinet/ip_mroute.c	/^static void collate(struct timeval *t)$/;"	f	file:
combineTokens	netinet/in_cksum_nios2.h	149;"	d
comp_alloc	net/ppp_comp.h	/^	void	*(*comp_alloc)(u_char *options, int opt_len);$/;"	m	struct:compressor
comp_bytes	net/ppp_defs.h	/^    unsigned int comp_bytes;	\/* compressed bytes *\/$/;"	m	struct:compstat
comp_free	net/ppp_comp.h	/^	void	(*comp_free)(void *state);$/;"	m	struct:compressor
comp_init	net/ppp_comp.h	/^	int	(*comp_init)(void *state, u_char *options, int opt_len,$/;"	m	struct:compressor
comp_packets	net/ppp_defs.h	/^    unsigned int comp_packets;	\/* compressed packets *\/$/;"	m	struct:compstat
comp_reset	net/ppp_comp.h	/^	void	(*comp_reset)(void *state);$/;"	m	struct:compressor
comp_stat	net/ppp_comp.h	/^	void	(*comp_stat)(void *state, struct compstat *stats);$/;"	m	struct:compressor
compress	net/ppp_comp.h	/^	int	(*compress)(void *state, PACKETPTR *mret, PACKETPTR mp,$/;"	m	struct:compressor
compress_proto	net/ppp_comp.h	/^	int	compress_proto;	\/* CCP compression protocol number *\/$/;"	m	struct:compressor
compressor	net/ppp_comp.h	/^struct compressor {$/;"	s
compstat	net/ppp_defs.h	/^struct compstat {$/;"	s
connect	rtems/rtems_syscall.c	/^connect (int s, const struct sockaddr *name, int namelen)$/;"	f
connected	libc/res_send.c	/^static int connected = 0;	\/* is the socket connected *\/$/;"	v	file:
control	net/if_llc.h	/^		u_int8_t  control;$/;"	m	struct:llc::__anon40::__anon45
control	net/if_llc.h	/^		u_int8_t control;$/;"	m	struct:llc::__anon40::__anon41
control	net/if_llc.h	/^		u_int8_t control;$/;"	m	struct:llc::__anon40::__anon43
control	net/if_llc.h	/^		u_int8_t control;$/;"	m	struct:llc::__anon40::__anon46
control	net/if_llc.h	/^	        u_int8_t control;$/;"	m	struct:llc::__anon40::__anon44
control_ext	net/if_llc.h	/^		u_int8_t control_ext;$/;"	m	struct:llc::__anon40::__anon46
contsigmask	sys/signalvar.h	143;"	d
copyAddress	rtems/rtems_showroute.c	/^copyAddress (void *to, void *from, int tolen)$/;"	f	file:
copyin	rtems/rtems_bsdnet_internal.h	59;"	d
copyout	rtems/rtems_bsdnet_internal.h	58;"	d
count	rtems/rtems_showroute.c	/^	int		count;$/;"	m	struct:dinfo	file:
cr_gid	sys/ucred.h	52;"	d
cr_groups	sys/ucred.h	/^	gid_t	cr_groups[NGROUPS];	\/* groups *\/$/;"	m	struct:ucred
cr_ngroups	sys/ucred.h	/^	short	cr_ngroups;		\/* number of groups *\/$/;"	m	struct:ucred
cr_ref	sys/ucred.h	/^	u_short	cr_ref;			\/* reference count *\/$/;"	m	struct:ucred
cr_uid	sys/ucred.h	/^	uid_t	cr_uid;			\/* effective user id *\/$/;"	m	struct:ucred
cs_filler	net/slcompress.h	/^	u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/slcompress.h	128;"	d
cs_hlen	net/slcompress.h	/^	u_int16_t cs_hlen;	\/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/slcompress.h	/^	u_char cs_id;		\/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/slcompress.h	127;"	d
cs_next	net/slcompress.h	/^	struct cstate *cs_next;	\/* next most recently used cstate (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cstate	net/slcompress.h	/^struct cstate {$/;"	s
csu_hdr	net/slcompress.h	/^		char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon39
csu_ip	net/slcompress.h	/^		struct ip csu_ip;	\/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon39	typeref:struct:cstate::__anon39::ip
ctl_name	sys/sysctl.h	/^	char	*ctl_name;	\/* subsystem name *\/$/;"	m	struct:ctlname
ctl_type	sys/sysctl.h	/^	int	ctl_type;	\/* type of name *\/$/;"	m	struct:ctlname
ctlname	sys/sysctl.h	/^struct ctlname {$/;"	s
ctrl_socket	lib/ftpfs.c	/^  int ctrl_socket;$/;"	m	struct:__anon15	file:
cur	libc/gethostbyht.c	/^static char *cur;$/;"	v	file:
d	net/ppp_defs.h	/^    struct compstat d;		\/* packet decompression statistics *\/$/;"	m	struct:ppp_comp_stats	typeref:struct:ppp_comp_stats::compstat
data	lib/ftpfs.c	/^  uint8_t data [6];$/;"	m	struct:__anon21	file:
data	lib/tftpDriver.c	/^        uint8_t       data[TFTP_BUFSIZE];$/;"	m	struct:tftpPacket::tftpDATA	file:
data_socket	lib/ftpfs.c	/^  int data_socket;$/;"	m	struct:__anon15	file:
deadthresh	nfsclient/nfsargs.h	/^	int		deadthresh;	\/* Retrans threshold *\/$/;"	m	struct:nfs_args
debugprintf	libc/gethostbydns.c	/^debugprintf($/;"	f	file:
debugprintf	libc/gethostbydns.c	137;"	d	file:
decomp_alloc	net/ppp_comp.h	/^	void	*(*decomp_alloc)(u_char *options, int opt_len);$/;"	m	struct:compressor
decomp_free	net/ppp_comp.h	/^	void	(*decomp_free)(void *state);$/;"	m	struct:compressor
decomp_init	net/ppp_comp.h	/^	int	(*decomp_init)(void *state, u_char *options, int opt_len,$/;"	m	struct:compressor
decomp_reset	net/ppp_comp.h	/^	void	(*decomp_reset)(void *state);$/;"	m	struct:compressor
decomp_stat	net/ppp_comp.h	/^	void	(*decomp_stat)(void *state, struct compstat *stats);$/;"	m	struct:compressor
decompress	net/ppp_comp.h	/^	int	(*decompress)(void *state, PACKETPTR mp, PACKETPTR *dmpp);$/;"	m	struct:compressor
default_directories	rtems/mkrootfs.c	/^static const rtems_rootfs_dir_table default_directories[] =$/;"	v	file:
defdname	resolv.h	/^	char	defdname[256];		\/*%< default domain (deprecated) *\/$/;"	m	struct:__res_state
del_entry	netinet/ip_fw.c	/^del_entry(struct ip_fw_head *chainptr, u_short number)$/;"	f	file:
del_mfc	netinet/ip_mroute.c	/^del_mfc(struct mfcctl *mfccp)$/;"	f	file:
del_vif	netinet/ip_mroute.c	/^del_vif(vifi_t *vifip)$/;"	f	file:
descr	sys/sysctl.h	/^	const char	*descr;$/;"	m	struct:sysctl_oid
dhcpOptionOverload	nfs/bootp_subr.c	/^static int dhcpOptionOverload = 0;$/;"	v	file:
dhcp_discover_req	rtems/rtems_dhcp.c	/^dhcp_discover_req (struct dhcp_packet* call,$/;"	f	file:
dhcp_elapsed_time	rtems/rtems_dhcp.c	/^static unsigned long      dhcp_elapsed_time = 0;$/;"	v	file:
dhcp_gotgw	nfs/bootp_subr.c	/^static char dhcp_gotgw = 0;$/;"	v	file:
dhcp_gotgw	rtems/rtems_dhcp.c	/^static char               dhcp_gotgw = 0;$/;"	v	file:
dhcp_gotlogserver	nfs/bootp_subr.c	/^static char dhcp_gotlogserver = 0;$/;"	v	file:
dhcp_gotlogserver	rtems/rtems_dhcp.c	/^static char               dhcp_gotlogserver = 0;$/;"	v	file:
dhcp_gotnetmask	nfs/bootp_subr.c	/^static char dhcp_gotnetmask = 0;$/;"	v	file:
dhcp_gotnetmask	rtems/rtems_dhcp.c	/^static char               dhcp_gotnetmask = 0;$/;"	v	file:
dhcp_gotserver	nfs/bootp_subr.c	/^static char dhcp_gotserver = 0;$/;"	v	file:
dhcp_gotserver	rtems/rtems_dhcp.c	/^static char               dhcp_gotserver = 0;$/;"	v	file:
dhcp_gw	nfs/bootp_subr.c	/^static struct sockaddr_in dhcp_gw;$/;"	v	typeref:struct:sockaddr_in	file:
dhcp_gw	rtems/rtems_dhcp.c	/^static struct sockaddr_in dhcp_gw;$/;"	v	typeref:struct:sockaddr_in	file:
dhcp_hostname	nfs/bootp_subr.c	/^static char *dhcp_hostname = NULL;$/;"	v	file:
dhcp_hostname	rtems/rtems_dhcp.c	/^static char               *dhcp_hostname;$/;"	v	file:
dhcp_if_down	rtems/rtems_dhcp_failsafe.c	/^dhcp_if_down (const char* ifname)$/;"	f	file:
dhcp_if_up	rtems/rtems_dhcp_failsafe.c	/^dhcp_if_up (const char* ifname)$/;"	f	file:
dhcp_init	rtems/rtems_dhcp.c	/^dhcp_init (int update_files)$/;"	f	file:
dhcp_interface_has_ip	rtems/rtems_dhcp.c	/^dhcp_interface_has_ip (struct ifreq *ireq, struct socket *so, struct proc *procp)$/;"	f	file:
dhcp_lease_time	rtems/rtems_dhcp.c	/^static unsigned long      dhcp_lease_time;$/;"	v	file:
dhcp_magic_cookie	rtems/rtems_dhcp.c	/^static const char         dhcp_magic_cookie[4] = { 99, 130, 83, 99 };$/;"	v	file:
dhcp_message_type	rtems/rtems_dhcp.c	/^static int                dhcp_message_type = 0;$/;"	v	file:
dhcp_monitor_priority	rtems/rtems_dhcp_failsafe.c	/^static int dhcp_monitor_priority = RTEMS_DHCP_FAILSAFE_DHCP_MONITOR_PRIORITY;$/;"	v	file:
dhcp_monitor_task	rtems/rtems_dhcp_failsafe.c	/^static void dhcp_monitor_task (rtems_task_argument ifp_arg)$/;"	f	file:
dhcp_netmask	nfs/bootp_subr.c	/^static struct sockaddr_in dhcp_netmask;$/;"	v	typeref:struct:sockaddr_in	file:
dhcp_netmask	rtems/rtems_dhcp.c	/^static struct sockaddr_in dhcp_netmask;$/;"	v	typeref:struct:sockaddr_in	file:
dhcp_option_overload	rtems/rtems_dhcp.c	/^static int                dhcp_option_overload = 0;$/;"	v	file:
dhcp_packet	rtems/rtems_dhcp.c	/^struct dhcp_packet$/;"	s	file:
dhcp_req	rtems/rtems_dhcp.c	/^static struct dhcp_packet dhcp_req;$/;"	v	typeref:struct:dhcp_packet	file:
dhcp_request_parameters	rtems/rtems_dhcp.c	/^static const char         dhcp_request_parameters[5] = { DHCP_SUBNET,$/;"	v	file:
dhcp_request_req	rtems/rtems_dhcp.c	/^dhcp_request_req (struct dhcp_packet* call,$/;"	f	file:
dhcp_start_task	rtems/rtems_dhcp.c	/^dhcp_start_task (struct sockaddr_dl *sdl,$/;"	f	file:
dhcp_task	rtems/rtems_dhcp.c	/^dhcp_task (rtems_task_argument _sdl)$/;"	f	file:
dhcp_task_id	rtems/rtems_dhcp.c	/^static rtems_id           dhcp_task_id;$/;"	v	file:
digitchar	libc/res_comp.c	144;"	d	file:
digits	libc/ns_name.c	/^static char		digits[] = "0123456789";$/;"	v	file:
dinfo	rtems/rtems_showroute.c	/^struct dinfo {$/;"	s	file:
div_init	netinet/ip_divert.c	/^div_init(void)$/;"	f
div_input	netinet/ip_divert.c	/^div_input(struct mbuf *m, int hlen)$/;"	f
div_output	netinet/ip_divert.c	/^div_output(struct socket *so, struct mbuf *m,$/;"	f	file:
div_recvspace	netinet/ip_divert.c	/^static u_long	div_recvspace = DIVRCVQ;	\/* XXX sysctl ? *\/$/;"	v	file:
div_sendspace	netinet/ip_divert.c	/^static u_long	div_sendspace = DIVSNDQ;	\/* XXX sysctl ? *\/$/;"	v	file:
div_usrreq	netinet/ip_divert.c	/^div_usrreq($/;"	f
divcb	netinet/ip_divert.c	/^static struct inpcbhead divcb;$/;"	v	typeref:struct:inpcbhead	file:
divcbinfo	netinet/ip_divert.c	/^static struct inpcbinfo divcbinfo;$/;"	v	typeref:struct:inpcbinfo	file:
divsrc	netinet/ip_divert.c	/^static struct sockaddr_in divsrc = { sizeof(divsrc), AF_INET, 0, { 0 }, { 0 } };$/;"	v	typeref:struct:sockaddr_in	file:
dn_comp	libc/res_comp.c	/^dn_comp(const char *src, u_char *dst, int dstsiz,$/;"	f
dn_comp	resolv.h	229;"	d
dn_count_labels	libc/res_debug.c	/^dn_count_labels(const char *name) {$/;"	f
dn_count_labels	resolv.h	230;"	d
dn_expand	libc/res_comp.c	/^dn_expand(const u_char *msg, const u_char *eom, const u_char *src,$/;"	f
dn_expand	resolv.h	231;"	d
dn_find	libc/ns_name.c	/^dn_find(const u_char *domain, const u_char *msg,$/;"	f	file:
dn_skipname	libc/res_comp.c	/^dn_skipname(const u_char *ptr, const u_char *eom) {$/;"	f
dn_skipname	resolv.h	232;"	d
dnsrch	resolv.h	/^	char	*dnsrch[MAXDNSRCH+1];	\/*%< components of domain to search *\/$/;"	m	struct:__res_state
do_dhcp_init	rtems/rtems_dhcp_failsafe.c	/^do_dhcp_init (struct rtems_bsdnet_ifconfig *ifp)$/;"	f	file:
do_section	libc/res_debug.c	/^do_section(ns_msg *handle, ns_sect section, int pflag, FILE *file) {$/;"	f	file:
do_size_command	lib/ftpfs.c	/^  bool do_size_command;$/;"	m	struct:__anon15	file:
dom_dispose	sys/domain.h	/^	void	(*dom_dispose)		\/* dispose of internalized rights *\/$/;"	m	struct:domain
dom_externalize	sys/domain.h	/^	int	(*dom_externalize)	\/* externalize access rights *\/$/;"	m	struct:domain
dom_family	sys/domain.h	/^	int	dom_family;		\/* AF_xxx *\/$/;"	m	struct:domain
dom_init	sys/domain.h	/^	void	(*dom_init)		\/* initialize domain data structures *\/$/;"	m	struct:domain
dom_maxrtkey	sys/domain.h	/^	int	dom_maxrtkey;		\/* for routing layer *\/$/;"	m	struct:domain
dom_name	sys/domain.h	/^	char	*dom_name;$/;"	m	struct:domain
dom_next	sys/domain.h	/^	struct	domain *dom_next;$/;"	m	struct:domain	typeref:struct:domain::domain
dom_protosw	sys/domain.h	/^	struct	protosw *dom_protosw, *dom_protoswNPROTOSW;$/;"	m	struct:domain	typeref:struct:domain::protosw
dom_protoswNPROTOSW	sys/domain.h	/^	struct	protosw *dom_protosw, *dom_protoswNPROTOSW;$/;"	m	struct:domain	typeref:struct:domain::
dom_rtattach	sys/domain.h	/^	int	(*dom_rtattach)		\/* initialize routing table *\/$/;"	m	struct:domain
dom_rtoffset	sys/domain.h	/^	int	dom_rtoffset;		\/* an arg to rtattach, in bits *\/$/;"	m	struct:domain
domain	sys/domain.h	/^struct domain {$/;"	s
domainchar	libc/res_comp.c	148;"	d	file:
domaininit	kern/uipc_domain.c	/^domaininit(void *dummy)$/;"	f
domainname	kern/kern_mib.c	/^char domainname[MAXHOSTNAMELEN];$/;"	v
domainname	rtems/rtems_bsdnet.h	/^	char			*domainname;		\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
domains	kern/uipc_domain.c	/^struct domain *domains;$/;"	v	typeref:struct:domain
dprint_ip	netinet/ip_fw.c	85;"	d	file:
dprintf	netinet/ip_fw.c	77;"	d	file:
draining	netinet/in_rmx.c	/^	int draining;$/;"	m	struct:rtqk_arg	file:
drv_ctrl	rtems/rtems_bsdnet.h	/^  void *drv_ctrl;$/;"	m	struct:rtems_bsdnet_ifconfig
dst	netinet/ip_input.c	/^	struct	in_addr dst;			\/* final destination *\/$/;"	m	struct:ip_srcrt	typeref:struct:ip_srcrt::in_addr	file:
dst	rtems/rtems_showroute.c	/^	struct sockaddr	dst;$/;"	m	struct:rinfo	typeref:struct:rinfo::sockaddr	file:
dtom	sys/mbuf.h	62;"	d
e_enm	netinet/if_ether.h	/^	struct ether_multi  *e_enm;$/;"	m	struct:ether_multistep	typeref:struct:ether_multistep::ether_multi
ea_hdr	netinet/if_ether.h	/^	struct	arphdr ea_hdr;			\/* fixed-size header *\/$/;"	m	struct:ether_arp	typeref:struct:ether_arp::arphdr
encap_send	netinet/ip_mroute.c	/^encap_send(struct ip *ip, struct vif *vifp, struct mbuf *m)$/;"	f	file:
endhostent	libc/gethostnamadr.c	/^endhostent(void)$/;"	f
endnetent	libc/getnetnamadr.c	/^endnetent(void)$/;"	f
endprotoent	libc/getprotoent.c	/^endprotoent(void)$/;"	f
endservent	libc/getservent.c	/^endservent(void)$/;"	f
enm_ac	netinet/if_ether.h	/^	struct	arpcom *enm_ac;		\/* back pointer to arpcom *\/$/;"	m	struct:ether_multi	typeref:struct:ether_multi::arpcom
enm_addrhi	netinet/if_ether.h	/^	u_char	enm_addrhi[ETHER_ADDR_LEN];		\/* high or only address of range *\/$/;"	m	struct:ether_multi
enm_addrlo	netinet/if_ether.h	/^	u_char	enm_addrlo[ETHER_ADDR_LEN];		\/* low  or only address of range *\/$/;"	m	struct:ether_multi
enm_next	netinet/if_ether.h	/^	struct	ether_multi *enm_next;	\/* ptr to next ether_multi *\/$/;"	m	struct:ether_multi	typeref:struct:ether_multi::ether_multi
enm_refcount	netinet/if_ether.h	/^	u_int	enm_refcount;		\/* no. claims to this addr\/range *\/$/;"	m	struct:ether_multi
entry	rtems/rtems_glue.c	/^	void (*entry)(void *);$/;"	m	struct:newtask	file:
entry	sys/sysctl.h	/^	struct sysctl_oid *entry;$/;"	m	struct:sysctl_ctx_entry	typeref:struct:sysctl_ctx_entry::sysctl_oid
eof	lib/ftpfs.c	/^  bool eof;$/;"	m	struct:__anon15	file:
eof	lib/tftpDriver.c	/^    int     eof;$/;"	m	struct:tftpStream	file:
equal	net/if.c	176;"	d	file:
equal	net/raw_usrreq.c	95;"	d	file:
equal	net/route.c	264;"	d	file:
err_prefix	netinet/ip_fw.c	/^static char err_prefix[] = "ip_fw_ctl:";$/;"	v	file:
errorCode	lib/tftpDriver.c	/^        uint16_t      errorCode;$/;"	m	struct:tftpPacket::tftpERROR	file:
errorMessage	lib/tftpDriver.c	/^        char                errorMessage[TFTP_BUFSIZE];$/;"	m	struct:tftpPacket::tftpERROR	file:
eth_al_media_strings	rtems/rtems_mii_ioctl.c	/^static struct ifmedia_description eth_al_media_strings[] =$/;"	v	typeref:struct:ifmedia_description	file:
ether_addmulti	net/if_ethersubr.c	/^ether_addmulti(struct ifreq *ifr, struct arpcom *ac)$/;"	f
ether_addr	net/ethernet.h	/^struct	ether_addr {$/;"	s
ether_arp	netinet/if_ether.h	/^struct	ether_arp {$/;"	s
ether_crc32_be	net/if_ethersubr.c	/^ether_crc32_be(const uint8_t *buf, size_t len)$/;"	f
ether_crc32_le	net/if_ethersubr.c	/^ether_crc32_le(const uint8_t *buf, size_t len)$/;"	f
ether_delmulti	net/if_ethersubr.c	/^ether_delmulti(struct ifreq *ifr, struct arpcom *ac)$/;"	f
ether_dhost	net/ethernet.h	/^	u_char	ether_dhost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_header	net/ethernet.h	/^struct	ether_header {$/;"	s
ether_ifattach	net/if_ethersubr.c	/^ether_ifattach(struct ifnet *ifp)$/;"	f
ether_input	net/if_ethersubr.c	/^ether_input(struct ifnet *ifp, struct ether_header *eh, struct mbuf *m)$/;"	f
ether_ioctl	net/if_ethersubr.c	/^ether_ioctl(struct ifnet *ifp, ioctl_command_t command, caddr_t data)$/;"	f
ether_ipmulticast_max	net/if_ethersubr.c	/^static u_char ether_ipmulticast_max[6] =$/;"	v	file:
ether_ipmulticast_max	net/if_ethersubr.c	/^u_char ether_ipmulticast_max[6] =$/;"	v
ether_ipmulticast_min	net/if_ethersubr.c	/^static u_char ether_ipmulticast_min[6] = $/;"	v	file:
ether_ipmulticast_min	net/if_ethersubr.c	/^u_char ether_ipmulticast_min[6] = $/;"	v
ether_multi	netinet/if_ether.h	/^struct ether_multi {$/;"	s
ether_multistep	netinet/if_ether.h	/^struct ether_multistep {$/;"	s
ether_output	net/if_ethersubr.c	/^ether_output(struct ifnet *ifp, struct mbuf *m,$/;"	f
ether_shost	net/ethernet.h	/^	u_char	ether_shost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_sprintf	net/if_ethersubr.c	/^ether_sprintf(const u_char *ap)$/;"	f
ether_type	net/ethernet.h	/^	u_short	ether_type;$/;"	m	struct:ether_header
ether_type	net/if_llc.h	/^		u_int16_t ether_type;$/;"	m	struct:llc::__anon40::__anon45
etherbroadcastaddr	net/if_ethersubr.c	/^u_char	etherbroadcastaddr[6] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };$/;"	v
ethern_media_strings	rtems/rtems_mii_ioctl.c	/^static struct ifmedia_description ethern_media_strings[] =$/;"	v	typeref:struct:ifmedia_description	file:
events	sys/poll.h	/^	short	events;		\/* events we are interested in *\/$/;"	m	struct:pollfd
expire	rtems/rtems_showroute.c	/^	unsigned long	expire;$/;"	m	struct:rinfo	file:
expire_upcalls	netinet/ip_mroute.c	/^expire_upcalls(void *unused)$/;"	f	file:
ext_accm	net/ppp_defs.h	/^typedef uint32_t	ext_accm[8];$/;"	t
ext_buf	sys/mbuf.h	/^	caddr_t	ext_buf;		\/* start of buffer *\/$/;"	m	struct:m_ext
ext_free	sys/mbuf.h	/^	void	(*ext_free)		\/* free routine if not the usual *\/$/;"	m	struct:m_ext
ext_ref	sys/mbuf.h	/^	void	(*ext_ref)		\/* add a reference to the ext object *\/$/;"	m	struct:m_ext
ext_size	sys/mbuf.h	/^	u_int	ext_size;		\/* size of buffer, for ext_free *\/$/;"	m	struct:m_ext
fa2_atime	nfs/nfsproto.h	331;"	d
fa2_blocks	nfs/nfsproto.h	328;"	d
fa2_blocksize	nfs/nfsproto.h	326;"	d
fa2_ctime	nfs/nfsproto.h	333;"	d
fa2_fileid	nfs/nfsproto.h	330;"	d
fa2_fsid	nfs/nfsproto.h	329;"	d
fa2_mtime	nfs/nfsproto.h	332;"	d
fa2_rdev	nfs/nfsproto.h	327;"	d
fa2_size	nfs/nfsproto.h	325;"	d
fa3_atime	nfs/nfsproto.h	339;"	d
fa3_ctime	nfs/nfsproto.h	341;"	d
fa3_fileid	nfs/nfsproto.h	338;"	d
fa3_fsid	nfs/nfsproto.h	337;"	d
fa3_mtime	nfs/nfsproto.h	340;"	d
fa3_rdev	nfs/nfsproto.h	336;"	d
fa3_size	nfs/nfsproto.h	334;"	d
fa3_used	nfs/nfsproto.h	335;"	d
fa_gid	nfs/nfsproto.h	/^	u_int32_t	fa_gid;$/;"	m	struct:nfs_fattr
fa_mode	nfs/nfsproto.h	/^	u_int32_t	fa_mode;$/;"	m	struct:nfs_fattr
fa_nfsv2	nfs/nfsproto.h	/^		} fa_nfsv2;$/;"	m	union:nfs_fattr::__anon9	typeref:struct:nfs_fattr::__anon9::__anon10
fa_nfsv3	nfs/nfsproto.h	/^		} fa_nfsv3;$/;"	m	union:nfs_fattr::__anon9	typeref:struct:nfs_fattr::__anon9::__anon11
fa_nlink	nfs/nfsproto.h	/^	u_int32_t	fa_nlink;$/;"	m	struct:nfs_fattr
fa_type	nfs/nfsproto.h	/^	u_int32_t	fa_type;$/;"	m	struct:nfs_fattr
fa_uid	nfs/nfsproto.h	/^	u_int32_t	fa_uid;$/;"	m	struct:nfs_fattr
fa_un	nfs/nfsproto.h	/^	} fa_un;$/;"	m	struct:nfs_fattr	typeref:union:nfs_fattr::__anon9
facilitynames	sys/syslog.h	/^CODE facilitynames[] = {$/;"	v
farAddress	lib/tftpDriver.c	/^    struct sockaddr_in  farAddress;$/;"	m	struct:tftpStream	typeref:struct:tftpStream::sockaddr_in	file:
fcstab	net/ppp_tty.c	/^static u_short fcstab[256] = {$/;"	v	file:
fd	sys/poll.h	/^	int	fd;		\/* which file descriptor to poll *\/$/;"	m	struct:pollfd
fh	nfsclient/nfsargs.h	/^	u_char		*fh;		\/* File handle to be mounted *\/$/;"	m	struct:nfs_args
fh_bytes	nfs/nfsproto.h	/^	u_char		fh_bytes[NFS_SMALLFH];$/;"	m	union:nfsfh
fh_fid	sys/mount.h	/^	struct	fid fh_fid;	\/* Filesys specific id *\/$/;"	m	struct:fhandle	typeref:struct:fhandle::fid
fh_fsid	sys/mount.h	/^	fsid_t	fh_fsid;	\/* Filesystem id of mount point *\/$/;"	m	struct:fhandle
fh_generic	nfs/nfsproto.h	/^	fhandle_t	fh_generic;$/;"	m	union:nfsfh
fhandle	sys/mount.h	/^struct fhandle {$/;"	s
fhandle_t	sys/mount.h	/^typedef struct fhandle	fhandle_t;$/;"	t	typeref:struct:fhandle
fhsize	nfsclient/nfsargs.h	/^	int		fhsize;		\/* Size, in bytes, of fh *\/$/;"	m	struct:nfs_args
fid	sys/mount.h	/^struct fid {$/;"	s
fid_data	sys/mount.h	/^	char		fid_data[MAXFIDSZ];	\/* data (variable length) *\/$/;"	m	struct:fid
fid_len	sys/mount.h	/^	u_short		fid_len;		\/* length of data in bytes *\/$/;"	m	struct:fid
fid_reserved	sys/mount.h	/^	u_short		fid_reserved;		\/* force longword alignment *\/$/;"	m	struct:fid
file	nfs/bootp_subr.c	/^  char file[128];$/;"	m	struct:bootp_packet	file:
file	rtems/rtems_dhcp.c	/^  char           file[128];$/;"	m	struct:dhcp_packet	file:
file_size	lib/ftpfs.c	/^  off_t file_size;$/;"	m	struct:__anon15	file:
filename	lib/ftpfs.c	/^  const char *filename;$/;"	m	struct:__anon15	file:
filename_mode	lib/tftpDriver.c	/^        char                filename_mode[TFTP_BUFSIZE];$/;"	m	struct:tftpPacket::tftpRWRQ	file:
find_desc	rtems/rtems_mii_ioctl.c	/^find_desc (int tag, struct ifmedia_description *list)$/;"	f	file:
find_rti	netinet/igmp.c	/^find_rti(struct ifnet *ifp)$/;"	f	file:
find_tag	rtems/rtems_mii_ioctl.c	/^find_tag (const char *desc, struct ifmedia_description *list)$/;"	f	file:
firstReply	lib/tftpDriver.c	/^    int     firstReply;$/;"	m	struct:tftpStream	file:
fixPath	lib/tftpDriver.c	/^fixPath (char *path)$/;"	f	file:
fixpt_t	rtems/rtems_bsdnet_internal.h	/^typedef	u_int32_t	fixpt_t;	\/* fixed point number *\/$/;"	t
flags	lib/tftpDriver.c	/^  uint32_t flags;$/;"	m	struct:tftpfs_info_s	file:
flags	net/slcompress.h	/^	u_int16_t flags;$/;"	m	struct:slcompress
flags	nfs/bootp_subr.c	/^  u_int16_t flags;$/;"	m	struct:bootp_packet	file:
flags	nfsclient/nfsargs.h	/^	int		flags;		\/* flags *\/$/;"	m	struct:nfs_args
flags	rtems/rtems_dhcp.c	/^  u_int16_t      flags;$/;"	m	struct:dhcp_packet	file:
flags	rtems/rtems_showroute.c	/^	int		flags;$/;"	m	struct:rinfo	file:
fmt1	libc/ns_ttl.c	/^fmt1(int t, char s, char **buf, size_t *buflen) {$/;"	f	file:
format_id	net/if_llc.h	/^		u_int8_t format_id;$/;"	m	struct:llc::__anon40::__anon41
format_ip	rtems/rtems_dhcp.c	/^format_ip (unsigned long ip, char* buffer)$/;"	f	file:
formnames	arpa/ftp.h	/^char *formnames[] =  {"0", "Nonprint", "Telnet", "Carriage-control" };$/;"	v
found	netinet/in_rmx.c	/^	int found;$/;"	m	struct:rtqk_arg	file:
fp_nquery	libc/res_debug.c	/^fp_nquery(const u_char *msg, int len, FILE *file) {$/;"	f
fp_nquery	resolv.h	190;"	d
fp_query	libc/res_debug.c	/^fp_query(const u_char *msg, FILE *file) {$/;"	f
fp_query	resolv.h	191;"	d
fp_resstat	libc/res_debug.c	/^fp_resstat(struct __res_state *statp, FILE *file) {$/;"	f
fp_resstat	resolv.h	233;"	d
fp_resstat	resolv.h	238;"	d
fraction	rtems/rtems_bsdnet.h	/^	uint32_t	fraction;$/;"	m	struct:timestamp
frag_divert_port	netinet/ip_input.c	/^static u_short	frag_divert_port;$/;"	v	file:
free	rtems/rtems_bsdnet_internal.h	130;"	d
free	rtems/rtems_glue.c	151;"	d	file:
free	rtems/rtems_showroute.c	27;"	d	file:
freecnt	sys/malloc.h	/^		u_short freecnt;\/* for small allocations, free pieces in page *\/$/;"	m	union:kmemusage::__anon52
freeifaddrs	libc/getifaddrs.c	/^freeifaddrs(struct ifaddrs *ifp)$/;"	f
frmr_cause	net/if_llc.h	/^		u_int8_t frmr_cause;$/;"	m	struct:llc::__anon40::__anon44
frmr_cause	net/if_llc.h	/^	u_int8_t frmr_cause;$/;"	m	struct:frmrinfo
frmr_control	net/if_llc.h	/^		u_int8_t frmr_control;$/;"	m	struct:llc::__anon40::__anon44
frmr_control	net/if_llc.h	/^	u_int8_t frmr_control;$/;"	m	struct:frmrinfo
frmr_control_ext	net/if_llc.h	/^		u_int8_t frmr_control_ext;$/;"	m	struct:llc::__anon40::__anon44
frmr_control_ext	net/if_llc.h	/^	u_int8_t frmr_control_ext;$/;"	m	struct:frmrinfo
frmr_rej_pdu0	net/if_llc.h	/^		u_int8_t frmr_rej_pdu0;$/;"	m	struct:llc::__anon40::__anon44
frmr_rej_pdu0	net/if_llc.h	/^	u_int8_t frmr_rej_pdu0;$/;"	m	struct:frmrinfo
frmr_rej_pdu1	net/if_llc.h	/^		u_int8_t frmr_rej_pdu1;$/;"	m	struct:llc::__anon40::__anon44
frmr_rej_pdu1	net/if_llc.h	/^	u_int8_t frmr_rej_pdu1;$/;"	m	struct:frmrinfo
frmrinfo	net/if_llc.h	/^struct frmrinfo {$/;"	s
fs_dtpref	nfs/nfsproto.h	/^	u_int32_t	fs_dtpref;$/;"	m	struct:nfsv3_fsinfo
fs_maxfilesize	nfs/nfsproto.h	/^	nfsuint64	fs_maxfilesize;$/;"	m	struct:nfsv3_fsinfo
fs_properties	nfs/nfsproto.h	/^	u_int32_t	fs_properties;$/;"	m	struct:nfsv3_fsinfo
fs_rtmax	nfs/nfsproto.h	/^	u_int32_t	fs_rtmax;$/;"	m	struct:nfsv3_fsinfo
fs_rtmult	nfs/nfsproto.h	/^	u_int32_t	fs_rtmult;$/;"	m	struct:nfsv3_fsinfo
fs_rtpref	nfs/nfsproto.h	/^	u_int32_t	fs_rtpref;$/;"	m	struct:nfsv3_fsinfo
fs_timedelta	nfs/nfsproto.h	/^	nfstime3	fs_timedelta;$/;"	m	struct:nfsv3_fsinfo
fs_wtmax	nfs/nfsproto.h	/^	u_int32_t	fs_wtmax;$/;"	m	struct:nfsv3_fsinfo
fs_wtmult	nfs/nfsproto.h	/^	u_int32_t	fs_wtmult;$/;"	m	struct:nfsv3_fsinfo
fs_wtpref	nfs/nfsproto.h	/^	u_int32_t	fs_wtpref;$/;"	m	struct:nfsv3_fsinfo
fsid	sys/mount.h	/^typedef struct fsid { int32_t val[2]; } fsid_t;	\/* filesystem id type *\/$/;"	s
fsid_t	sys/mount.h	/^typedef struct fsid { int32_t val[2]; } fsid_t;	\/* filesystem id type *\/$/;"	t	typeref:struct:fsid
fu_divert_port	netinet/ip_fw.h	/^	u_short fu_divert_port;		\/* Divert\/tee port (options IPDIVERT) *\/$/;"	m	union:ip_fw::__anon3
fu_reject_code	netinet/ip_fw.h	/^	u_short fu_reject_code;		\/* REJECT response code *\/$/;"	m	union:ip_fw::__anon3
fu_skipto_rule	netinet/ip_fw.h	/^	u_short fu_skipto_rule;		\/* SKIPTO command rule number *\/$/;"	m	union:ip_fw::__anon3
fu_via_if	netinet/ip_fw.h	/^    } fu_via_if;$/;"	m	union:ip_fw_if	typeref:struct:ip_fw_if::__anon2
fu_via_ip	netinet/ip_fw.h	/^    struct in_addr fu_via_ip;	\/* Specified by IP address *\/$/;"	m	union:ip_fw_if	typeref:struct:ip_fw_if::in_addr
func	sys/kernel.h	/^	void		(*func)(void *);	\/* init function*\/$/;"	m	struct:sysinit
func	sys/kernel.h	/^	void		(*func)(void);	\/* "main" for kernel process*\/$/;"	m	struct:kproc_desc
fw_bcnt	netinet/ip_fw.h	/^    u_long fw_pcnt,fw_bcnt;		\/* Packet and byte counters *\/$/;"	m	struct:ip_fw
fw_debug	netinet/ip_fw.c	/^static int fw_debug = 1;$/;"	v	file:
fw_divert_port	netinet/ip_fw.h	90;"	d
fw_dmsk	netinet/ip_fw.h	/^    struct in_addr fw_smsk, fw_dmsk;	\/* Mask for src and dest IP addr *\/$/;"	m	struct:ip_fw	typeref:struct:ip_fw::
fw_dst	netinet/ip_fw.h	/^    struct in_addr fw_src, fw_dst;	\/* Source and destination IP addr *\/$/;"	m	struct:ip_fw	typeref:struct:ip_fw::
fw_flg	netinet/ip_fw.h	/^    u_short fw_flg;			\/* Flags word *\/$/;"	m	struct:ip_fw
fw_icmptypes	netinet/ip_fw.h	/^    unsigned fw_icmptypes[IP_FW_ICMPTYPES_DIM]; \/* ICMP types bitmap *\/$/;"	m	struct:ip_fw
fw_in_if	netinet/ip_fw.h	/^    union ip_fw_if fw_in_if, fw_out_if;	\/* Incoming and outgoing interfaces *\/$/;"	m	struct:ip_fw	typeref:union:ip_fw::ip_fw_if
fw_ipnopt	netinet/ip_fw.h	/^    u_char fw_ipopt,fw_ipnopt;		\/* IP options set\/unset *\/$/;"	m	struct:ip_fw
fw_ipopt	netinet/ip_fw.h	/^    u_char fw_ipopt,fw_ipnopt;		\/* IP options set\/unset *\/$/;"	m	struct:ip_fw
fw_nports	netinet/ip_fw.h	/^    u_char fw_nports;			\/* N'of src ports and # of dst ports *\/$/;"	m	struct:ip_fw
fw_number	netinet/ip_fw.h	/^    u_short fw_number;			\/* Rule number *\/$/;"	m	struct:ip_fw
fw_out_if	netinet/ip_fw.h	/^    union ip_fw_if fw_in_if, fw_out_if;	\/* Incoming and outgoing interfaces *\/$/;"	m	struct:ip_fw	typeref:union:ip_fw::
fw_pcnt	netinet/ip_fw.h	/^    u_long fw_pcnt,fw_bcnt;		\/* Packet and byte counters *\/$/;"	m	struct:ip_fw
fw_prot	netinet/ip_fw.h	/^    u_char fw_prot;			\/* IP protocol *\/$/;"	m	struct:ip_fw
fw_pts	netinet/ip_fw.h	/^    u_short fw_pts[IP_FW_MAX_PORTS];	\/* Array of port numbers to match *\/$/;"	m	struct:ip_fw
fw_reject_code	netinet/ip_fw.h	92;"	d
fw_skipto_rule	netinet/ip_fw.h	91;"	d
fw_smsk	netinet/ip_fw.h	/^    struct in_addr fw_smsk, fw_dmsk;	\/* Mask for src and dest IP addr *\/$/;"	m	struct:ip_fw	typeref:struct:ip_fw::in_addr
fw_src	netinet/ip_fw.h	/^    struct in_addr fw_src, fw_dst;	\/* Source and destination IP addr *\/$/;"	m	struct:ip_fw	typeref:struct:ip_fw::in_addr
fw_tcpf	netinet/ip_fw.h	/^    u_char fw_tcpf,fw_tcpnf;		\/* TCP flags set\/unset *\/$/;"	m	struct:ip_fw
fw_tcpnf	netinet/ip_fw.h	/^    u_char fw_tcpf,fw_tcpnf;		\/* TCP flags set\/unset *\/$/;"	m	struct:ip_fw
fw_un	netinet/ip_fw.h	/^    } fw_un;$/;"	m	struct:ip_fw	typeref:union:ip_fw::__anon3
fw_verbose	netinet/ip_fw.c	/^static int fw_verbose = 0;$/;"	v	file:
fw_verbose	netinet/ip_fw.c	/^static int fw_verbose = 1;$/;"	v	file:
fw_verbose_limit	netinet/ip_fw.c	/^static int fw_verbose_limit = 0;$/;"	v	file:
fw_verbose_limit	netinet/ip_fw.c	/^static int fw_verbose_limit = IPFIREWALL_VERBOSE_LIMIT;$/;"	v	file:
fxdr_hyper	nfs/xdr_subs.h	78;"	d
fxdr_nfsv2time	nfs/xdr_subs.h	54;"	d
fxdr_nfsv3time	nfs/xdr_subs.h	69;"	d
fxdr_unsigned	nfs/xdr_subs.h	51;"	d
gateway	rtems/rtems_bsdnet.h	/^	char			*gateway;		\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
getPacket	lib/tftpDriver.c	/^getPacket (struct tftpStream *tp, int retryCount)$/;"	f	file:
getServerTimespec	lib/rtems_bsdnet_ntp.c	/^getServerTimespec(struct ntpPacketSmall *p, int state, void *usr_data)$/;"	f	file:
get_assert	netinet/ip_mroute.c	/^get_assert(struct mbuf *m)$/;"	f	file:
get_service_name	libc/gethostnamadr.c	/^get_service_name(const char *name) {$/;"	f	file:
get_service_name	libc/getnetnamadr.c	/^get_service_name(const char *name) {$/;"	f	file:
get_sg_cnt	netinet/ip_mroute.c	/^get_sg_cnt(struct sioc_sg_req *req)$/;"	f	file:
get_version	netinet/ip_mroute.c	/^get_version(struct mbuf *mb)$/;"	f	file:
get_vif_cnt	netinet/ip_mroute.c	/^get_vif_cnt(struct sioc_vif_req *req)$/;"	f	file:
getbits	rtems/rtems_select.c	137;"	d	file:
getbits	rtems/rtems_select.c	146;"	d	file:
getdec	nfs/bootp_subr.c	/^getdec(char **ptr)$/;"	f	file:
gethostanswer	libc/gethostbydns.c	/^gethostanswer($/;"	f	file:
gethostbyaddr	libc/gethostnamadr.c	/^gethostbyaddr(const void *addr, socklen_t len, int type)$/;"	f
gethostbyaddr_r	libc/gethostnamadr.c	/^int gethostbyaddr_r(const void *addr, socklen_t len, int type,$/;"	f
gethostbyname	libc/gethostnamadr.c	/^gethostbyname(const char *name)$/;"	f
gethostbyname2	libc/gethostnamadr.c	/^gethostbyname2(const char *name, int type)$/;"	f
gethostbyname_r	libc/gethostnamadr.c	/^int gethostbyname_r(const char*      name, $/;"	f
gethostent	libc/gethostbyht.c	/^gethostent(void)$/;"	f
gethostent_r	libc/gethostbyht.c	/^struct hostent* gethostent_r(char* buf, int len) $/;"	f
gethostname	rtems/sghostname.c	/^gethostname (char *name, size_t namelen)$/;"	f
getifaddrs	libc/getifaddrs.c	/^getifaddrs(struct ifaddrs **pif)$/;"	f
getkerninfo_args	kern/kern_sysctl.c	/^struct getkerninfo_args {$/;"	s	file:
getnetanswer	libc/getnetbydns.c	/^getnetanswer($/;"	f	file:
getnetbyaddr	libc/getnetnamadr.c	/^getnetbyaddr(uint32_t addr, int af)$/;"	f
getnetbyname	libc/getnetnamadr.c	/^getnetbyname(const char *name)$/;"	f
getnetent	libc/getnetbyht.c	/^getnetent(void)$/;"	f
getnum_str	libc/res_mkupdate.c	/^getnum_str(u_char **startpp, u_char *endp) {$/;"	f	file:
getpeername	rtems/rtems_syscall.c	/^getpeername (int s, struct sockaddr *name, int *namelen)$/;"	f
getpeersockname	rtems/rtems_syscall.c	/^getpeersockname (int s, struct sockaddr *name, int *namelen, int pflag)$/;"	f	file:
getprotobyname	libc/getprotoname.c	/^getprotobyname($/;"	f
getprotobyname_static	lib/getprotoby.c	/^getprotobyname_static (const char *name)$/;"	f
getprotobynumber	libc/getproto.c	/^getprotobynumber($/;"	f
getprotobynumber_static	lib/getprotoby.c	/^getprotobynumber_static (int proto)$/;"	f
getprotoent	libc/getprotoent.c	/^getprotoent(void)$/;"	f
getservbyname	libc/getservbyname.c	/^getservbyname($/;"	f
getservbyname_r	libc/getservbyname.c	/^int getservbyname_r($/;"	f
getservbyport	libc/getservbyport.c	/^getservbyport($/;"	f
getservbyport_r	libc/getservbyport.c	/^int getservbyport_r($/;"	f
getservent	libc/getservent.c	/^getservent(void)$/;"	f
getsockname	rtems/rtems_syscall.c	/^getsockname (int s, struct sockaddr *name, int *namelen)$/;"	f
getsockopt	rtems/rtems_syscall.c	/^getsockopt (int s, int level, int name, void *aval, int *avalsize)$/;"	f
getword_str	libc/res_mkupdate.c	/^getword_str(char *buf, int size, u_char **startpp, u_char *endp) {$/;"	f	file:
giaddr	nfs/bootp_subr.c	/^  struct in_addr giaddr;$/;"	m	struct:bootp_packet	typeref:struct:bootp_packet::in_addr	file:
giaddr	rtems/rtems_dhcp.c	/^  struct in_addr giaddr;$/;"	m	struct:dhcp_packet	typeref:struct:dhcp_packet::in_addr	file:
global_procpp	sys/kernel.h	/^	struct proc	**global_procpp;	\/* ptr to proc ptr save area*\/$/;"	m	struct:kproc_desc	typeref:struct:kproc_desc::proc
grp	netinet/ip_mroute.h	/^    struct in_addr grp;$/;"	m	struct:sioc_sg_req	typeref:struct:sioc_sg_req::in_addr
h_addr	netdb.h	94;"	d
h_addr_list	netdb.h	/^	char	**h_addr_list;	\/* list of addresses from name server *\/$/;"	m	struct:hostent
h_addr_ptrs	libc/gethostbydns.c	/^static char *h_addr_ptrs[MAXADDRS + 1];$/;"	v	file:
h_addr_ptrs	libc/gethostbyht.c	/^static char *h_addr_ptrs[2];$/;"	v	file:
h_addrtype	netdb.h	/^	int	h_addrtype;	\/* host address type *\/$/;"	m	struct:hostent
h_aliases	netdb.h	/^	char	**h_aliases;	\/* alias list *\/$/;"	m	struct:hostent
h_errlist	libc/herror.c	/^const char *h_errlist[] = {$/;"	v
h_errno	libc/herror.c	/^int	h_errno;$/;"	v
h_length	netdb.h	/^	int	h_length;	\/* length of address *\/$/;"	m	struct:hostent
h_name	netdb.h	/^	char	*h_name;	\/* official name of host *\/$/;"	m	struct:hostent
h_nerr	libc/herror.c	/^int	h_nerr = { sizeof h_errlist \/ sizeof h_errlist[0] };$/;"	v
hardware_address	rtems/rtems_bsdnet.h	/^	void		*hardware_address;$/;"	m	struct:rtems_bsdnet_ifconfig
has_gmii	rtems/rtems_mii_ioctl.h	/^  unsigned has_gmii:1;          \/* supports gigabit *\/$/;"	m	struct:rtems_mdio_info
hashbase	netinet/in_pcb.h	/^	struct	inpcbhead *hashbase;$/;"	m	struct:inpcbinfo	typeref:struct:inpcbinfo::inpcbhead
hashinit	kern/kern_subr.c	/^hashinit(elements, type, hashmask)$/;"	f
hashmask	netinet/in_pcb.h	/^	unsigned long hashmask;$/;"	m	struct:inpcbinfo
have_encap_tunnel	netinet/ip_mroute.c	/^static int have_encap_tunnel = 0;$/;"	v	file:
hdr	libc/gethostbydns.c	/^    HEADER hdr;$/;"	m	union:__anon28	file:
hdr	libc/getnetbydns.c	/^	HEADER	hdr;$/;"	m	union:__anon30	file:
herror	libc/herror.c	/^herror(const char *s)$/;"	f
hex2ascii	sys/libkern.h	47;"	d
hexlist	libc/linkaddr.c	/^static char hexlist[] = "0123456789abcdef";$/;"	v	file:
hlen	nfs/bootp_subr.c	/^  u_int8_t hlen;$/;"	m	struct:bootp_packet	file:
hlen	rtems/rtems_dhcp.c	/^  u_int8_t       hlen;$/;"	m	struct:dhcp_packet	file:
hops	nfs/bootp_subr.c	/^  u_int8_t hops;$/;"	m	struct:bootp_packet	file:
hops	rtems/rtems_dhcp.c	/^  u_int8_t       hops;$/;"	m	struct:dhcp_packet	file:
host	libc/gethostbydns.c	/^static struct hostent host;$/;"	v	typeref:struct:hostent	file:
host	libc/gethostbyht.c	/^static struct hostent host;$/;"	v	typeref:struct:hostent	file:
host_addr	libc/gethostbydns.c	/^static u_char host_addr[16];	\/* IPv4 or IPv6 *\/$/;"	v	file:
host_addr	libc/gethostbyht.c	/^static u_char host_addr[16];	\/* IPv4 or IPv6 *\/$/;"	v	file:
host_addrs	libc/gethostbynis.c	/^static char *host_addrs[2];$/;"	v	file:
host_aliases	libc/gethostbydns.c	/^static char *host_aliases[MAXALIASES];$/;"	v	file:
host_aliases	libc/gethostbyht.c	/^static char *host_aliases[MAXALIASES];$/;"	v	file:
host_aliases	libc/gethostbynis.c	/^static char *host_aliases[MAXALIASES];$/;"	v	file:
host_aliases	libc/getnetbynis.c	/^static char *host_aliases[MAXALIASES];$/;"	v	file:
hostaddr	libc/gethostbynis.c	/^static char hostaddr[MAXADDRS];$/;"	v	file:
hostalias	libc/res_query.c	/^hostalias(const char *name)$/;"	f
hostalias	resolv.h	192;"	d
hostbuf	libc/gethostbydns.c	/^static char hostbuf[8*1024];$/;"	v	file:
hostbuf	libc/gethostbyht.c	/^static char hostbuf[BUFSIZ+1];$/;"	v	file:
hostent	netdb.h	/^struct	hostent {$/;"	s
hostf	libc/gethostbyht.c	/^static FILE *hostf = NULL;$/;"	v	file:
hostid	kern/kern_mib.c	/^u_long hostid;$/;"	v
hostlen	libc/gethostbyht.c	/^static unsigned int hostlen = 0; $/;"	v	file:
hostmap	libc/gethostbyht.c	/^static char* hostmap = NULL;$/;"	v	file:
hostname	kern/kern_mib.c	/^char hostname[MAXHOSTNAMELEN];$/;"	v
hostname	lib/ftpfs.c	/^  const char *hostname;$/;"	m	struct:__anon15	file:
hostname	nfsclient/nfsargs.h	/^	char		*hostname;	\/* server's name *\/$/;"	m	struct:nfs_args
hostname	rtems/rtems_bsdnet.h	/^	char			*hostname;		\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
hstrerror	libc/herror.c	/^hstrerror(int err)$/;"	f
htype	nfs/bootp_subr.c	/^  u_int8_t htype;$/;"	m	struct:bootp_packet	file:
htype	rtems/rtems_dhcp.c	/^  u_int8_t       htype;$/;"	m	struct:dhcp_packet	file:
humanname	resolv.h	/^	const char *	humanname; \/*%< Its fun name, like "mail exchanger" *\/$/;"	m	struct:res_sym
hyphenchar	libc/res_comp.c	138;"	d	file:
hz	rtems/rtems_bsdnet_internal.h	67;"	d
hzto	rtems/rtems_glue.c	/^hzto(struct timeval *tv)$/;"	f
i_ia	netinet/in_var.h	/^	struct in_ifaddr *i_ia;$/;"	m	struct:in_multistep	typeref:struct:in_multistep::in_ifaddr
i_inm	netinet/in_var.h	/^	struct in_multi *i_inm;$/;"	m	struct:in_multistep	typeref:struct:in_multistep::in_multi
ia	netinet/in.c	589;"	d	file:
ia	netinet/in.c	606;"	d	file:
ia_addr	netinet/in_var.h	/^	struct	sockaddr_in ia_addr;	\/* reserve space for interface name *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::sockaddr_in
ia_broadaddr	netinet/in_var.h	63;"	d
ia_dstaddr	netinet/in_var.h	/^	struct	sockaddr_in ia_dstaddr; \/* reserve space for broadcast addr *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::sockaddr_in
ia_flags	netinet/in_var.h	53;"	d
ia_ifa	netinet/in_var.h	/^	struct	ifaddr ia_ifa;		\/* protocol-independent info *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::ifaddr
ia_ifp	netinet/in_var.h	52;"	d
ia_multiaddrs	netinet/in_var.h	/^	LIST_HEAD(in_multihead, in_multi) ia_multiaddrs;$/;"	m	struct:in_ifaddr
ia_net	netinet/in_var.h	/^	u_long	ia_net;			\/* network number of interface *\/$/;"	m	struct:in_ifaddr
ia_netbroadcast	netinet/in_var.h	/^	struct	in_addr ia_netbroadcast; \/* to recognize net broadcasts *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::in_addr
ia_netmask	netinet/in_var.h	/^	u_long	ia_netmask;		\/* mask of net part *\/$/;"	m	struct:in_ifaddr
ia_next	netinet/in_var.h	/^	struct	in_ifaddr *ia_next;	\/* next in list of internet addresses *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::in_ifaddr
ia_sockmask	netinet/in_var.h	/^	struct	sockaddr_in ia_sockmask; \/* reserve space for general netmask *\/$/;"	m	struct:in_ifaddr	typeref:struct:in_ifaddr::sockaddr_in
ia_subnet	netinet/in_var.h	/^	u_long	ia_subnet;		\/* subnet number, including net *\/$/;"	m	struct:in_ifaddr
ia_subnetmask	netinet/in_var.h	/^	u_long	ia_subnetmask;		\/* mask of subnet part *\/$/;"	m	struct:in_ifaddr
ibytes	netinet/ip_mroute.h	/^    u_long ibytes;		\/* Input byte count on vif		*\/$/;"	m	struct:sioc_vif_req
icd_id	netinet/ip_icmp.h	/^			uint16_t	icd_id;	\/* network format *\/$/;"	m	struct:icmp::__anon4::ih_idseq
icd_seq	netinet/ip_icmp.h	/^			uint16_t	icd_seq; \/* network format *\/$/;"	m	struct:icmp::__anon4::ih_idseq
icmp	netinet/ip_icmp.h	/^struct icmp {$/;"	s
icmp_cksum	netinet/ip_icmp.h	/^	u_short	icmp_cksum;		\/* ones complement cksum of struct *\/$/;"	m	struct:icmp
icmp_code	netinet/ip_icmp.h	/^	u_char	icmp_code;		\/* type sub code *\/$/;"	m	struct:icmp
icmp_data	netinet/ip_icmp.h	115;"	d
icmp_dun	netinet/ip_icmp.h	/^	} icmp_dun;$/;"	m	struct:icmp	typeref:union:icmp::__anon5
icmp_error	netinet/ip_icmp.c	/^icmp_error(struct mbuf *n, int type, int code, n_long dest,$/;"	f
icmp_gwaddr	netinet/ip_icmp.h	82;"	d
icmp_hun	netinet/ip_icmp.h	/^	} icmp_hun;$/;"	m	struct:icmp	typeref:union:icmp::__anon4
icmp_id	netinet/ip_icmp.h	83;"	d
icmp_input	netinet/ip_icmp.c	/^icmp_input(struct mbuf *m, int off)$/;"	f
icmp_ip	netinet/ip_icmp.h	112;"	d
icmp_lifetime	netinet/ip_icmp.h	90;"	d
icmp_mask	netinet/ip_icmp.h	114;"	d
icmp_nextmtu	netinet/ip_icmp.h	87;"	d
icmp_num_addrs	netinet/ip_icmp.h	88;"	d
icmp_otime	netinet/ip_icmp.h	109;"	d
icmp_pmvoid	netinet/ip_icmp.h	86;"	d
icmp_pptr	netinet/ip_icmp.h	81;"	d
icmp_ra_addr	netinet/ip_icmp.h	/^struct icmp_ra_addr {$/;"	s
icmp_radv	netinet/ip_icmp.h	113;"	d
icmp_reflect	netinet/ip_icmp.c	/^icmp_reflect(struct mbuf *m)$/;"	f	file:
icmp_rtime	netinet/ip_icmp.h	110;"	d
icmp_send	netinet/ip_icmp.c	/^icmp_send(struct mbuf *m, struct mbuf *opts)$/;"	f	file:
icmp_seq	netinet/ip_icmp.h	84;"	d
icmp_ttime	netinet/ip_icmp.h	111;"	d
icmp_type	netinet/ip_icmp.h	/^	u_char	icmp_type;		\/* type of message, see below *\/$/;"	m	struct:icmp
icmp_void	netinet/ip_icmp.h	85;"	d
icmp_wpa	netinet/ip_icmp.h	89;"	d
icmpallecho	netinet/ip_icmp.c	/^static int  icmpallecho = 1;$/;"	v	file:
icmpbmcastecho	netinet/ip_icmp.c	/^static int	icmpbmcastecho = 1;$/;"	v	file:
icmpdst	netinet/ip_icmp.c	/^static struct sockaddr_in icmpdst = { sizeof (struct sockaddr_in), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
icmpgw	netinet/ip_icmp.c	/^static struct sockaddr_in icmpgw = { sizeof (struct sockaddr_in), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
icmplenPanicAvoided	netinet/ip_icmp.c	/^unsigned int icmplenPanicAvoided;$/;"	v
icmpmaskrepl	netinet/ip_icmp.c	/^static int	icmpmaskrepl = 0;$/;"	v	file:
icmpprintfs	netinet/ip_icmp.c	/^int	icmpprintfs = 0;$/;"	v
icmpsrc	netinet/ip_icmp.c	/^static struct sockaddr_in icmpsrc = { sizeof (struct sockaddr_in), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
icmpstat	netinet/icmp_var.h	/^struct	icmpstat {$/;"	s
icmpstat	netinet/ip_icmp.c	/^       struct	icmpstat icmpstat;$/;"	v	typeref:struct:icmpstat
icmptype_match	netinet/ip_fw.c	/^icmptype_match(struct icmp *icmp, struct ip_fw *f)$/;"	f	file:
icount	netinet/ip_mroute.h	/^    u_long icount;		\/* Input packet count on vif		*\/$/;"	m	struct:sioc_vif_req
icps_allecho	netinet/icmp_var.h	/^        u_long  icps_allecho;           \/* all echo requests dropped *\/$/;"	m	struct:icmpstat
icps_badcode	netinet/icmp_var.h	/^ 	u_long	icps_badcode;		\/* icmp_code out of range *\/$/;"	m	struct:icmpstat
icps_badlen	netinet/icmp_var.h	/^	u_long	icps_badlen;		\/* calculated bound mismatch *\/$/;"	m	struct:icmpstat
icps_bmcastecho	netinet/icmp_var.h	/^	u_long	icps_bmcastecho; 	\/* b\/mcast echo requests dropped *\/$/;"	m	struct:icmpstat
icps_bmcasttstamp	netinet/icmp_var.h	/^	u_long	icps_bmcasttstamp; 	\/* b\/mcast tstamp requests dropped *\/$/;"	m	struct:icmpstat
icps_checksum	netinet/icmp_var.h	/^	u_long	icps_checksum;		\/* bad checksum *\/$/;"	m	struct:icmpstat
icps_error	netinet/icmp_var.h	/^	u_long	icps_error;		\/* # of calls to icmp_error *\/$/;"	m	struct:icmpstat
icps_inhist	netinet/icmp_var.h	/^	u_long	icps_inhist[ICMP_MAXTYPE + 1];$/;"	m	struct:icmpstat
icps_oldicmp	netinet/icmp_var.h	/^	u_long	icps_oldicmp;		\/* no error 'cuz old was icmp *\/$/;"	m	struct:icmpstat
icps_oldshort	netinet/icmp_var.h	/^	u_long	icps_oldshort;		\/* no error 'cuz old ip too short *\/$/;"	m	struct:icmpstat
icps_outhist	netinet/icmp_var.h	/^	u_long	icps_outhist[ICMP_MAXTYPE + 1];$/;"	m	struct:icmpstat
icps_reflect	netinet/icmp_var.h	/^	u_long	icps_reflect;		\/* number of responses *\/$/;"	m	struct:icmpstat
icps_tooshort	netinet/icmp_var.h	/^	u_long	icps_tooshort;		\/* packet < ICMP_MINLEN *\/$/;"	m	struct:icmpstat
id	arpa/nameser_compat.h	/^	unsigned	id :16;		\/* query identification number *\/$/;"	m	struct:__anon47
id	resolv.h	/^	u_short	id;			\/*%< current message id *\/$/;"	m	struct:__res_state
id_data	netinet/ip_icmp.h	/^		char	id_data[1];$/;"	m	union:icmp::__anon5
id_ip	netinet/ip_icmp.h	/^		struct id_ip  {$/;"	s	union:icmp::__anon5
id_ip	netinet/ip_icmp.h	/^		} id_ip;$/;"	m	union:icmp::__anon5	typeref:struct:icmp::__anon5::id_ip
id_mask	netinet/ip_icmp.h	/^		u_int32_t id_mask;$/;"	m	union:icmp::__anon5
id_radv	netinet/ip_icmp.h	/^		struct icmp_ra_addr id_radv;$/;"	m	union:icmp::__anon5	typeref:struct:icmp::__anon5::icmp_ra_addr
id_ts	netinet/ip_icmp.h	/^		struct id_ts {			\/* ICMP Timestamp *\/$/;"	s	union:icmp::__anon5
id_ts	netinet/ip_icmp.h	/^		} id_ts;$/;"	m	union:icmp::__anon5	typeref:struct:icmp::__anon5::id_ts
idi_ip	netinet/ip_icmp.h	/^			struct ip idi_ip;$/;"	m	struct:icmp::__anon5::id_ip	typeref:struct:icmp::__anon5::id_ip::ip
if_addrlen	net/if_var.h	147;"	d
if_addrlist	net/if_var.h	/^	struct	ifaddr *if_addrlist;	\/* linked list of addresses per if *\/$/;"	m	struct:ifnet	typeref:struct:ifnet::ifaddr
if_attach	net/if.c	/^if_attach(struct ifnet *ifp)$/;"	f
if_baudrate	net/if_var.h	150;"	d
if_bpf	net/if_var.h	/^	struct	bpf_if *if_bpf;		\/* packet filter structure *\/$/;"	m	struct:ifnet	typeref:struct:ifnet::bpf_if
if_clonereq	net/if.h	/^struct if_clonereq {$/;"	s
if_collisions	net/if_var.h	155;"	d
if_data	net/if.h	/^struct if_data {$/;"	s
if_data	net/if_var.h	/^	struct	if_data if_data;$/;"	m	struct:ifnet	typeref:struct:ifnet::if_data
if_down	net/if.c	/^if_down(struct ifnet *ifp)$/;"	f
if_flags	net/if_var.h	/^	int	if_flags;		\/* up\/down, broadcast, etc. *\/$/;"	m	struct:ifnet
if_freenameindex	libc/if_nameindex.c	/^if_freenameindex(struct if_nameindex *ptr)$/;"	f
if_hdrlen	net/if_var.h	148;"	d
if_ibytes	net/if_var.h	156;"	d
if_ierrors	net/if_var.h	152;"	d
if_imcasts	net/if_var.h	158;"	d
if_index	net/if.c	/^int if_index = 0;$/;"	v
if_index	net/if.h	/^    unsigned int    if_index;   \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex
if_index	net/if_var.h	/^	u_short	if_index;		\/* numeric abbreviation for this if  *\/$/;"	m	struct:ifnet
if_indextoname	libc/if_indextoname.c	/^if_indextoname(unsigned int ifindex, char *ifname)$/;"	f
if_init	net/if_var.h	/^	void	(*if_init)		\/* Init routine *\/$/;"	m	struct:ifnet
if_init_f_t	net/if_var.h	/^typedef void if_init_f_t(void *);$/;"	t
if_ioctl	net/if_var.h	/^	int	(*if_ioctl)		\/* ioctl routine *\/$/;"	m	struct:ifnet
if_ipackets	net/if_var.h	151;"	d
if_iqdrops	net/if_var.h	160;"	d
if_lastchange	net/if_var.h	162;"	d
if_linkmib	net/if_var.h	/^	void	*if_linkmib;		\/* link-type-specific MIB data *\/$/;"	m	struct:ifnet
if_linkmiblen	net/if_var.h	/^	size_t	if_linkmiblen;		\/* length of above data *\/$/;"	m	struct:ifnet
if_metric	net/if_var.h	149;"	d
if_msghdr	net/if.h	/^struct if_msghdr {$/;"	s
if_mtu	net/if_var.h	144;"	d
if_name	net/if.h	/^    char        *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex
if_name	net/if_var.h	/^	char	*if_name;		\/* name, e.g. ``en'' or ``lo'' *\/$/;"	m	struct:ifnet
if_nameindex	libc/if_nameindex.c	/^if_nameindex(void)$/;"	f
if_nameindex	net/if.h	/^struct if_nameindex {$/;"	s
if_next	net/if_var.h	/^	struct	ifnet *if_next;		\/* all struct ifnets are chained *\/$/;"	m	struct:ifnet	typeref:struct:ifnet::ifnet
if_noproto	net/if_var.h	161;"	d
if_obytes	net/if_var.h	157;"	d
if_oerrors	net/if_var.h	154;"	d
if_omcasts	net/if_var.h	159;"	d
if_opackets	net/if_var.h	153;"	d
if_output	net/if_var.h	/^	int	(*if_output)		\/* output routine (enqueue) *\/$/;"	m	struct:ifnet
if_pcount	net/if_var.h	/^        int	if_pcount;		\/* number of promiscuous listeners *\/$/;"	m	struct:ifnet
if_physical	net/if_var.h	146;"	d
if_poll_intren	net/if_var.h	/^	void	(*if_poll_intren)	\/* polled interrupt reenable routine *\/$/;"	m	struct:ifnet
if_poll_recv	net/if_var.h	/^	int	(*if_poll_recv)		\/* polled receive routine *\/$/;"	m	struct:ifnet
if_poll_slowinput	net/if_var.h	/^	void	(*if_poll_slowinput)	\/* input routine for slow devices *\/$/;"	m	struct:ifnet
if_poll_slowq	net/if_var.h	/^	struct	ifqueue *if_poll_slowq;	\/* input queue for slow devices *\/$/;"	m	struct:ifnet	typeref:struct:ifnet::ifqueue
if_poll_xmit	net/if_var.h	/^	int	(*if_poll_xmit)		\/* polled transmit routine *\/$/;"	m	struct:ifnet
if_qflush	net/if.c	/^if_qflush(struct ifqueue *ifq)$/;"	f	file:
if_rawoutput	net/if_var.h	165;"	d
if_recvquota	net/if_var.h	163;"	d
if_slowtimo	net/if.c	/^if_slowtimo(void *arg)$/;"	f	file:
if_snd	net/if_var.h	/^	struct	ifqueue if_snd;		\/* output queue *\/$/;"	m	struct:ifnet	typeref:struct:ifnet::ifqueue
if_softc	net/if_var.h	/^	void	*if_softc;		\/* pointer to driver state *\/$/;"	m	struct:ifnet
if_start	net/if_var.h	/^	void	(*if_start)		\/* initiate output routine *\/$/;"	m	struct:ifnet
if_tap	net/if_var.h	/^	int	(*if_tap)		\/* Packet filter routine *\/$/;"	m	struct:ifnet
if_timer	net/if_var.h	/^	short	if_timer;		\/* time 'til if_watchdog called *\/$/;"	m	struct:ifnet
if_type	net/if_var.h	145;"	d
if_unit	net/if_var.h	/^	short	if_unit;		\/* sub-unit for lower level driver *\/$/;"	m	struct:ifnet
if_up	net/if.c	/^if_up(struct ifnet *ifp)$/;"	f
if_watchdog	net/if_var.h	/^	void	(*if_watchdog)		\/* timer routine *\/$/;"	m	struct:ifnet
if_xmitquota	net/if_var.h	164;"	d
ifa_addr	ifaddrs.h	/^	struct sockaddr	*ifa_addr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_addr	net/if_var.h	/^	struct	sockaddr *ifa_addr;	\/* address of interface *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::sockaddr
ifa_broadaddr	ifaddrs.h	46;"	d
ifa_broadaddr	net/if_var.h	213;"	d
ifa_claim_addr	net/if_var.h	/^	int (*ifa_claim_addr)		\/* check if an addr goes to this if *\/$/;"	m	struct:ifaddr
ifa_data	ifaddrs.h	/^	void		*ifa_data;$/;"	m	struct:ifaddrs
ifa_dstaddr	ifaddrs.h	/^	struct sockaddr	*ifa_dstaddr;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_dstaddr	net/if_var.h	/^	struct	sockaddr *ifa_dstaddr;	\/* other end of p-to-p link *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::sockaddr
ifa_flags	ifaddrs.h	/^	u_int		 ifa_flags;$/;"	m	struct:ifaddrs
ifa_flags	net/if_var.h	/^	u_short	ifa_flags;		\/* mostly rt_flags for cloning *\/$/;"	m	struct:ifaddr
ifa_ifp	net/if_var.h	/^	struct	ifnet *ifa_ifp;		\/* back-pointer to interface *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::ifnet
ifa_ifwithaddr	net/if.c	/^ifa_ifwithaddr(struct sockaddr *addr)$/;"	f
ifa_ifwithdstaddr	net/if.c	/^ifa_ifwithdstaddr(struct sockaddr *addr)$/;"	f
ifa_ifwithnet	net/if.c	/^ifa_ifwithnet(struct sockaddr *addr)$/;"	f
ifa_ifwithroute	net/route.c	/^ifa_ifwithroute(int flags, struct sockaddr *dst, struct sockaddr *gateway)$/;"	f
ifa_metric	net/if_var.h	/^	int	ifa_metric;		\/* cost of going out this interface *\/$/;"	m	struct:ifaddr
ifa_msghdr	net/if.h	/^struct ifa_msghdr {$/;"	s
ifa_name	ifaddrs.h	/^	char		*ifa_name;$/;"	m	struct:ifaddrs
ifa_netmask	ifaddrs.h	/^	struct sockaddr	*ifa_netmask;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_netmask	net/if_var.h	/^	struct	sockaddr *ifa_netmask;	\/* used to determine subnet *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::sockaddr
ifa_next	ifaddrs.h	/^	struct ifaddrs  *ifa_next;$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs
ifa_next	net/if_var.h	/^	struct	ifaddr *ifa_next;	\/* next address for interface *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::ifaddr
ifa_refcnt	net/if_var.h	/^	u_int	ifa_refcnt;		\/* references to this structure *\/$/;"	m	struct:ifaddr
ifa_rtrequest	net/if_var.h	/^	void	(*ifa_rtrequest)	\/* check or clean routes (+ or -)'d *\/$/;"	m	struct:ifaddr
iface_match	netinet/ip_fw.c	/^iface_match(struct ifnet *ifp, union ip_fw_if *ifu, int byname)$/;"	f	file:
ifaddr	net/if_var.h	/^struct ifaddr {$/;"	s
ifaddrs	ifaddrs.h	/^struct ifaddrs {$/;"	s
ifafree	net/route.c	/^ifafree(struct ifaddr *ifa)$/;"	f
ifaliasreq	net/if.h	/^struct ifaliasreq {$/;"	s
ifam_addrs	net/if.h	/^	int	ifam_addrs;	\/* like rtm_addrs *\/$/;"	m	struct:ifa_msghdr
ifam_flags	net/if.h	/^	int	ifam_flags;	\/* value of ifa_flags *\/$/;"	m	struct:ifa_msghdr
ifam_index	net/if.h	/^	u_short	ifam_index;	\/* index for associated ifp *\/$/;"	m	struct:ifa_msghdr
ifam_metric	net/if.h	/^	int	ifam_metric;	\/* value of ifa_metric *\/$/;"	m	struct:ifa_msghdr
ifam_msglen	net/if.h	/^	u_short	ifam_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:ifa_msghdr
ifam_type	net/if.h	/^	u_char	ifam_type;	\/* message type *\/$/;"	m	struct:ifa_msghdr
ifam_version	net/if.h	/^	u_char	ifam_version;	\/* future binary compatibility *\/$/;"	m	struct:ifa_msghdr
ifaof_ifpforaddr	net/if.c	/^ifaof_ifpforaddr(struct sockaddr *addr, struct ifnet *ifp)$/;"	f
ifatoia	netinet/in_pcb.c	299;"	d	file:
ifatoia	netinet/ip_output.c	155;"	d	file:
ifc_buf	net/if.h	275;"	d
ifc_ifcu	net/if.h	/^	} ifc_ifcu;$/;"	m	struct:ifconf	typeref:union:ifconf::__anon34
ifc_len	net/if.h	/^	int	ifc_len;		\/* size of associated buffer *\/$/;"	m	struct:ifconf
ifc_req	net/if.h	276;"	d
ifconf	net/if.c	/^ifconf(u_long cmd, caddr_t data)$/;"	f	file:
ifconf	net/if.h	/^struct	ifconf {$/;"	s
ifconfig	rtems/rtems_bsdnet.h	/^	struct rtems_bsdnet_ifconfig *ifconfig;$/;"	m	struct:rtems_bsdnet_config	typeref:struct:rtems_bsdnet_config::rtems_bsdnet_ifconfig
ifcr_buffer	net/if.h	/^	char	*ifcr_buffer;		\/* buffer for cloner names *\/$/;"	m	struct:if_clonereq
ifcr_count	net/if.h	/^	int	ifcr_count;		\/* room for this many in user buffer *\/$/;"	m	struct:if_clonereq
ifcr_total	net/if.h	/^	int	ifcr_total;		\/* total cloners (out) *\/$/;"	m	struct:if_clonereq
ifcu_buf	net/if.h	/^		caddr_t	ifcu_buf;$/;"	m	union:ifconf::__anon34
ifcu_req	net/if.h	/^		struct	ifreq *ifcu_req;$/;"	m	union:ifconf::__anon34	typeref:struct:ifconf::__anon34::ifreq
ifi_addrlen	net/if.h	/^	u_char	ifi_addrlen;		\/* media address length *\/$/;"	m	struct:if_data
ifi_baudrate	net/if.h	/^	u_long	ifi_baudrate;		\/* linespeed *\/$/;"	m	struct:if_data
ifi_collisions	net/if.h	/^	u_long	ifi_collisions;		\/* collisions on csma interfaces *\/$/;"	m	struct:if_data
ifi_hdrlen	net/if.h	/^	u_char	ifi_hdrlen;		\/* media header length *\/$/;"	m	struct:if_data
ifi_ibytes	net/if.h	/^	u_long	ifi_ibytes;		\/* total number of octets received *\/$/;"	m	struct:if_data
ifi_ierrors	net/if.h	/^	u_long	ifi_ierrors;		\/* input errors on interface *\/$/;"	m	struct:if_data
ifi_imcasts	net/if.h	/^	u_long	ifi_imcasts;		\/* packets received via multicast *\/$/;"	m	struct:if_data
ifi_ipackets	net/if.h	/^	u_long	ifi_ipackets;		\/* packets received on interface *\/$/;"	m	struct:if_data
ifi_iqdrops	net/if.h	/^	u_long	ifi_iqdrops;		\/* dropped on input, this interface *\/$/;"	m	struct:if_data
ifi_lastchange	net/if.h	/^	struct	timeval ifi_lastchange;	\/* time of last administrative change *\/$/;"	m	struct:if_data	typeref:struct:if_data::timeval
ifi_metric	net/if.h	/^	u_long	ifi_metric;		\/* routing metric (external only) *\/$/;"	m	struct:if_data
ifi_mtu	net/if.h	/^	u_long	ifi_mtu;		\/* maximum transmission unit *\/$/;"	m	struct:if_data
ifi_noproto	net/if.h	/^	u_long	ifi_noproto;		\/* destined for unsupported protocol *\/$/;"	m	struct:if_data
ifi_obytes	net/if.h	/^	u_long	ifi_obytes;		\/* total number of octets sent *\/$/;"	m	struct:if_data
ifi_oerrors	net/if.h	/^	u_long	ifi_oerrors;		\/* output errors on interface *\/$/;"	m	struct:if_data
ifi_omcasts	net/if.h	/^	u_long	ifi_omcasts;		\/* packets sent via multicast *\/$/;"	m	struct:if_data
ifi_opackets	net/if.h	/^	u_long	ifi_opackets;		\/* packets sent on interface *\/$/;"	m	struct:if_data
ifi_physical	net/if.h	/^	u_char	ifi_physical;		\/* e.g., AUI, Thinnet, 10base-T, etc *\/$/;"	m	struct:if_data
ifi_recvquota	net/if.h	/^	u_char	ifi_recvquota;		\/* polling quota for receive intrs *\/$/;"	m	struct:if_data
ifi_recvtiming	net/if.h	/^	u_long	ifi_recvtiming;		\/* usec spent receiving when timing *\/$/;"	m	struct:if_data
ifi_type	net/if.h	/^	u_char	ifi_type;		\/* ethernet, tokenring, etc *\/$/;"	m	struct:if_data
ifi_xmitquota	net/if.h	/^	u_char	ifi_xmitquota;		\/* polling quota for xmit intrs *\/$/;"	m	struct:if_data
ifi_xmittiming	net/if.h	/^	u_long	ifi_xmittiming;		\/* usec spent xmitting when timing *\/$/;"	m	struct:if_data
ifinit	net/if.c	/^ifinit(void *dummy)$/;"	f
ifioctl	net/if.c	/^ifioctl(struct socket *so, u_long cmd, caddr_t data, struct proc *p)$/;"	f
ifm_active	net/if.h	/^	int	ifm_active;		\/* active options *\/$/;"	m	struct:ifmediareq
ifm_addrs	net/if.h	/^	int	ifm_addrs;	\/* like rtm_addrs *\/$/;"	m	struct:if_msghdr
ifm_aux	net/if_media.h	/^	void	*ifm_aux;	\/* for driver-specific use *\/$/;"	m	struct:ifmedia_entry
ifm_change	net/if_media.h	/^	ifm_change_cb_t	ifm_change;	\/* media change driver callback *\/$/;"	m	struct:ifmedia
ifm_change_cb_t	net/if_media.h	/^typedef	int (*ifm_change_cb_t)(struct ifnet *ifp);$/;"	t
ifm_count	net/if.h	/^	int	ifm_count;		\/* # entries in ifm_ulist array *\/$/;"	m	struct:ifmediareq
ifm_cur	net/if_media.h	/^	struct ifmedia_entry *ifm_cur;	\/* currently selected media *\/$/;"	m	struct:ifmedia	typeref:struct:ifmedia::ifmedia_entry
ifm_current	net/if.h	/^	int	ifm_current;		\/* current media options *\/$/;"	m	struct:ifmediareq
ifm_data	net/if.h	/^	struct	if_data ifm_data;\/* statistics and other data about if *\/$/;"	m	struct:if_msghdr	typeref:struct:if_msghdr::if_data
ifm_data	net/if_media.h	/^	int	ifm_data;	\/* for driver-specific use *\/$/;"	m	struct:ifmedia_entry
ifm_flags	net/if.h	/^	int	ifm_flags;	\/* value of if_flags *\/$/;"	m	struct:if_msghdr
ifm_index	net/if.h	/^	u_short	ifm_index;	\/* index for associated ifp *\/$/;"	m	struct:if_msghdr
ifm_list	net/if_media.h	/^	LIST_ENTRY(ifmedia_entry) ifm_list;$/;"	m	struct:ifmedia_entry
ifm_list	net/if_media.h	/^	LIST_HEAD(, ifmedia_entry) ifm_list; \/* list of all supported media *\/$/;"	m	struct:ifmedia
ifm_mask	net/if.h	/^	int	ifm_mask;		\/* don't care mask *\/$/;"	m	struct:ifmediareq
ifm_mask	net/if_media.h	/^	int	ifm_mask;	\/* mask of changes we don't care about *\/$/;"	m	struct:ifmedia
ifm_media	net/if_media.h	/^	int	ifm_media;	\/* current user-set media word *\/$/;"	m	struct:ifmedia
ifm_media	net/if_media.h	/^	int	ifm_media;	\/* description of this media attachment *\/$/;"	m	struct:ifmedia_entry
ifm_msglen	net/if.h	/^	u_short	ifm_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:if_msghdr
ifm_name	net/if.h	/^	char	ifm_name[IFNAMSIZ];	\/* if name, e.g. "en0" *\/$/;"	m	struct:ifmediareq
ifm_stat_cb_t	net/if_media.h	/^typedef	void (*ifm_stat_cb_t)(struct ifnet *ifp, struct ifmediareq *req);$/;"	t
ifm_status	net/if.h	/^	int	ifm_status;		\/* media status *\/$/;"	m	struct:ifmediareq
ifm_status	net/if_media.h	/^	ifm_stat_cb_t	ifm_status;	\/* media status driver callback *\/$/;"	m	struct:ifmedia
ifm_type	net/if.h	/^	u_char	ifm_type;	\/* message type *\/$/;"	m	struct:if_msghdr
ifm_ulist	net/if.h	/^	int	*ifm_ulist;		\/* media words *\/$/;"	m	struct:ifmediareq
ifm_version	net/if.h	/^	u_char	ifm_version;	\/* future binary compatibility *\/$/;"	m	struct:if_msghdr
ifmedia	net/if_media.h	/^struct ifmedia {$/;"	s
ifmedia_description	net/if_media.h	/^struct ifmedia_description {$/;"	s
ifmedia_entry	net/if_media.h	/^struct ifmedia_entry {$/;"	s
ifmediareq	net/if.h	/^struct ifmediareq {$/;"	s
ifmt_string	net/if_media.h	/^	const char *ifmt_string;	\/* description *\/$/;"	m	struct:ifmedia_description
ifmt_word	net/if_media.h	/^	int	ifmt_word;		\/* word value; may be masked *\/$/;"	m	struct:ifmedia_description
ifname	rtems/rtems_showroute.c	/^	char		ifname[16];$/;"	m	struct:rinfo	file:
ifnet	net/if.c	/^struct	ifnet *ifnet;$/;"	v	typeref:struct:ifnet
ifnet	net/if_var.h	/^struct ifnet {$/;"	s
ifnet_addrs	net/if.c	/^struct ifaddr **ifnet_addrs;$/;"	v	typeref:struct:ifaddr
ifp	netinet/ip_mroute.h	/^    struct ifnet	*ifp;		\/* Interface pkt came in on	    *\/$/;"	m	struct:rtdetq	typeref:struct:rtdetq::ifnet
ifpppcstatsreq	net/if_ppp.h	/^struct ifpppcstatsreq {$/;"	s
ifpppstatsreq	net/if_ppp.h	/^struct ifpppstatsreq {$/;"	s
ifpromisc	net/if.c	/^ifpromisc(struct ifnet *ifp, int pswitch)$/;"	f
ifq_drops	net/if_var.h	/^	int	ifq_drops;$/;"	m	struct:ifqueue
ifq_head	net/if_var.h	/^	struct	mbuf *ifq_head;$/;"	m	struct:ifqueue	typeref:struct:ifqueue::mbuf
ifq_len	net/if_var.h	/^	int	ifq_len;$/;"	m	struct:ifqueue
ifq_maxlen	net/if_var.h	/^	int	ifq_maxlen;$/;"	m	struct:ifqueue
ifq_tail	net/if_var.h	/^	struct	mbuf *ifq_tail;$/;"	m	struct:ifqueue	typeref:struct:ifqueue::mbuf
ifqueue	net/if_var.h	/^struct	ifqueue {$/;"	s
ifr_addr	net/if.h	220;"	d
ifr_broadaddr	net/if.h	222;"	d
ifr_data	net/if.h	229;"	d
ifr_dstaddr	net/if.h	221;"	d
ifr_flags	net/if.h	223;"	d
ifr_flagshigh	net/if.h	224;"	d
ifr_ifru	net/if.h	/^	} ifr_ifru;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon33
ifr_media	net/if.h	228;"	d
ifr_metric	net/if.h	225;"	d
ifr_mtu	net/if.h	226;"	d
ifr_mtu	net/if_ppp.h	138;"	d
ifr_name	net/if.h	/^	char	ifr_name[IFNAMSIZ];		\/* if name, e.g. "en0" *\/$/;"	m	struct:ifreq
ifr_name	net/if_ppp.h	/^    char ifr_name[IFNAMSIZ];$/;"	m	struct:ifpppcstatsreq
ifr_name	net/if_ppp.h	/^    char ifr_name[IFNAMSIZ];$/;"	m	struct:ifpppstatsreq
ifr_phys	net/if.h	227;"	d
ifr_tap	net/if.h	230;"	d
ifra_addr	net/if.h	/^	struct	sockaddr ifra_addr;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_addr	netinet/in_var.h	/^	struct	sockaddr_in ifra_addr;$/;"	m	struct:in_aliasreq	typeref:struct:in_aliasreq::sockaddr_in
ifra_broadaddr	net/if.h	/^	struct	sockaddr ifra_broadaddr;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_broadaddr	netinet/in_var.h	/^	struct	sockaddr_in ifra_broadaddr;$/;"	m	struct:in_aliasreq	typeref:struct:in_aliasreq::sockaddr_in
ifra_dstaddr	netinet/in_var.h	73;"	d
ifra_mask	net/if.h	/^	struct	sockaddr ifra_mask;$/;"	m	struct:ifaliasreq	typeref:struct:ifaliasreq::sockaddr
ifra_mask	netinet/in_var.h	/^	struct	sockaddr_in ifra_mask;$/;"	m	struct:in_aliasreq	typeref:struct:in_aliasreq::sockaddr_in
ifra_name	net/if.h	/^	char	ifra_name[IFNAMSIZ];		\/* if name, e.g. "en0" *\/$/;"	m	struct:ifaliasreq
ifra_name	netinet/in_var.h	/^	char	ifra_name[IFNAMSIZ];		\/* if name, e.g. "en0" *\/$/;"	m	struct:in_aliasreq
ifreq	net/if.h	/^struct	ifreq {$/;"	s
ifru_addr	net/if.h	/^		struct	sockaddr ifru_addr;$/;"	m	union:ifreq::__anon33	typeref:struct:ifreq::__anon33::sockaddr
ifru_broadaddr	net/if.h	/^		struct	sockaddr ifru_broadaddr;$/;"	m	union:ifreq::__anon33	typeref:struct:ifreq::__anon33::sockaddr
ifru_data	net/if.h	/^		caddr_t	ifru_data;$/;"	m	union:ifreq::__anon33
ifru_dstaddr	net/if.h	/^		struct	sockaddr ifru_dstaddr;$/;"	m	union:ifreq::__anon33	typeref:struct:ifreq::__anon33::sockaddr
ifru_flags	net/if.h	/^		short	ifru_flags[2];$/;"	m	union:ifreq::__anon33
ifru_media	net/if.h	/^		int	ifru_media;$/;"	m	union:ifreq::__anon33
ifru_metric	net/if.h	/^		int32_t	ifru_metric;$/;"	m	union:ifreq::__anon33
ifru_mtu	net/if.h	/^		int32_t	ifru_mtu;$/;"	m	union:ifreq::__anon33
ifru_phys	net/if.h	/^		int	ifru_phys;$/;"	m	union:ifreq::__anon33
ifru_tap	net/if.h	/^		int	(*ifru_tap)(struct ifnet *, struct ether_header *, struct mbuf *);$/;"	m	union:ifreq::__anon33
ifs_name	net/if.h	/^	char	ifs_name[IFNAMSIZ];	\/* if name, e.g. "en0" *\/$/;"	m	struct:ifstat
ifstat	net/if.h	/^struct ifstat {$/;"	s
ifunit	net/if.c	/^ifunit(char *name)$/;"	f
ifunit	rtems/rtems_showroute.c	/^	short		ifunit;$/;"	m	struct:rinfo	file:
igmp	netinet/igmp.h	/^struct igmp {$/;"	s
igmp_all_hosts_group	netinet/igmp.c	/^static u_long igmp_all_hosts_group;$/;"	v	file:
igmp_all_rtrs_group	netinet/igmp.c	/^static u_long igmp_all_rtrs_group;$/;"	v	file:
igmp_cksum	netinet/igmp.h	/^	u_short		igmp_cksum;	\/* IP-style checksum               *\/$/;"	m	struct:igmp
igmp_code	netinet/igmp.h	/^	u_char		igmp_code;	\/* subtype for routing msgs        *\/$/;"	m	struct:igmp
igmp_fasttimo	netinet/igmp.c	/^igmp_fasttimo(void)$/;"	f
igmp_group	netinet/igmp.h	/^	struct in_addr	igmp_group;	\/* group address being reported    *\/$/;"	m	struct:igmp	typeref:struct:igmp::in_addr
igmp_init	netinet/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	netinet/igmp.c	/^igmp_input(struct mbuf *m, int iphlen)$/;"	f
igmp_joingroup	netinet/igmp.c	/^igmp_joingroup(struct in_multi *inm)$/;"	f
igmp_leavegroup	netinet/igmp.c	/^igmp_leavegroup(struct in_multi *inm)$/;"	f
igmp_sendpkt	netinet/igmp.c	/^igmp_sendpkt(struct in_multi *inm, int type, unsigned long addr)$/;"	f	file:
igmp_slowtimo	netinet/igmp.c	/^igmp_slowtimo(void)$/;"	f
igmp_timers_are_running	netinet/igmp.c	/^static int igmp_timers_are_running;$/;"	v	file:
igmp_type	netinet/igmp.h	/^	u_char		igmp_type;	\/* version & type of IGMP message  *\/$/;"	m	struct:igmp
igmpmsg	netinet/ip_mroute.h	/^struct igmpmsg {$/;"	s
igmprt	netinet/igmp.c	/^static struct route igmprt;$/;"	v	typeref:struct:route	file:
igmpstat	netinet/igmp.c	/^static struct igmpstat igmpstat;$/;"	v	typeref:struct:igmpstat	file:
igmpstat	netinet/igmp_var.h	/^struct igmpstat {$/;"	s
ignore_broadcast	rtems/rtems_bsdnet.h	/^	int		ignore_broadcast;$/;"	m	struct:rtems_bsdnet_ifconfig
igps_rcv_badqueries	netinet/igmp_var.h	/^	u_int	igps_rcv_badqueries;	\/* received invalid queries *\/$/;"	m	struct:igmpstat
igps_rcv_badreports	netinet/igmp_var.h	/^	u_int	igps_rcv_badreports;	\/* received invalid reports *\/$/;"	m	struct:igmpstat
igps_rcv_badsum	netinet/igmp_var.h	/^	u_int	igps_rcv_badsum;	\/* received with bad checksum *\/$/;"	m	struct:igmpstat
igps_rcv_ourreports	netinet/igmp_var.h	/^	u_int	igps_rcv_ourreports;	\/* received reports for our groups *\/$/;"	m	struct:igmpstat
igps_rcv_queries	netinet/igmp_var.h	/^	u_int	igps_rcv_queries;	\/* received membership queries *\/$/;"	m	struct:igmpstat
igps_rcv_reports	netinet/igmp_var.h	/^	u_int	igps_rcv_reports;	\/* received membership reports *\/$/;"	m	struct:igmpstat
igps_rcv_tooshort	netinet/igmp_var.h	/^	u_int	igps_rcv_tooshort;	\/* received with too few bytes *\/$/;"	m	struct:igmpstat
igps_rcv_total	netinet/igmp_var.h	/^	u_int	igps_rcv_total;		\/* total IGMP messages received *\/$/;"	m	struct:igmpstat
igps_snd_reports	netinet/igmp_var.h	/^	u_int	igps_snd_reports;	\/* sent membership reports *\/$/;"	m	struct:igmpstat
ih_dst	netinet/ip_var.h	/^	struct	in_addr ih_dst;		\/* destination internet address *\/$/;"	m	struct:ipovly	typeref:struct:ipovly::in_addr
ih_gwaddr	netinet/ip_icmp.h	/^		struct in_addr ih_gwaddr;	\/* ICMP_REDIRECT *\/$/;"	m	union:icmp::__anon4	typeref:struct:icmp::__anon4::in_addr
ih_idseq	netinet/ip_icmp.h	/^		struct ih_idseq {$/;"	s	union:icmp::__anon4
ih_idseq	netinet/ip_icmp.h	/^		} ih_idseq;$/;"	m	union:icmp::__anon4	typeref:struct:icmp::__anon4::ih_idseq
ih_len	netinet/ip_var.h	/^	u_short	ih_len;			\/* protocol length *\/$/;"	m	struct:ipovly
ih_next	netinet/ip_var.h	/^	caddr_t	ih_next;$/;"	m	struct:ipovly
ih_pmtu	netinet/ip_icmp.h	/^		struct ih_pmtu {$/;"	s	union:icmp::__anon4
ih_pmtu	netinet/ip_icmp.h	/^		} ih_pmtu;$/;"	m	union:icmp::__anon4	typeref:struct:icmp::__anon4::ih_pmtu
ih_pptr	netinet/ip_icmp.h	/^		u_char ih_pptr;			\/* ICMP_PARAMPROB *\/$/;"	m	union:icmp::__anon4
ih_pr	netinet/ip_var.h	/^	u_char	ih_pr;			\/* protocol *\/$/;"	m	struct:ipovly
ih_prev	netinet/ip_var.h	/^	caddr_t ih_prev;		\/* for protocol sequence q's *\/$/;"	m	struct:ipovly
ih_rtradv	netinet/ip_icmp.h	/^		struct ih_rtradv {$/;"	s	union:icmp::__anon4
ih_rtradv	netinet/ip_icmp.h	/^		} ih_rtradv;$/;"	m	union:icmp::__anon4	typeref:struct:icmp::__anon4::ih_rtradv
ih_src	netinet/ip_var.h	/^	struct	in_addr ih_src;		\/* source internet address *\/$/;"	m	struct:ipovly	typeref:struct:ipovly::in_addr
ih_void	netinet/ip_icmp.h	/^		int ih_void;$/;"	m	union:icmp::__anon4
ih_x1	netinet/ip_var.h	/^	u_char	ih_x1;			\/* (unused) *\/$/;"	m	struct:ipovly
im_dst	netinet/ip_mroute.h	/^    struct in_addr  im_src, im_dst;$/;"	m	struct:igmpmsg	typeref:struct:igmpmsg::
im_mbz	netinet/ip_mroute.h	/^    u_char	    im_mbz;			\/* must be zero		    *\/$/;"	m	struct:igmpmsg
im_msgtype	netinet/ip_mroute.h	/^    u_char	    im_msgtype;			\/* what type of message	    *\/$/;"	m	struct:igmpmsg
im_src	netinet/ip_mroute.h	/^    struct in_addr  im_src, im_dst;$/;"	m	struct:igmpmsg	typeref:struct:igmpmsg::in_addr
im_vif	netinet/ip_mroute.h	/^    u_char	    im_vif;			\/* vif rec'd on		    *\/$/;"	m	struct:igmpmsg
imax	sys/libkern.h	/^static __inline int imax(int a, int b) { return (a > b ? a : b); }$/;"	f
imin	rtems/rtems_select.c	/^static __inline int imin(int a, int b) { return (a < b ? a : b); }$/;"	f	file:
imin	sys/libkern.h	/^static __inline int imin(int a, int b) { return (a < b ? a : b); }$/;"	f
imo_membership	netinet/ip_var.h	/^	struct	in_multi *imo_membership[IP_MAX_MEMBERSHIPS];$/;"	m	struct:ip_moptions	typeref:struct:ip_moptions::in_multi
imo_multicast_ifp	netinet/ip_var.h	/^	struct	ifnet *imo_multicast_ifp; \/* ifp for outgoing multicasts *\/$/;"	m	struct:ip_moptions	typeref:struct:ip_moptions::ifnet
imo_multicast_loop	netinet/ip_var.h	/^	u_char	imo_multicast_loop;	\/* 1 => hear sends if a member *\/$/;"	m	struct:ip_moptions
imo_multicast_ttl	netinet/ip_var.h	/^	u_char	imo_multicast_ttl;	\/* TTL for outgoing multicasts *\/$/;"	m	struct:ip_moptions
imo_multicast_vif	netinet/ip_var.h	/^	u_long	imo_multicast_vif;	\/* vif num outgoing multicasts *\/$/;"	m	struct:ip_moptions
imo_num_memberships	netinet/ip_var.h	/^	u_short	imo_num_memberships;	\/* no. memberships this socket *\/$/;"	m	struct:ip_moptions
imr_interface	netinet/in.h	/^	struct	in_addr imr_interface;	\/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	netinet/in.h	/^	struct	in_addr imr_multiaddr;	\/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in4_cksum	netinet/in_cksum_arm.h	/^in4_cksum($/;"	f
in4_cksum	netinet/in_cksum_nios2.h	/^in4_cksum ($/;"	f
in4_cksum	netinet/in_cksum_sparc.h	/^in4_cksum(struct mbuf *m, uint8_t nxt, int off, int len)$/;"	f
in_addmulti	netinet/in.c	/^in_addmulti(struct in_addr *ap, struct ifnet *ifp)$/;"	f
in_addr	arpa/inet.h	/^struct in_addr {$/;"	s
in_addr	netinet/in.h	/^struct in_addr {$/;"	s
in_addr_t	arpa/inet.h	/^typedef	uint32_t	in_addr_t;$/;"	t
in_addr_t	netinet/in.h	/^typedef uint32_t        	in_addr_t;$/;"	t
in_addroute	netinet/in_rmx.c	/^in_addroute(void *v_arg, void *n_arg, struct radix_node_head *head,$/;"	f	file:
in_aliasreq	netinet/in_var.h	/^struct	in_aliasreq {$/;"	s
in_arpinput	netinet/if_ether.c	/^in_arpinput(struct mbuf *m)$/;"	f	file:
in_broadcast	netinet/in.c	/^in_broadcast(struct in_addr in, struct ifnet *ifp)$/;"	f
in_canforward	netinet/in.c	/^in_canforward(struct in_addr in)$/;"	f
in_cksum	netinet/in_cksum.c	/^in_cksum($/;"	f
in_cksum	netinet/in_cksum_arm.h	/^in_cksum($/;"	f
in_cksum	netinet/in_cksum_i386.h	/^in_cksum($/;"	f
in_cksum	netinet/in_cksum_m68k.h	/^in_cksum( struct mbuf *m,$/;"	f
in_cksum	netinet/in_cksum_nios2.h	/^in_cksum ($/;"	f
in_cksum	netinet/in_cksum_powerpc.h	/^in_cksum($/;"	f
in_cksum	netinet/in_cksum_sparc.h	/^in_cksum(struct mbuf *m, int len)$/;"	f
in_cksum_hdr	machine/in_cksum.h	/^in_cksum_hdr(const struct ip *ip)$/;"	f
in_cksum_hdr	machine/in_cksum.h	/^static __inline u_int in_cksum_hdr ( const struct ip * pHdrIP )$/;"	f
in_cksum_hdr	rtems/rtems_glue.c	/^in_cksum_hdr (const void *ip)$/;"	f
in_cksum_internal	netinet/in_cksum_arm.h	/^in_cksum_internal(struct mbuf *m, int off, int len, u_int sum)	$/;"	f
in_cksum_internal	netinet/in_cksum_nios2.h	/^in_cksum_internal(struct mbuf *m, int off, int len, u_int sum)$/;"	f
in_cksum_internal	netinet/in_cksum_sparc.h	/^in_cksum_internal(struct mbuf *m, int off, int len, u_int sum)$/;"	f
in_cksum_update	machine/in_cksum.h	/^in_cksum_update(struct ip *ip)$/;"	f
in_cksum_update	machine/in_cksum.h	/^static __inline void in_cksum_update ( struct ip * pHdrIP )$/;"	f
in_cksum_update	machine/in_cksum.h	217;"	d
in_cksum_update	machine/in_cksum.h	286;"	d
in_clsroute	netinet/in_rmx.c	/^in_clsroute(struct radix_node *rn, struct radix_node_head *head)$/;"	f	file:
in_control	netinet/in.c	/^in_control(struct socket *so, u_long cmd, caddr_t data, struct ifnet *ifp)$/;"	f
in_delmulti	netinet/in.c	/^in_delmulti(struct in_multi *inm)$/;"	f
in_ifaddr	netinet/in_var.h	/^struct in_ifaddr {$/;"	s
in_ifaddr	netinet/ip_input.c	/^struct	in_ifaddr *in_ifaddr;			\/* first inet address *\/$/;"	v	typeref:struct:in_ifaddr
in_ifinit	netinet/in.c	/^in_ifinit(struct ifnet *ifp, struct in_ifaddr *ia, struct sockaddr_in *sin,$/;"	f	file:
in_ifscrub	netinet/in.c	/^in_ifscrub(struct ifnet *ifp, struct in_ifaddr *ia)$/;"	f	file:
in_inithead	netinet/in_rmx.c	/^in_inithead(void **head, int off)$/;"	f
in_interfaces	netinet/in.c	/^static int in_interfaces;	\/* number of external internet interfaces *\/$/;"	v	file:
in_localaddr	netinet/in.c	/^in_localaddr(struct in_addr in)$/;"	f
in_losing	netinet/in_pcb.c	/^in_losing(struct inpcb *inp)$/;"	f
in_matroute	netinet/in_rmx.c	/^in_matroute(void *v_arg, struct radix_node_head *head)$/;"	f	file:
in_multi	netinet/in_var.h	/^struct in_multi {$/;"	s
in_multistep	netinet/in_var.h	/^struct in_multistep {$/;"	s
in_pcballoc	netinet/in_pcb.c	/^in_pcballoc(struct socket *so, struct inpcbinfo *pcbinfo)$/;"	f
in_pcbbind	netinet/in_pcb.c	/^in_pcbbind(struct inpcb *inp, struct mbuf *nam)$/;"	f
in_pcbconnect	netinet/in_pcb.c	/^in_pcbconnect(struct inpcb *inp, struct mbuf *nam)$/;"	f
in_pcbdetach	netinet/in_pcb.c	/^in_pcbdetach(struct inpcb *inp)$/;"	f
in_pcbdisconnect	netinet/in_pcb.c	/^in_pcbdisconnect(struct inpcb *inp)$/;"	f
in_pcbinshash	netinet/in_pcb.c	/^in_pcbinshash(struct inpcb *inp)$/;"	f	file:
in_pcbladdr	netinet/in_pcb.c	/^in_pcbladdr(struct inpcb *inp, struct mbuf *nam, struct sockaddr_in **plocal_sin)$/;"	f
in_pcblookup	netinet/in_pcb.c	/^in_pcblookup(struct inpcbinfo *pcbinfo,$/;"	f
in_pcblookuphash	netinet/in_pcb.c	/^in_pcblookuphash(struct inpcbinfo *pcbinfo,$/;"	f
in_pcbnotify	netinet/in_pcb.c	/^in_pcbnotify(struct inpcbhead *head, struct sockaddr *dst, u_int fport_arg,$/;"	f
in_pcbrehash	netinet/in_pcb.c	/^in_pcbrehash(struct inpcb *inp)$/;"	f
in_port_t	arpa/inet.h	/^typedef	uint16_t	in_port_t;$/;"	t
in_port_t	netinet/in.h	/^typedef	uint16_t		in_port_t;$/;"	t
in_rtchange	netinet/in_pcb.c	/^in_rtchange(struct inpcb *inp, int errnum)$/;"	f	file:
in_rtqdrain	netinet/in_rmx.c	/^in_rtqdrain(void)$/;"	f
in_rtqkill	netinet/in_rmx.c	/^in_rtqkill(struct radix_node *rn, void *rock)$/;"	f	file:
in_rtqtimo	netinet/in_rmx.c	/^in_rtqtimo(void *rock)$/;"	f	file:
in_setpeeraddr	netinet/in_pcb.c	/^in_setpeeraddr(struct inpcb *inp, struct mbuf *nam)$/;"	f
in_setsockaddr	netinet/in_pcb.c	/^in_setsockaddr(struct inpcb *inp, struct mbuf *nam)$/;"	f
in_socktrim	netinet/in.c	/^in_socktrim(struct sockaddr_in *ap)$/;"	f	file:
inc_bytes	net/ppp_defs.h	/^    unsigned int inc_bytes;	\/* incompressible bytes *\/$/;"	m	struct:compstat
inc_packets	net/ppp_defs.h	/^    unsigned int inc_packets;	\/* incompressible packets *\/$/;"	m	struct:compstat
incomp	net/ppp_comp.h	/^	void	(*incomp)(void *state, PACKETPTR mp);$/;"	m	struct:compressor
index	lib/ftpfs.c	/^  size_t index;$/;"	m	struct:__anon21	file:
index	lib/ftpfs.c	/^  size_t index;$/;"	m	struct:__anon23	file:
inet	netinet/in_proto.c	/^DOMAIN_SET(inet);$/;"	v
inet_addr	arpa/inet.h	101;"	d
inet_addr	libc/inet_addr.c	/^inet_addr($/;"	f
inet_aton	arpa/inet.h	102;"	d
inet_aton	libc/inet_addr.c	/^inet_aton($/;"	f
inet_cidr_ntop	arpa/inet.h	110;"	d
inet_cidr_pton	arpa/inet.h	111;"	d
inet_lnaof	arpa/inet.h	103;"	d
inet_lnaof	libc/inet_lnaof.c	/^inet_lnaof($/;"	f
inet_makeaddr	arpa/inet.h	104;"	d
inet_makeaddr	libc/inet_makeaddr.c	/^inet_makeaddr($/;"	f
inet_net_ntop	arpa/inet.h	108;"	d
inet_net_pton	arpa/inet.h	109;"	d
inet_neta	arpa/inet.h	105;"	d
inet_netof	arpa/inet.h	106;"	d
inet_netof	libc/inet_netof.c	/^inet_netof($/;"	f
inet_network	arpa/inet.h	107;"	d
inet_network	libc/inet_network.c	/^inet_network($/;"	f
inet_nsap_addr	arpa/inet.h	116;"	d
inet_nsap_addr	libc/nsap_addr.c	/^inet_nsap_addr($/;"	f
inet_nsap_ntoa	arpa/inet.h	117;"	d
inet_nsap_ntoa	libc/nsap_addr.c	/^inet_nsap_ntoa($/;"	f
inet_ntoa	arpa/inet.h	112;"	d
inet_ntoa	libc/inet_ntoa.c	/^inet_ntoa($/;"	f
inet_ntoa_r	arpa/inet.h	113;"	d
inet_ntop	arpa/inet.h	115;"	d
inet_ntop	libc/inet_ntop.c	/^inet_ntop($/;"	f
inet_ntop4	libc/inet_ntop.c	/^inet_ntop4($/;"	f	file:
inet_ntop6	libc/inet_ntop.c	/^inet_ntop6($/;"	f	file:
inet_pton	arpa/inet.h	114;"	d
inet_pton	libc/inet_pton.c	/^inet_pton($/;"	f
inet_pton4	libc/inet_pton.c	/^inet_pton4($/;"	f	file:
inet_pton6	libc/inet_pton.c	/^inet_pton6($/;"	f	file:
inetctlerrmap	netinet/ip_input.c	/^u_char inetctlerrmap[PRC_NCMDS] = {$/;"	v
inetdomain	netinet/in_proto.c	/^struct domain inetdomain =$/;"	v	typeref:struct:domain
inetsw	netinet/in_proto.c	/^struct protosw inetsw[] = {$/;"	v	typeref:struct:protosw
init_services	libc/gethostnamadr.c	/^init_services(void)$/;"	f	file:
init_services	libc/getnetnamadr.c	/^init_services(void)$/;"	f	file:
inm_addr	netinet/in_var.h	/^	struct	in_addr inm_addr;	\/* IP multicast address *\/$/;"	m	struct:in_multi	typeref:struct:in_multi::in_addr
inm_entry	netinet/in_var.h	/^	LIST_ENTRY(in_multi) inm_entry; \/* list glue *\/$/;"	m	struct:in_multi
inm_ia	netinet/in_var.h	/^	struct	in_ifaddr *inm_ia;	\/* back pointer to in_ifaddr *\/$/;"	m	struct:in_multi	typeref:struct:in_multi::in_ifaddr
inm_ifp	netinet/in_var.h	/^	struct	ifnet *inm_ifp;		\/* back pointer to ifnet *\/$/;"	m	struct:in_multi	typeref:struct:in_multi::ifnet
inm_refcount	netinet/in_var.h	/^	u_int	inm_refcount;		\/* no. membership claims by sockets *\/$/;"	m	struct:in_multi
inm_rti	netinet/in_var.h	/^	struct	router_info *inm_rti;	\/* router info*\/$/;"	m	struct:in_multi	typeref:struct:in_multi::router_info
inm_state	netinet/in_var.h	/^	u_int	inm_state;		\/*  state of the membership *\/$/;"	m	struct:in_multi
inm_timer	netinet/in_var.h	/^	u_int	inm_timer;		\/* IGMP membership report timer *\/$/;"	m	struct:in_multi
ino	lib/ftpfs.c	/^  ino_t ino;$/;"	m	struct:__anon15	file:
ino	lib/ftpfs.c	/^  ino_t ino;$/;"	m	struct:__anon16	file:
inp4_ip_tos	netinet/in_pcb.h	/^		u_char	inp4_ip_tos;		\/* type of service proto *\/$/;"	m	struct:inpcb::__anon1
inp4_moptions	netinet/in_pcb.h	/^		struct	ip_moptions *inp4_moptions; \/* IP multicast options *\/$/;"	m	struct:inpcb::__anon1	typeref:struct:inpcb::__anon1::ip_moptions
inp4_options	netinet/in_pcb.h	/^		struct	mbuf *inp4_options;	\/* IP options *\/$/;"	m	struct:inpcb::__anon1	typeref:struct:inpcb::__anon1::mbuf
inp_depend4	netinet/in_pcb.h	/^	} inp_depend4;$/;"	m	struct:inpcb	typeref:struct:inpcb::__anon1
inp_faddr	netinet/in_pcb.h	/^	struct	in_addr inp_faddr;	\/* foreign host table entry *\/$/;"	m	struct:inpcb	typeref:struct:inpcb::in_addr
inp_flags	netinet/in_pcb.h	/^	int	inp_flags;		\/* generic IP\/datagram flags *\/$/;"	m	struct:inpcb
inp_fport	netinet/in_pcb.h	/^	u_short	inp_fport;		\/* foreign port *\/$/;"	m	struct:inpcb
inp_gen_t	netinet/in_pcb.h	/^typedef	u_int64_t inp_gen_t;$/;"	t
inp_gencnt	netinet/in_pcb.h	/^	inp_gen_t	inp_gencnt;	\/* generation count of this instance *\/$/;"	m	struct:inpcb
inp_hash	netinet/in_pcb.h	/^	LIST_ENTRY(inpcb) inp_hash; \/* hash list *\/$/;"	m	struct:inpcb
inp_ip_minttl	netinet/in_pcb.h	/^	u_char	inp_ip_minttl;		\/* minimum TTL or drop *\/$/;"	m	struct:inpcb
inp_ip_p	netinet/in_pcb.h	/^	u_char	inp_ip_p;		\/* protocol proto *\/$/;"	m	struct:inpcb
inp_ip_tos	netinet/in_pcb.h	75;"	d
inp_ip_ttl	netinet/in_pcb.h	/^	u_char	inp_ip_ttl;		\/* time to live proto *\/$/;"	m	struct:inpcb
inp_laddr	netinet/in_pcb.h	/^	struct	in_addr inp_laddr;	\/* local host table entry *\/$/;"	m	struct:inpcb	typeref:struct:inpcb::in_addr
inp_list	netinet/in_pcb.h	/^	LIST_ENTRY(inpcb) inp_list; \/* list for all PCBs of this proto *\/$/;"	m	struct:inpcb
inp_lport	netinet/in_pcb.h	/^	u_short	inp_lport;		\/* local port *\/$/;"	m	struct:inpcb
inp_moptions	netinet/in_pcb.h	77;"	d
inp_options	netinet/in_pcb.h	76;"	d
inp_pcbinfo	netinet/in_pcb.h	/^	struct	inpcbinfo *inp_pcbinfo;	\/* PCB list info *\/$/;"	m	struct:inpcb	typeref:struct:inpcb::inpcbinfo
inp_ppcb	netinet/in_pcb.h	/^	caddr_t	inp_ppcb;		\/* pointer to per-protocol pcb *\/$/;"	m	struct:inpcb
inp_route	netinet/in_pcb.h	/^	struct	route inp_route;	\/* placeholder for routing entry *\/$/;"	m	struct:inpcb	typeref:struct:inpcb::route
inp_socket	netinet/in_pcb.h	/^	struct	socket *inp_socket;	\/* back pointer to socket *\/$/;"	m	struct:inpcb	typeref:struct:inpcb::socket
inp_vflag	netinet/in_pcb.h	/^	u_char	inp_vflag;		\/* IP version flag (v4\/v6) *\/$/;"	m	struct:inpcb
inpcb	netinet/in_pcb.h	/^struct inpcb {$/;"	s
inpcbinfo	netinet/in_pcb.h	/^struct inpcbinfo {		\/* XXX documentation, prefixes *\/$/;"	s
integer	rtems/rtems_bsdnet.h	/^	uint32_t	integer;$/;"	m	struct:timestamp
intotcpcb	netinet/tcp_var.h	189;"	d
intotw	netinet/tcp_var.h	190;"	d
ip	netinet/ip.h	/^struct ip {$/;"	s
ip_acceptsourceroute	netinet/ip_input.c	/^static int	ip_acceptsourceroute = 0;$/;"	v	file:
ip_address	rtems/rtems_bsdnet.h	/^	char		*ip_address;$/;"	m	struct:rtems_bsdnet_ifconfig
ip_count	net/route.h	/^	int	ip_count;$/;"	m	struct:route_cb
ip_ctloutput	netinet/ip_output.c	/^ip_ctloutput(int op, struct socket *so, int level, int optname,$/;"	f
ip_defttl	netinet/ip_input.c	/^int	ip_defttl = IPDEFTTL;$/;"	v
ip_deq	netinet/ip_input.c	/^ip_deq(struct ipasfrag *p)$/;"	f	file:
ip_divert_ignore	netinet/ip_divert.c	/^u_short ip_divert_ignore;$/;"	v
ip_divert_port	netinet/ip_divert.c	/^u_short ip_divert_port;$/;"	v
ip_dooptions	netinet/ip_input.c	/^ip_dooptions(struct mbuf *m)$/;"	f	file:
ip_dosourceroute	netinet/ip_input.c	/^static int	ip_dosourceroute = 0;$/;"	v	file:
ip_drain	netinet/ip_input.c	/^ip_drain(void)$/;"	f
ip_dst	netinet/ip.h	/^	struct	in_addr ip_src,ip_dst;	\/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_enq	netinet/ip_input.c	/^ip_enq(struct ipasfrag *p, struct ipasfrag *prev)$/;"	f	file:
ip_forward	netinet/ip_input.c	/^ip_forward(struct mbuf *m, int srcrt)$/;"	f	file:
ip_freef	netinet/ip_input.c	/^ip_freef(struct ipq *fp)$/;"	f	file:
ip_freemoptions	netinet/ip_output.c	/^ip_freemoptions(struct ip_moptions *imo)$/;"	f
ip_fw	netinet/ip_fw.h	/^struct ip_fw {$/;"	s
ip_fw_chain	netinet/ip_fw.h	/^struct ip_fw_chain {$/;"	s
ip_fw_chk	netinet/ip_fw.c	/^ip_fw_chk(struct ip **pip, int hlen,$/;"	f	file:
ip_fw_chk_ptr	netinet/ip_input.c	/^ip_fw_chk_t *ip_fw_chk_ptr;$/;"	v
ip_fw_chk_t	netinet/in.h	/^typedef	int ip_fw_chk_t(struct ip**, int, struct ifnet*, int, struct mbuf**);$/;"	t
ip_fw_ctl	netinet/ip_fw.c	/^ip_fw_ctl(int stage, struct mbuf **mm)$/;"	f	file:
ip_fw_ctl_ptr	netinet/ip_input.c	/^ip_fw_ctl_t *ip_fw_ctl_ptr;$/;"	v
ip_fw_ctl_t	netinet/in.h	/^typedef	int ip_fw_ctl_t(int, struct mbuf**);$/;"	t
ip_fw_if	netinet/ip_fw.h	/^union ip_fw_if {$/;"	u
ip_fw_init	netinet/ip_fw.c	/^ip_fw_init(void)$/;"	f
ip_getmoptions	netinet/ip_output.c	/^ip_getmoptions(int optname, struct ip_moptions *imo,$/;"	f	file:
ip_hl	netinet/ip_var.h	/^		ip_hl:4;$/;"	m	struct:ipasfrag
ip_hl	netinet/ip_var.h	/^	u_char	ip_hl:4,$/;"	m	struct:ipasfrag
ip_id	netinet/ip.h	/^	u_short	ip_id;			\/* identification *\/$/;"	m	struct:ip
ip_id	netinet/ip_output.c	/^u_short ip_id;$/;"	v
ip_id	netinet/ip_var.h	/^	u_short	ip_id;$/;"	m	struct:ipasfrag
ip_init	netinet/ip_input.c	/^ip_init(void)$/;"	f
ip_input	netinet/ip_input.c	/^ip_input(struct mbuf *m)$/;"	f
ip_insertoptions	netinet/ip_output.c	/^ip_insertoptions(struct mbuf *m, struct mbuf *opt, int *phlen)$/;"	f	file:
ip_len	netinet/ip.h	/^	u_short	ip_len;			\/* total length *\/$/;"	m	struct:ip
ip_len	netinet/ip_var.h	/^	u_short	ip_len;$/;"	m	struct:ipasfrag
ip_mcast_src	netinet/ip_mroute.c	/^u_long (*ip_mcast_src)(int) = X_ip_mcast_src;$/;"	v
ip_mcast_src	netinet/ip_mroute.c	/^u_long (*ip_mcast_src)(int) = _ip_mcast_src;$/;"	v
ip_mdq	netinet/ip_mroute.c	/^ip_mdq(struct mbuf *m, struct ifnet *ifp, struct mfc *rt,$/;"	f	file:
ip_mforward	netinet/ip_mroute.c	/^int (*ip_mforward)(struct ip *, struct ifnet *, struct mbuf *,$/;"	v
ip_mloopback	netinet/ip_output.c	/^ip_mloopback(struct ifnet *ifp, struct mbuf *m, struct sockaddr_in *dst,$/;"	f	file:
ip_moptions	netinet/ip_var.h	/^struct ip_moptions {$/;"	s
ip_mreq	netinet/in.h	/^struct ip_mreq {$/;"	s
ip_mroute_mod	netinet/ip_mroute.c	/^ip_mroute_mod(struct lkm_table *lkmtp, int cmd, int ver) {$/;"	f
ip_mroute_mod_handle	netinet/ip_mroute.c	/^ip_mroute_mod_handle(struct lkm_table *lkmtp, int cmd)$/;"	f	file:
ip_mrouter	netinet/ip_mroute.c	/^struct socket  *ip_mrouter  = NULL;$/;"	v	typeref:struct:socket
ip_mrouter_done	netinet/ip_mroute.c	/^int (*ip_mrouter_done)(void) = X_ip_mrouter_done;$/;"	v
ip_mrouter_done	netinet/ip_mroute.c	/^int (*ip_mrouter_done)(void) = _ip_mrouter_done;$/;"	v
ip_mrouter_get	netinet/ip_mroute.c	/^int (*ip_mrouter_get)(int, struct socket *, struct mbuf **) = X_ip_mrouter_get;$/;"	v
ip_mrouter_get	netinet/ip_mroute.c	/^int (*ip_mrouter_get)(int, struct socket *, struct mbuf **) = _ip_mrouter_get;$/;"	v
ip_mrouter_init	netinet/ip_mroute.c	/^ip_mrouter_init(struct socket *so, struct mbuf *m)$/;"	f	file:
ip_mrouter_set	netinet/ip_mroute.c	/^int (*ip_mrouter_set)(int, struct socket *, struct mbuf *) = X_ip_mrouter_set;$/;"	v
ip_mrouter_set	netinet/ip_mroute.c	/^int (*ip_mrouter_set)(int, struct socket *, struct mbuf *) = _ip_mrouter_set;$/;"	v
ip_mrtproto	netinet/ip_mroute.c	/^int		ip_mrtproto = IGMP_DVMRP;    \/* for netstat only *\/$/;"	v
ip_mrtproto	netinet/ip_mroute.c	/^static int ip_mrtproto;$/;"	v	file:
ip_nat_ctl_ptr	netinet/ip_input.c	/^ip_nat_ctl_t *ip_nat_ctl_ptr;$/;"	v
ip_nat_ctl_t	netinet/in.h	/^typedef	int ip_nat_ctl_t(int, struct mbuf**);$/;"	t
ip_nat_ptr	netinet/ip_input.c	/^ip_nat_t *ip_nat_ptr;$/;"	v
ip_nat_t	netinet/in.h	/^typedef	int ip_nat_t(struct ip**, struct mbuf**, struct ifnet*, int);$/;"	t
ip_netmask	rtems/rtems_bsdnet.h	/^	char		*ip_netmask;$/;"	m	struct:rtems_bsdnet_ifconfig
ip_next_mtu	netinet/ip_icmp.c	/^ip_next_mtu(int mtu, int dir)$/;"	f
ip_nhops	netinet/ip_input.c	/^static int	ip_nhops = 0;$/;"	v	file:
ip_off	netinet/ip.h	/^	u_short	ip_off;			\/* fragment offset field *\/$/;"	m	struct:ip
ip_off	netinet/ip_var.h	/^	u_short	ip_off;$/;"	m	struct:ipasfrag
ip_optcopy	netinet/ip_output.c	/^ip_optcopy(struct ip *ip, struct ip *jp)$/;"	f	file:
ip_output	netinet/ip_output.c	/^ip_output(struct mbuf *m0, struct mbuf *opt, struct route *ro, int flags,$/;"	f
ip_p	netinet/ip.h	/^	u_char	ip_p;			\/* protocol *\/$/;"	m	struct:ip
ip_p	netinet/ip_var.h	/^	u_char	ip_p;$/;"	m	struct:ipasfrag
ip_pcbopts	netinet/ip_output.c	/^ip_pcbopts(int optname, struct mbuf **pcbopt, struct mbuf *m)$/;"	f	file:
ip_protox	netinet/ip_input.c	/^u_char	ip_protox[IPPROTO_MAX];$/;"	v
ip_reass	netinet/ip_input.c	/^ip_reass(struct ipasfrag *ip, struct ipq *fp, struct ipq *where)$/;"	f	file:
ip_rsvp_done	netinet/ip_input.c	/^ip_rsvp_done(void)$/;"	f
ip_rsvp_force_done	netinet/ip_mroute.c	/^ip_rsvp_force_done(struct socket *so)$/;"	f
ip_rsvp_init	netinet/ip_input.c	/^ip_rsvp_init(struct socket *so)$/;"	f
ip_rsvp_on	netinet/ip_input.c	/^static int ip_rsvp_on;$/;"	v	file:
ip_rsvp_vif_done	netinet/ip_mroute.c	/^ip_rsvp_vif_done(struct socket *so, struct mbuf *m)$/;"	f
ip_rsvp_vif_init	netinet/ip_mroute.c	/^ip_rsvp_vif_init(struct socket *so, struct mbuf *m)$/;"	f
ip_rsvpd	netinet/ip_input.c	/^struct socket *ip_rsvpd;$/;"	v	typeref:struct:socket
ip_rtaddr	netinet/ip_input.c	/^ip_rtaddr(struct in_addr dst)$/;"	f	file:
ip_savecontrol	netinet/ip_input.c	/^ip_savecontrol(struct inpcb *inp, struct mbuf **mp, struct ip *ip,$/;"	f
ip_setmoptions	netinet/ip_output.c	/^ip_setmoptions(int optname, struct ip_moptions **imop, struct mbuf *m)$/;"	f	file:
ip_slowtimo	netinet/ip_input.c	/^ip_slowtimo(void)$/;"	f
ip_src	netinet/ip.h	/^	struct	in_addr ip_src,ip_dst;	\/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_srcroute	netinet/ip_input.c	/^ip_srcroute(void)$/;"	f
ip_srcrt	netinet/ip_input.c	/^static	struct ip_srcrt {$/;"	s	file:
ip_srcrt	netinet/ip_input.c	/^} ip_srcrt;$/;"	v	typeref:struct:ip_srcrt	file:
ip_stripoptions	netinet/ip_input.c	/^ip_stripoptions(struct mbuf *m, struct mbuf *mopt)$/;"	f
ip_sum	netinet/ip.h	/^	u_short	ip_sum;			\/* checksum *\/$/;"	m	struct:ip
ip_sum	netinet/ip_var.h	/^	u_short	ip_sum;$/;"	m	struct:ipasfrag
ip_timestamp	netinet/ip.h	/^struct	ip_timestamp {$/;"	s
ip_tos	netinet/ip.h	/^	u_char	ip_tos;			\/* type of service *\/$/;"	m	struct:ip
ip_ttl	netinet/ip.h	/^	u_char	ip_ttl;			\/* time to live *\/$/;"	m	struct:ip
ip_ttl	netinet/ip_var.h	/^	u_char	ip_ttl;$/;"	m	struct:ipasfrag
ip_v	netinet/ip_var.h	/^		ip_v:4;$/;"	m	struct:ipasfrag
ip_v	netinet/ip_var.h	/^	u_char	ip_v:4,$/;"	m	struct:ipasfrag
ip_vhl	netinet/ip.h	/^	u_char	ip_vhl;			\/* version << 4 | header length >> 2 *\/$/;"	m	struct:ip
ipaddr	netinet/ip_input.c	/^static struct	sockaddr_in ipaddr = { sizeof(ipaddr), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
ipasfrag	netinet/ip_var.h	/^struct	ipasfrag {$/;"	s
ipf_mff	netinet/ip_var.h	/^	u_char	ipf_mff;		\/* XXX overlays ip_tos: use low bit$/;"	m	struct:ipasfrag
ipf_next	netinet/ip_var.h	/^	struct	ipasfrag *ipf_next;	\/* next fragment *\/$/;"	m	struct:ipasfrag	typeref:struct:ipasfrag::ipasfrag
ipf_prev	netinet/ip_var.h	/^	struct	ipasfrag *ipf_prev;	\/* previous fragment *\/$/;"	m	struct:ipasfrag	typeref:struct:ipasfrag::ipasfrag
ipforward_rt	netinet/ip_input.c	/^static struct	route ipforward_rt;$/;"	v	typeref:struct:route	file:
ipforwarding	netinet/ip_input.c	/^int	ipforwarding = 0;$/;"	v
ipfw	netinet/ip_fw.c	/^MOD_MISC(ipfw);$/;"	v
ipfw_load	netinet/ip_fw.c	/^ipfw_load(struct lkm_table *lkmtp, int cmd)$/;"	f	file:
ipfw_mod	netinet/ip_fw.c	/^ipfw_mod(struct lkm_table *lkmtp, int cmd, int ver)$/;"	f
ipfw_report	netinet/ip_fw.c	/^ipfw_report(struct ip_fw *f, struct ip *ip,$/;"	f	file:
ipfw_unload	netinet/ip_fw.c	/^ipfw_unload(struct lkm_table *lkmtp, int cmd)$/;"	f	file:
ipi_count	netinet/in_pcb.h	/^	u_int	ipi_count;	\/* number of pcbs in this list *\/$/;"	m	struct:inpcbinfo
ipi_gencnt	netinet/in_pcb.h	/^	u_int64_t ipi_gencnt;	\/* current generation count *\/$/;"	m	struct:inpcbinfo
ipintr	netinet/ip_input.c	/^ipintr(void)$/;"	f
ipintrq	netinet/ip_input.c	/^struct	ifqueue ipintrq;$/;"	v	typeref:struct:ifqueue
ipip_input	netinet/ip_mroute.c	/^void ipip_input(struct mbuf *m, int iphlen)$/;"	f
ipm_nextmtu	netinet/ip_icmp.h	/^			uint16_t ipm_nextmtu;	\/* network format *\/$/;"	m	struct:icmp::__anon4::ih_pmtu
ipm_void	netinet/ip_icmp.h	/^			uint16_t ipm_void;	\/* network format *\/$/;"	m	struct:icmp::__anon4::ih_pmtu
ipopt_dst	netinet/ip_var.h	/^	struct	in_addr ipopt_dst;	\/* first-hop dst if source routed *\/$/;"	m	struct:ipoption	typeref:struct:ipoption::in_addr
ipopt_list	netinet/ip_var.h	/^	char	ipopt_list[MAX_IPOPTLEN];	\/* options proper *\/$/;"	m	struct:ipoption
ipoption	netinet/ip_var.h	/^struct ipoption {$/;"	s
ipopts_match	netinet/ip_fw.c	/^ipopts_match(struct ip *ip, struct ip_fw *f)$/;"	f	file:
ipovly	netinet/ip_var.h	/^struct ipovly {$/;"	s
ipport_firstauto	netinet/in_pcb.c	/^static int ipport_firstauto = IPPORT_RESERVED;		\/* 1024 *\/$/;"	v	file:
ipport_hifirstauto	netinet/in_pcb.c	/^static int ipport_hifirstauto = IPPORT_HIFIRSTAUTO;	\/* 40000 *\/$/;"	v	file:
ipport_hilastauto	netinet/in_pcb.c	/^static int ipport_hilastauto  = IPPORT_HILASTAUTO;	\/* 44999 *\/$/;"	v	file:
ipport_lastauto	netinet/in_pcb.c	/^static int ipport_lastauto  = IPPORT_USERRESERVED;	\/* 5000 *\/$/;"	v	file:
ipport_lowfirstauto	netinet/in_pcb.c	/^static int ipport_lowfirstauto  = IPPORT_RESERVED - 1;	\/* 1023 *\/$/;"	v	file:
ipport_lowlastauto	netinet/in_pcb.c	/^static int ipport_lowlastauto = IPPORT_RESERVEDSTART;	\/* 600 *\/$/;"	v	file:
ipprintfs	netinet/ip_input.c	/^static int	ipprintfs = 0;$/;"	v	file:
ippseudo	netinet/ip.h	/^struct ippseudo {$/;"	s
ippseudo_dst	netinet/ip.h	/^	struct	in_addr	ippseudo_dst;	\/* destination internet address *\/$/;"	m	struct:ippseudo	typeref:struct:ippseudo::in_addr
ippseudo_len	netinet/ip.h	/^	u_short		ippseudo_len;	\/* protocol length *\/$/;"	m	struct:ippseudo
ippseudo_p	netinet/ip.h	/^	u_char		ippseudo_p;	\/* protocol *\/$/;"	m	struct:ippseudo
ippseudo_pad	netinet/ip.h	/^	u_char		ippseudo_pad;	\/* pad, must be zero *\/$/;"	m	struct:ippseudo
ippseudo_src	netinet/ip.h	/^	struct	in_addr	ippseudo_src;	\/* source internet address *\/$/;"	m	struct:ippseudo	typeref:struct:ippseudo::in_addr
ipq	netinet/ip_input.c	/^static struct ipq ipq[IPREASS_NHASH];$/;"	v	typeref:struct:ipq	file:
ipq	netinet/ip_var.h	/^struct ipq {$/;"	s
ipq_divert	netinet/ip_var.h	/^	u_short ipq_divert;		\/* divert protocol port *\/$/;"	m	struct:ipq
ipq_dst	netinet/ip_var.h	/^	struct	in_addr ipq_src,ipq_dst;$/;"	m	struct:ipq	typeref:struct:ipq::
ipq_id	netinet/ip_var.h	/^	u_short	ipq_id;			\/* sequence id for reassembly *\/$/;"	m	struct:ipq
ipq_next	netinet/ip_var.h	/^	struct	ipasfrag *ipq_next,*ipq_prev;$/;"	m	struct:ipq	typeref:struct:ipq::ipasfrag
ipq_p	netinet/ip_var.h	/^	u_char	ipq_p;			\/* protocol of this fragment *\/$/;"	m	struct:ipq
ipq_prev	netinet/ip_var.h	/^	struct	ipasfrag *ipq_next,*ipq_prev;$/;"	m	struct:ipq	typeref:struct:ipq::
ipq_src	netinet/ip_var.h	/^	struct	in_addr ipq_src,ipq_dst;$/;"	m	struct:ipq	typeref:struct:ipq::in_addr
ipq_ttl	netinet/ip_var.h	/^	u_char	ipq_ttl;		\/* time for reass q to live *\/$/;"	m	struct:ipq
ipqmaxlen	netinet/ip_input.c	/^static int	ipqmaxlen = IFQ_MAXLEN;$/;"	v	file:
ips_badhlen	netinet/ip_var.h	/^	u_long	ips_badhlen;		\/* ip header length < data size *\/$/;"	m	struct:ipstat
ips_badlen	netinet/ip_var.h	/^	u_long	ips_badlen;		\/* ip length < ip header length *\/$/;"	m	struct:ipstat
ips_badoptions	netinet/ip_var.h	/^	u_long	ips_badoptions;		\/* error in option processing *\/$/;"	m	struct:ipstat
ips_badsum	netinet/ip_var.h	/^	u_long	ips_badsum;		\/* checksum bad *\/$/;"	m	struct:ipstat
ips_badvers	netinet/ip_var.h	/^	u_long	ips_badvers;		\/* ip version != 4 *\/$/;"	m	struct:ipstat
ips_cantforward	netinet/ip_var.h	/^	u_long	ips_cantforward;	\/* packets rcvd for unreachable dest *\/$/;"	m	struct:ipstat
ips_cantfrag	netinet/ip_var.h	/^	u_long	ips_cantfrag;		\/* don't fragment flag was set, etc. *\/$/;"	m	struct:ipstat
ips_delivered	netinet/ip_var.h	/^	u_long	ips_delivered;		\/* datagrams delivered to upper level*\/$/;"	m	struct:ipstat
ips_forward	netinet/ip_var.h	/^	u_long	ips_forward;		\/* packets forwarded *\/$/;"	m	struct:ipstat
ips_fragdropped	netinet/ip_var.h	/^	u_long	ips_fragdropped;	\/* frags dropped (dups, out of space) *\/$/;"	m	struct:ipstat
ips_fragmented	netinet/ip_var.h	/^	u_long	ips_fragmented;		\/* datagrams successfully fragmented *\/$/;"	m	struct:ipstat
ips_fragments	netinet/ip_var.h	/^	u_long	ips_fragments;		\/* fragments received *\/$/;"	m	struct:ipstat
ips_fragtimeout	netinet/ip_var.h	/^	u_long	ips_fragtimeout;	\/* fragments timed out *\/$/;"	m	struct:ipstat
ips_localout	netinet/ip_var.h	/^	u_long	ips_localout;		\/* total ip packets generated here *\/$/;"	m	struct:ipstat
ips_noproto	netinet/ip_var.h	/^	u_long	ips_noproto;		\/* unknown or unsupported protocol *\/$/;"	m	struct:ipstat
ips_noroute	netinet/ip_var.h	/^	u_long	ips_noroute;		\/* packets discarded due to no route *\/$/;"	m	struct:ipstat
ips_odropped	netinet/ip_var.h	/^	u_long	ips_odropped;		\/* lost packets due to nobufs, etc. *\/$/;"	m	struct:ipstat
ips_ofragments	netinet/ip_var.h	/^	u_long	ips_ofragments;		\/* output fragments created *\/$/;"	m	struct:ipstat
ips_rawout	netinet/ip_var.h	/^	u_long	ips_rawout;		\/* total raw ip packets generated *\/$/;"	m	struct:ipstat
ips_reassembled	netinet/ip_var.h	/^	u_long	ips_reassembled;	\/* total packets reassembled ok *\/$/;"	m	struct:ipstat
ips_redirectsent	netinet/ip_var.h	/^	u_long	ips_redirectsent;	\/* packets forwarded on same net *\/$/;"	m	struct:ipstat
ips_toolong	netinet/ip_var.h	/^	u_long	ips_toolong;		\/* ip length > max ip packet size *\/$/;"	m	struct:ipstat
ips_tooshort	netinet/ip_var.h	/^	u_long	ips_tooshort;		\/* packet too short *\/$/;"	m	struct:ipstat
ips_toosmall	netinet/ip_var.h	/^	u_long	ips_toosmall;		\/* not enough data *\/$/;"	m	struct:ipstat
ips_total	netinet/ip_var.h	/^	u_long	ips_total;		\/* total packets received *\/$/;"	m	struct:ipstat
ipsendredirects	netinet/ip_input.c	/^static int	ipsendredirects = 1; \/* XXX *\/$/;"	v	file:
ipstat	netinet/ip_input.c	/^struct ipstat ipstat;$/;"	v	typeref:struct:ipstat
ipstat	netinet/ip_var.h	/^struct	ipstat {$/;"	s
ipt_addr	netinet/ip.h	/^			struct in_addr ipt_addr;$/;"	m	struct:ip_timestamp::ipt_timestamp::ipt_ta	typeref:struct:ip_timestamp::ipt_timestamp::ipt_ta::in_addr
ipt_code	netinet/ip.h	/^	u_char	ipt_code;		\/* IPOPT_TS *\/$/;"	m	struct:ip_timestamp
ipt_flg	netinet/ip.h	/^		ipt_flg:4;		\/* flags, see below *\/$/;"	m	struct:ip_timestamp
ipt_flg	netinet/ip.h	/^	u_int	ipt_flg:4,		\/* flags, see below *\/$/;"	m	struct:ip_timestamp
ipt_len	netinet/ip.h	/^	u_char	ipt_len;		\/* size of structure (variable) *\/$/;"	m	struct:ip_timestamp
ipt_oflw	netinet/ip.h	/^		ipt_oflw:4;		\/* overflow counter *\/$/;"	m	struct:ip_timestamp
ipt_oflw	netinet/ip.h	/^	u_int	ipt_oflw:4,		\/* overflow counter *\/$/;"	m	struct:ip_timestamp
ipt_ptr	netinet/ip.h	/^	u_char	ipt_ptr;		\/* index of current entry *\/$/;"	m	struct:ip_timestamp
ipt_ta	netinet/ip.h	/^		struct	ipt_ta {$/;"	s	union:ip_timestamp::ipt_timestamp
ipt_ta	netinet/ip.h	/^		} ipt_ta[1];$/;"	m	union:ip_timestamp::ipt_timestamp	typeref:struct:ip_timestamp::ipt_timestamp::ipt_ta
ipt_time	netinet/ip.h	/^			n_long ipt_time;$/;"	m	struct:ip_timestamp::ipt_timestamp::ipt_ta
ipt_time	netinet/ip.h	/^		n_long	ipt_time[1];$/;"	m	union:ip_timestamp::ipt_timestamp
ipt_timestamp	netinet/ip.h	/^	union ipt_timestamp {$/;"	u	struct:ip_timestamp
ipt_timestamp	netinet/ip.h	/^	} ipt_timestamp;$/;"	m	struct:ip_timestamp	typeref:union:ip_timestamp::ipt_timestamp
iptime	netinet/ip_icmp.c	/^iptime(void)$/;"	f
ipx_count	net/route.h	/^	int	ipx_count;$/;"	m	struct:route_cb
ira_addr	netinet/ip_icmp.h	/^	u_int32_t ira_addr;$/;"	m	struct:icmp_ra_addr
ira_preference	netinet/ip_icmp.h	/^	u_int32_t ira_preference;$/;"	m	struct:icmp_ra_addr
irno	rtems/rtems_bsdnet.h	/^	unsigned int	irno;   \/* irq of the board *\/$/;"	m	struct:rtems_bsdnet_ifconfig
irs	netinet/tcp_var.h	/^	tcp_seq	irs;			\/* initial receive sequence number *\/$/;"	m	struct:tcpcb
irt_lifetime	netinet/ip_icmp.h	/^			u_int16_t irt_lifetime;$/;"	m	struct:icmp::__anon4::ih_rtradv
irt_num_addrs	netinet/ip_icmp.h	/^			u_char irt_num_addrs;$/;"	m	struct:icmp::__anon4::ih_rtradv
irt_wpa	netinet/ip_icmp.h	/^			u_char irt_wpa;$/;"	m	struct:icmp::__anon4::ih_rtradv
iruserok	libc/rcmd.c	/^iruserok(raddr, superuser, ruser, luser)$/;"	f
isascii	libc/res_init.c	106;"	d	file:
iso_count	net/route.h	/^	int	iso_count;$/;"	m	struct:route_cb
iss	netinet/tcp_var.h	/^	tcp_seq	iss;			\/* initial send sequence number *\/$/;"	m	struct:tcpcb
its_otime	netinet/ip_icmp.h	/^			uint32_t its_otime;	\/* Originate *\/$/;"	m	struct:icmp::__anon5::id_ts
its_rtime	netinet/ip_icmp.h	/^			uint32_t its_rtime;	\/* Receive *\/$/;"	m	struct:icmp::__anon5::id_ts
its_ttime	netinet/ip_icmp.h	/^			uint32_t its_ttime;	\/* Transmit *\/$/;"	m	struct:icmp::__anon5::id_ts
jf	net/bpf.h	/^	u_char		jf;$/;"	m	struct:bpf_insn
jt	net/bpf.h	/^	u_char		jt;$/;"	m	struct:bpf_insn
k	net/bpf.h	/^	bpf_u_int32	k;$/;"	m	struct:bpf_insn
kb_calls	sys/malloc.h	/^	long	kb_calls;	\/* total calls to allocate this size *\/$/;"	m	struct:kmembuckets
kb_couldfree	sys/malloc.h	/^	long	kb_couldfree;	\/* over high water mark and could free *\/$/;"	m	struct:kmembuckets
kb_elmpercl	sys/malloc.h	/^	long	kb_elmpercl;	\/* # of elements in this sized allocation *\/$/;"	m	struct:kmembuckets
kb_highwat	sys/malloc.h	/^	long	kb_highwat;	\/* high water mark *\/$/;"	m	struct:kmembuckets
kb_last	sys/malloc.h	/^	caddr_t kb_last;	\/* last free block *\/$/;"	m	struct:kmembuckets
kb_next	sys/malloc.h	/^	caddr_t kb_next;	\/* list of free blocks *\/$/;"	m	struct:kmembuckets
kb_total	sys/malloc.h	/^	long	kb_total;	\/* total number of blocks allocated *\/$/;"	m	struct:kmembuckets
kb_totalfree	sys/malloc.h	/^	long	kb_totalfree;	\/* # of free elements in this bucket *\/$/;"	m	struct:kmembuckets
kernel_sysctl	kern/kern_sysctl.c	/^kernel_sysctl(struct thread *td, int *name, u_int namelen, void *old,$/;"	f
kernel_sysctlbyname	kern/kern_sysctl.c	/^kernel_sysctlbyname(struct thread *td, char *name, void *old, size_t *oldlenp,$/;"	f
kernelname	kern/kern_mib.c	/^char kernelname[MAXPATHLEN] = "\/kernel";	\/* XXX bloat *\/$/;"	v
killed	netinet/in_rmx.c	/^	int killed;$/;"	m	struct:rtqk_arg	file:
kludge_splimp	kern/uipc_domain.c	/^kludge_splimp(void *udata)$/;"	f	file:
kludge_splx	kern/uipc_domain.c	/^kludge_splx(void *udata)$/;"	f	file:
kmembuckets	sys/malloc.h	/^struct kmembuckets {$/;"	s
kmemstats	sys/malloc.h	/^struct kmemstats {$/;"	s
kmemusage	sys/malloc.h	/^struct kmemusage {$/;"	s
kmemxtob	sys/malloc.h	298;"	d
kproc_desc	sys/kernel.h	/^struct kproc_desc {$/;"	s
ks_calls	sys/malloc.h	/^	long	ks_calls;	\/* total packets of this type ever allocated *\/$/;"	m	struct:kmemstats
ks_inuse	sys/malloc.h	/^	long	ks_inuse;	\/* # of packets of this type currently in use *\/$/;"	m	struct:kmemstats
ks_limblocks	sys/malloc.h	/^	u_short	ks_limblocks;	\/* number of times blocked for hitting limit *\/$/;"	m	struct:kmemstats
ks_limit	sys/malloc.h	/^	long	ks_limit;	\/* most that are allowed to exist *\/$/;"	m	struct:kmemstats
ks_mapblocks	sys/malloc.h	/^	u_short	ks_mapblocks;	\/* number of times blocked for kernel map *\/$/;"	m	struct:kmemstats
ks_maxused	sys/malloc.h	/^	long	ks_maxused;	\/* maximum number ever used *\/$/;"	m	struct:kmemstats
ks_memuse	sys/malloc.h	/^	long 	ks_memuse;	\/* total memory held in bytes *\/$/;"	m	struct:kmemstats
ks_size	sys/malloc.h	/^	long	ks_size;	\/* sizes of this thing that are allocated *\/$/;"	m	struct:kmemstats
ks_spare	sys/malloc.h	/^	long	ks_spare;$/;"	m	struct:kmemstats
ku_freecnt	sys/malloc.h	243;"	d
ku_indx	sys/malloc.h	/^	short ku_indx;		\/* bucket index *\/$/;"	m	struct:kmemusage
ku_pagecnt	sys/malloc.h	244;"	d
ku_un	sys/malloc.h	/^	} ku_un;$/;"	m	struct:kmemusage	typeref:union:kmemusage::__anon52
l_linger	sys/socket.h	/^	int	l_linger;		\/* linger time *\/$/;"	m	struct:linger
l_onoff	sys/socket.h	/^	int	l_onoff;		\/* option on\/off *\/$/;"	m	struct:linger
la_asked	netinet/if_ether.c	/^	long	la_asked;		\/* last time we QUERIED for this addr *\/$/;"	m	struct:llinfo_arp	file:
la_hold	netinet/if_ether.c	/^	struct	mbuf *la_hold;		\/* last packet until resolved\/timeout *\/$/;"	m	struct:llinfo_arp	typeref:struct:llinfo_arp::mbuf	file:
la_rt	netinet/if_ether.c	/^	struct	rtentry *la_rt;$/;"	m	struct:llinfo_arp	typeref:struct:llinfo_arp::rtentry	file:
la_timer	netinet/if_ether.c	91;"	d	file:
last_ack_sent	netinet/tcp_var.h	/^	tcp_seq	last_ack_sent;$/;"	m	struct:tcpcb
last_cs	net/slcompress.h	/^	struct cstate *last_cs;	\/* most recently used tstate *\/$/;"	m	struct:slcompress	typeref:struct:slcompress::cstate
last_encap_src	netinet/ip_mroute.c	/^static u_long last_encap_src;$/;"	v	file:
last_encap_vif	netinet/ip_mroute.c	/^static struct vif *last_encap_vif;$/;"	v	typeref:struct:vif	file:
last_recv	net/slcompress.h	/^	u_char last_recv;	\/* last rcvd conn. id *\/$/;"	m	struct:slcompress
last_xmit	net/slcompress.h	/^	u_char last_xmit;	\/* last sent conn. id *\/$/;"	m	struct:slcompress
lasthi	netinet/in_pcb.h	/^	unsigned short lasthi;$/;"	m	struct:inpcbinfo
lastlow	netinet/in_pcb.h	/^	unsigned short lastlow;$/;"	m	struct:inpcbinfo
lastport	netinet/in_pcb.h	/^	unsigned short lastport;$/;"	m	struct:inpcbinfo
latlon2ul	libc/res_debug.c	/^latlon2ul($/;"	f	file:
leaseterm	nfsclient/nfsargs.h	/^	int		leaseterm;	\/* Term (sec) of lease *\/$/;"	m	struct:nfs_args
legal_vif_num	netinet/ip_mroute.c	/^int (*legal_vif_num)(int) = 0;$/;"	v
legal_vif_num	netinet/ip_mroute.c	/^int (*legal_vif_num)(int) = X_legal_vif_num;$/;"	v
len	sys/mbuf.h	/^	int32_t	len;			\/* total packet length *\/$/;"	m	struct:pkthdr
length	net/if_ppp.h	/^	u_int	length;$/;"	m	struct:ppp_option_data
li_vn_mode	rtems/rtems_bsdnet.h	/^	uint8_t		li_vn_mode;$/;"	m	struct:ntpPacketSmall
line	libc/getnetbyht.c	/^static char line[BUFSIZ+1];$/;"	v	file:
line	libc/getprotoent.c	/^static char line[BUFSIZ+1];$/;"	v	file:
line	libc/getservent.c	/^static char line[BUFSIZ+1];$/;"	v	file:
linger	sys/socket.h	/^struct	linger {$/;"	s
link	sys/sysctl.h	/^	TAILQ_ENTRY(sysctl_ctx_entry) link;$/;"	m	struct:sysctl_ctx_entry
link_addr	libc/linkaddr.c	/^link_addr($/;"	f
link_ascii	rtems/rtems_showroute.c	/^link_ascii (struct sockaddr_dl *sdl, char *buf, int bufsize)$/;"	f	file:
link_ntoa	libc/linkaddr.c	/^link_ntoa($/;"	f
link_rtrequest	net/if.c	/^link_rtrequest(int cmd, struct rtentry *rt, struct sockaddr *sa)$/;"	f	file:
list	net/raw_cb.h	/^	LIST_ENTRY(rawcb) list;$/;"	m	struct:rawcb
listen	rtems/rtems_syscall.c	/^listen (int s, int backlog)$/;"	f
listhead	netinet/in_pcb.h	/^	struct	inpcbhead *listhead;$/;"	m	struct:inpcbinfo	typeref:struct:inpcbinfo::inpcbhead
llc	net/if_llc.h	/^struct llc {$/;"	s
llc_class	net/if_llc.h	107;"	d
llc_control	net/if_llc.h	104;"	d
llc_control_ext	net/if_llc.h	105;"	d
llc_dsap	net/if_llc.h	/^	u_int8_t llc_dsap;$/;"	m	struct:llc
llc_fid	net/if_llc.h	106;"	d
llc_frmr_cause	net/if_llc.h	114;"	d
llc_frmr_control	net/if_llc.h	112;"	d
llc_frmr_control_ext	net/if_llc.h	113;"	d
llc_frmr_pdu0	net/if_llc.h	110;"	d
llc_frmr_pdu1	net/if_llc.h	111;"	d
llc_frmrinfo	net/if_llc.h	109;"	d
llc_snap	net/if_llc.h	115;"	d
llc_snap_ether_type	net/if_ethersubr.c	97;"	d	file:
llc_snap_org_code	net/if_ethersubr.c	96;"	d	file:
llc_ssap	net/if_llc.h	/^	u_int8_t llc_ssap;$/;"	m	struct:llc
llc_un	net/if_llc.h	/^	} __packed llc_un;$/;"	m	struct:llc	typeref:union:llc::__anon40
llc_window	net/if_llc.h	108;"	d
llinfo_arp	netinet/if_ether.c	/^struct llinfo_arp {$/;"	s	file:
lmax	sys/libkern.h	/^static __inline long lmax(long a, long b) { return (a > b ? a : b); }$/;"	f
lmin	sys/libkern.h	/^static __inline long lmin(long a, long b) { return (a < b ? a : b); }$/;"	f
loc_aton	libc/res_debug.c	/^loc_aton($/;"	f
loc_aton	resolv.h	234;"	d
loc_ntoa	libc/res_debug.c	/^loc_ntoa($/;"	f
loc_ntoa	resolv.h	235;"	d
lock	sys/sysctl.h	/^	int		lock;		\/* locking\/wiring state *\/$/;"	m	struct:sysctl_req
log	rtems/rtems_bsdnet_internal.h	70;"	d
log_host	rtems/rtems_bsdnet.h	/^	char			*log_host;		\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
log_in_vain	netinet/tcp_input.c	/^static int log_in_vain = 0;$/;"	v	file:
log_in_vain	netinet/udp_usrreq.c	/^static int log_in_vain = 0;$/;"	v	file:
loif	net/if_loop.c	/^struct	ifnet loif[NLOOP];$/;"	v	typeref:struct:ifnet
loioctl	net/if_loop.c	/^loioctl(struct ifnet *ifp, ioctl_command_t cmd, caddr_t data)$/;"	f	file:
looutput	net/if_loop.c	/^looutput(struct ifnet *ifp, struct mbuf *m, struct sockaddr *dst,$/;"	f
lortrequest	net/if_loop.c	/^lortrequest(int cmd, struct rtentry *rt, struct sockaddr *sa)$/;"	f	file:
lval	nfs/nfsproto.h	/^	u_int32_t	lval[2];$/;"	m	union:nfs_quadconvert
m	netinet/ip_mroute.h	/^    struct mbuf 	*m;		\/* A copy of the packet		    *\/$/;"	m	struct:rtdetq	typeref:struct:rtdetq::mbuf
m_act	sys/mbuf.h	121;"	d
m_adj	kern/uipc_mbuf.c	/^m_adj(struct mbuf *mp, int req_len)$/;"	f
m_cat	kern/uipc_mbuf.c	/^m_cat(struct mbuf *m, struct mbuf *n)$/;"	f
m_clalloc	rtems/rtems_glue.c	/^m_clalloc(int ncl, int nowait)$/;"	f
m_clfree	sys/mbuf.h	/^	u_long	m_clfree;	\/* free clusters *\/$/;"	m	struct:mbstat
m_clusters	sys/mbuf.h	/^	u_long	m_clusters;	\/* clusters obtained from page pool *\/$/;"	m	struct:mbstat
m_copy	sys/mbuf.h	398;"	d
m_copyback	kern/uipc_mbuf.c	/^m_copyback(struct mbuf *m0, int off, int len, caddr_t cp)$/;"	f
m_copydata	kern/uipc_mbuf.c	/^m_copydata(const struct mbuf *m, int off, int len, caddr_t cp)$/;"	f
m_copym	kern/uipc_mbuf.c	/^m_copym(struct mbuf *m, int off0, uint32_t len, int wait)$/;"	f
m_copypacket	kern/uipc_mbuf.c	/^m_copypacket(struct mbuf *m, int how)$/;"	f
m_dat	sys/mbuf.h	125;"	d
m_data	sys/mbuf.h	117;"	d
m_devget	kern/uipc_mbuf.c	/^m_devget(char *buf, int totlen, int off0, struct ifnet *ifp, $/;"	f
m_drain	sys/mbuf.h	/^	u_long	m_drain;	\/* times drained protocols for space *\/$/;"	m	struct:mbstat
m_drops	sys/mbuf.h	/^	u_long	m_drops;	\/* times failed to find space *\/$/;"	m	struct:mbstat
m_ext	sys/mbuf.h	/^struct m_ext {$/;"	s
m_ext	sys/mbuf.h	123;"	d
m_flags	sys/mbuf.h	119;"	d
m_free	kern/uipc_mbuf.c	/^m_free(struct mbuf *m)$/;"	f
m_freem	kern/uipc_mbuf.c	/^m_freem(struct mbuf *mb)$/;"	f
m_get	kern/uipc_mbuf.c	/^m_get(int nowait, int type)$/;"	f
m_getclr	kern/uipc_mbuf.c	/^m_getclr(int nowait, int type)$/;"	f
m_gethdr	kern/uipc_mbuf.c	/^m_gethdr(int nowait, int type)$/;"	f
m_hdr	sys/mbuf.h	/^	struct	m_hdr m_hdr;$/;"	m	struct:mbuf	typeref:struct:mbuf::m_hdr
m_hdr	sys/mbuf.h	/^struct m_hdr {$/;"	s
m_len	sys/mbuf.h	116;"	d
m_mballoc	rtems/rtems_glue.c	/^m_mballoc(int nmb, int nowait)$/;"	f
m_mbufs	sys/mbuf.h	/^	u_long	m_mbufs;	\/* mbufs obtained from page pool *\/$/;"	m	struct:mbstat
m_mtypes	sys/mbuf.h	/^	u_short	m_mtypes[256];	\/* type specific mbuf allocations *\/$/;"	m	struct:mbstat
m_next	sys/mbuf.h	115;"	d
m_nextpkt	sys/mbuf.h	120;"	d
m_pktdat	sys/mbuf.h	124;"	d
m_pkthdr	sys/mbuf.h	122;"	d
m_prepend	kern/uipc_mbuf.c	/^m_prepend(struct mbuf *m, int len, int how)$/;"	f
m_pullup	kern/uipc_mbuf.c	/^m_pullup(struct mbuf *n, int len)$/;"	f
m_reclaim	kern/uipc_mbuf.c	/^m_reclaim(void)$/;"	f
m_retry	kern/uipc_mbuf.c	/^m_retry(int i, int t)$/;"	f
m_retry	kern/uipc_mbuf.c	78;"	d	file:
m_retry	kern/uipc_mbuf.c	80;"	d	file:
m_retryhdr	kern/uipc_mbuf.c	/^m_retryhdr(int i, int t)$/;"	f
m_retryhdr	kern/uipc_mbuf.c	97;"	d	file:
m_retryhdr	kern/uipc_mbuf.c	99;"	d	file:
m_spare	sys/mbuf.h	/^	u_long	m_spare;	\/* spare field *\/$/;"	m	struct:mbstat
m_split	kern/uipc_mbuf.c	/^m_split(struct mbuf *m0, int len0, int wait)$/;"	f
m_type	sys/mbuf.h	118;"	d
m_wait	sys/mbuf.h	/^	u_long	m_wait;		\/* times waited for space *\/$/;"	m	struct:mbstat
machine	kern/kern_mib.c	/^char machine[] = "SET ME";$/;"	v
machine_arch	kern/kern_mib.c	/^static char	machine_arch[] = MACHINE_ARCH;$/;"	v	file:
major	rtems/rtems_bsdnet_internal.h	102;"	d
makedev	rtems/rtems_bsdnet_internal.h	104;"	d
malloc	rtems/rtems_bsdnet_internal.h	129;"	d
malloc	rtems/rtems_glue.c	150;"	d	file:
malloc	rtems/rtems_showroute.c	28;"	d	file:
mask	arpa/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata
mask	resolv.h	/^		u_int32_t	mask;$/;"	m	struct:__res_state::__anon7
mask_rnhead	net/radix.c	/^static struct radix_node_head *mask_rnhead;$/;"	v	typeref:struct:radix_node_head	file:
max	libc/rcmd.c	67;"	d	file:
max	sys/libkern.h	/^static __inline u_int max(u_int a, u_int b) { return (a > b ? a : b); }$/;"	f
max_datalen	kern/uipc_mbuf.c	/^int	max_datalen;$/;"	v
max_hdr	kern/uipc_mbuf.c	/^int	max_hdr;$/;"	v
max_keylen	net/radix.c	/^static int	max_keylen;$/;"	v	file:
max_linkhdr	kern/uipc_mbuf.c	/^int	max_linkhdr;$/;"	v
max_protohdr	kern/uipc_mbuf.c	/^int	max_protohdr;$/;"	v
max_sndwnd	netinet/tcp_var.h	/^	u_long	max_sndwnd;		\/* largest window peer has offered *\/$/;"	m	struct:tcpcb
maxgrouplist	nfsclient/nfsargs.h	/^	int		maxgrouplist;	\/* Max. size of group list *\/$/;"	m	struct:nfs_args
maxnipq	netinet/ip_input.c	/^static int    maxnipq;$/;"	v	file:
mbstat	sys/mbuf.h	/^struct mbstat {$/;"	s
mbuf	sys/mbuf.h	/^struct mbuf {$/;"	s
mbuf_bytecount	rtems/rtems_bsdnet.h	/^	unsigned long		mbuf_bytecount;		\/* 64 kbytes	*\/$/;"	m	struct:rtems_bsdnet_config
mbuf_cluster_bytecount	rtems/rtems_bsdnet.h	/^	unsigned long		mbuf_cluster_bytecount;	\/* 128 kbytes	*\/$/;"	m	struct:rtems_bsdnet_config
mcl_buf	sys/mbuf.h	/^	char	mcl_buf[MCLBYTES];$/;"	m	union:mcluster
mcl_next	sys/mbuf.h	/^	union	mcluster *mcl_next;$/;"	m	union:mcluster	typeref:union:mcluster::mcluster
mcluster	sys/mbuf.h	/^union mcluster {$/;"	u
md_flags	rtems/rtems_bsdnet_internal.h	/^	int	md_flags;$/;"	m	struct:mdproc
md_regs	rtems/rtems_bsdnet_internal.h	/^	int	*md_regs;$/;"	m	struct:mdproc
mdio_r	rtems/rtems_mii_ioctl.h	/^  rtems_mdio_read_func mdio_r;$/;"	m	struct:rtems_mdio_info
mdio_w	rtems/rtems_mii_ioctl.h	/^  rtems_mdio_write_func mdio_w;$/;"	m	struct:rtems_mdio_info
mdproc	rtems/rtems_bsdnet_internal.h	/^struct mdproc {$/;"	s
metric	net/rtsock.c	359;"	d	file:
metric	net/rtsock.c	368;"	d	file:
mfc	netinet/ip_mroute.h	/^struct mfc {$/;"	s
mfc_byte_cnt	netinet/ip_mroute.h	/^    u_long	    mfc_byte_cnt;		\/* byte count for src-grp    *\/$/;"	m	struct:mfc
mfc_expire	netinet/ip_mroute.h	/^    int		    mfc_expire;			\/* time to clean entry up    *\/$/;"	m	struct:mfc
mfc_last_assert	netinet/ip_mroute.h	/^    struct timeval  mfc_last_assert;		\/* last time I sent an assert*\/$/;"	m	struct:mfc	typeref:struct:mfc::timeval
mfc_mcastgrp	netinet/ip_mroute.h	/^    struct in_addr  mfc_mcastgrp;  		\/* multicast group associated*\/$/;"	m	struct:mfc	typeref:struct:mfc::in_addr
mfc_origin	netinet/ip_mroute.h	/^    struct in_addr  mfc_origin;	 		\/* IP origin of mcasts   *\/$/;"	m	struct:mfc	typeref:struct:mfc::in_addr
mfc_parent	netinet/ip_mroute.h	/^    vifi_t	    mfc_parent; 		\/* incoming vif              *\/$/;"	m	struct:mfc
mfc_pkt_cnt	netinet/ip_mroute.h	/^    u_long	    mfc_pkt_cnt;		\/* pkt count for src-grp     *\/$/;"	m	struct:mfc
mfc_ttls	netinet/ip_mroute.h	/^    u_char	    mfc_ttls[MAXVIFS]; 		\/* forwarding ttls on vifs   *\/$/;"	m	struct:mfc
mfc_wrong_if	netinet/ip_mroute.h	/^    u_long	    mfc_wrong_if;		\/* wrong if for src-grp	     *\/$/;"	m	struct:mfc
mfcc_mcastgrp	netinet/ip_mroute.h	/^    struct in_addr  mfcc_mcastgrp; 		\/* multicast group associated*\/$/;"	m	struct:mfcctl	typeref:struct:mfcctl::in_addr
mfcc_origin	netinet/ip_mroute.h	/^    struct in_addr  mfcc_origin;		\/* ip origin of mcasts       *\/$/;"	m	struct:mfcctl	typeref:struct:mfcctl::in_addr
mfcc_parent	netinet/ip_mroute.h	/^    vifi_t	    mfcc_parent;   		\/* incoming vif              *\/$/;"	m	struct:mfcctl
mfcc_ttls	netinet/ip_mroute.h	/^    u_char	    mfcc_ttls[MAXVIFS]; 	\/* forwarding ttls on vifs   *\/$/;"	m	struct:mfcctl
mfcctl	netinet/ip_mroute.h	/^struct mfcctl {$/;"	s
mfctable	netinet/ip_mroute.c	/^static struct mbuf    *mfctable[MFCTBLSIZ];$/;"	v	typeref:struct:mbuf	file:
mh_data	sys/mbuf.h	/^	caddr_t	mh_data;		\/* location of data *\/$/;"	m	struct:m_hdr
mh_flags	sys/mbuf.h	/^	int	mh_flags;		\/* flags; see below *\/$/;"	m	struct:m_hdr
mh_len	sys/mbuf.h	/^	int	mh_len;			\/* amount of data in this mbuf *\/$/;"	m	struct:m_hdr
mh_next	sys/mbuf.h	/^	struct	mbuf *mh_next;		\/* next buffer in chain *\/$/;"	m	struct:m_hdr	typeref:struct:m_hdr::mbuf
mh_nextpkt	sys/mbuf.h	/^	struct	mbuf *mh_nextpkt;	\/* next chain in queue\/record *\/$/;"	m	struct:m_hdr	typeref:struct:m_hdr::mbuf
mh_type	sys/mbuf.h	/^	short	mh_type;		\/* type of data in this mbuf *\/$/;"	m	struct:m_hdr
microtime	rtems/rtems_bsdnet_internal.h	65;"	d
middlechar	libc/res_comp.c	147;"	d	file:
min	sys/libkern.h	/^static __inline u_int min(u_int a, u_int b) { return (a < b ? a : b); }$/;"	f
minor	rtems/rtems_bsdnet_internal.h	103;"	d
mk_head	netinet/in.c	/^	struct in_multihead mk_head;$/;"	m	struct:multi_kludge	typeref:struct:multi_kludge::in_multihead	file:
mk_ifp	netinet/in.c	/^	struct ifnet *mk_ifp;$/;"	m	struct:multi_kludge	typeref:struct:multi_kludge::ifnet	file:
mklower	libc/ns_name.c	/^mklower(int ch) {$/;"	f	file:
mode	net/if_ppp.h	/^    enum NPmode	mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode
mode	rtems/mkrootfs.c	/^  mode_t      mode;$/;"	m	struct:rtems_rootfs_dir_table	file:
modenames	arpa/ftp.h	/^char *modenames[] =  {"0", "Stream", "Block", "Compressed" };$/;"	v
mrt_ioctl	netinet/ip_mroute.c	/^int (*mrt_ioctl)(int, caddr_t) = X_mrt_ioctl;$/;"	v
mrt_ioctl	netinet/ip_mroute.c	/^int (*mrt_ioctl)(int, caddr_t, struct proc *) = _mrt_ioctl;$/;"	v
mrtdebug	netinet/ip_mroute.c	/^static u_int	mrtdebug = 0;	  \/* debug level 	*\/$/;"	v	file:
mrts_bad_tunnel	netinet/ip_mroute.h	/^    u_long	mrts_bad_tunnel;	\/* malformed tunnel options        *\/$/;"	m	struct:mrtstat
mrts_cache_cleanups	netinet/ip_mroute.h	/^    u_long	mrts_cache_cleanups;	\/* # entries with no upcalls 	   *\/$/;"	m	struct:mrtstat
mrts_cant_tunnel	netinet/ip_mroute.h	/^    u_long	mrts_cant_tunnel;	\/* no room for tunnel options      *\/$/;"	m	struct:mrtstat
mrts_drop_sel	netinet/ip_mroute.h	/^    u_long  	mrts_drop_sel;     	\/* pkts dropped selectively        *\/$/;"	m	struct:mrtstat
mrts_mfc_lookups	netinet/ip_mroute.h	/^    u_long	mrts_mfc_lookups;	\/* # forw. cache hash table hits   *\/$/;"	m	struct:mrtstat
mrts_mfc_misses	netinet/ip_mroute.h	/^    u_long	mrts_mfc_misses;	\/* # forw. cache hash table misses *\/$/;"	m	struct:mrtstat
mrts_no_route	netinet/ip_mroute.h	/^    u_long	mrts_no_route;		\/* no route for packet's origin    *\/$/;"	m	struct:mrtstat
mrts_pkt2large	netinet/ip_mroute.h	/^    u_long  	mrts_pkt2large;     	\/* pkts dropped - size > BKT SIZE  *\/$/;"	m	struct:mrtstat
mrts_q_overflow	netinet/ip_mroute.h	/^    u_long  	mrts_q_overflow;    	\/* pkts dropped - Q overflow       *\/$/;"	m	struct:mrtstat
mrts_upcalls	netinet/ip_mroute.h	/^    u_long	mrts_upcalls;		\/* # calls to mrouted              *\/$/;"	m	struct:mrtstat
mrts_upq_ovflw	netinet/ip_mroute.h	/^    u_long	mrts_upq_ovflw;		\/* upcall Q overflow		   *\/$/;"	m	struct:mrtstat
mrts_upq_sockfull	netinet/ip_mroute.h	/^    u_long	mrts_upq_sockfull;	\/* upcalls dropped - socket full *\/$/;"	m	struct:mrtstat
mrts_wrong_if	netinet/ip_mroute.h	/^    u_long	mrts_wrong_if;		\/* arrived on wrong interface	   *\/$/;"	m	struct:mrtstat
mrtstat	netinet/ip_mroute.c	/^struct mrtstat	mrtstat;$/;"	v	typeref:struct:mrtstat
mrtstat	netinet/ip_mroute.h	/^struct mrtstat {$/;"	s
msg_accrights	sys/socket.h	/^	char	*msg_accrights;		\/* access rights sent\/received *\/$/;"	m	struct:omsghdr
msg_accrightslen	sys/socket.h	/^	int	msg_accrightslen;$/;"	m	struct:omsghdr
msg_control	sys/socket.h	/^	void		*msg_control;		\/* ancillary data, see below *\/$/;"	m	struct:msghdr
msg_controllen	sys/socket.h	/^	socklen_t	msg_controllen;		\/* ancillary data buffer len *\/$/;"	m	struct:msghdr
msg_flags	sys/socket.h	/^	int	msg_flags;		\/* flags on received message *\/$/;"	m	struct:msghdr
msg_iov	sys/socket.h	/^	struct	iovec *msg_iov;		\/* scatter\/gather array *\/$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iov	sys/socket.h	/^	struct	iovec *msg_iov;		\/* scatter\/gather array *\/$/;"	m	struct:omsghdr	typeref:struct:omsghdr::iovec
msg_iovlen	sys/socket.h	/^	int	msg_iovlen;		\/* # elements in msg_iov *\/$/;"	m	struct:msghdr
msg_iovlen	sys/socket.h	/^	int	msg_iovlen;		\/* # elements in msg_iov *\/$/;"	m	struct:omsghdr
msg_name	sys/socket.h	/^	char	*msg_name;		\/* optional address *\/$/;"	m	struct:omsghdr
msg_name	sys/socket.h	/^	void		*msg_name;		\/* optional address *\/$/;"	m	struct:msghdr
msg_namelen	sys/socket.h	/^	int	msg_namelen;		\/* size of address *\/$/;"	m	struct:omsghdr
msg_namelen	sys/socket.h	/^	socklen_t	msg_namelen;		\/* size of address *\/$/;"	m	struct:msghdr
msghdr	sys/socket.h	/^struct msghdr {$/;"	s
mtocl	sys/mbuf.h	63;"	d
mtod	sys/mbuf.h	61;"	d
mtu	rtems/rtems_bsdnet.h	/^	int		mtu;$/;"	m	struct:rtems_bsdnet_ifconfig
mtx_lock	kern/kern_sysctl.c	75;"	d	file:
mtx_lock	net/raw_cb.c	54;"	d	file:
mtx_unlock	kern/kern_sysctl.c	76;"	d	file:
mtx_unlock	net/raw_cb.c	55;"	d	file:
multi_kludge	netinet/in.c	/^struct multi_kludge {$/;"	s	file:
multicast_decap_if	netinet/ip_mroute.c	/^static struct ifnet multicast_decap_if[MAXVIFS];$/;"	v	typeref:struct:ifnet	file:
multicast_encap_iphdr	netinet/ip_mroute.c	/^static struct ip multicast_encap_iphdr = {$/;"	v	typeref:struct:ip	file:
myAddress	lib/tftpDriver.c	/^    struct sockaddr_in  myAddress;$/;"	m	struct:tftpStream	typeref:struct:tftpStream::sockaddr_in	file:
my_hostnam	nfsclient/nfsdiskless.h	/^	char		my_hostnam[MAXHOSTNAMELEN]; \/* Client host name *\/$/;"	m	struct:nfs_diskless
my_hostnam	nfsclient/nfsdiskless.h	/^	char		my_hostnam[MAXHOSTNAMELEN]; \/* Client host name *\/$/;"	m	struct:nfsv3_diskless
mygateway	nfsclient/nfsdiskless.h	/^	struct sockaddr_in mygateway;		\/* Default gateway *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::sockaddr_in
mygateway	nfsclient/nfsdiskless.h	/^	struct sockaddr_in mygateway;		\/* Default gateway *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::sockaddr_in
myif	nfsclient/nfsdiskless.h	/^	struct ifaliasreq myif;			\/* Default interface *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::ifaliasreq
myif	nfsclient/nfsdiskless.h	/^	struct ifaliasreq myif;			\/* Default interface *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::ifaliasreq
nStreams	lib/tftpDriver.c	/^  int nStreams;$/;"	m	struct:tftpfs_info_s	file:
n_addrtype	netdb.h	/^	int		n_addrtype;	\/* net address type *\/$/;"	m	struct:netent
n_aliases	netdb.h	/^	char		**n_aliases;	\/* alias list *\/$/;"	m	struct:netent
n_long	netinet/in_systm.h	/^typedef u_int32_t n_long;		\/* long as received from the net *\/$/;"	t
n_name	netdb.h	/^	char		*n_name;	\/* official name of net *\/$/;"	m	struct:netent
n_net	netdb.h	/^	uint32_t	n_net;		\/* network # *\/$/;"	m	struct:netent
n_short	netinet/in_systm.h	/^typedef u_int16_t n_short;		\/* short as received from the net *\/$/;"	t
n_time	netinet/in_systm.h	/^typedef	u_int32_t n_time;		\/* ms since 00:00 GMT, byte rev *\/$/;"	t
name	arpa/nameser.h	/^	char		name[NS_MAXDNAME];	\/* XXX need to malloc *\/$/;"	m	struct:__ns_rr
name	kern/kern_sysctl.c	/^	int	*name;$/;"	m	struct:sysctl_args	file:
name	libc/gethostnamadr.c	/^  const char *name;$/;"	m	struct:__anon27	file:
name	libc/getnetnamadr.c	/^  const char *name;$/;"	m	struct:__anon32	file:
name	netinet/ip_fw.h	/^	    char  name[FW_IFNLEN];$/;"	m	struct:ip_fw_if::__anon2
name	resolv.h	/^	const char *	name;	   \/*%< Its symbolic name, like "MX" *\/$/;"	m	struct:res_sym
name	rtems/mkrootfs.c	/^  const char *name;$/;"	m	struct:rtems_rootfs_dir_table	file:
name	rtems/rtems_bsdnet.h	/^	char		*name;$/;"	m	struct:rtems_bsdnet_ifconfig
name2oid	kern/kern_sysctl.c	/^name2oid (char *name, int *oid, int *len, struct sysctl_oid **oidpp)$/;"	f	file:
name_server	rtems/rtems_bsdnet.h	/^	char			*name_server[3];	\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
namelen	kern/kern_sysctl.c	/^	u_int	namelen;$/;"	m	struct:sysctl_args	file:
ndots	resolv.h	/^	unsigned ndots:4;		\/*%< threshold for initial abs. query *\/$/;"	m	struct:__res_state
net	libc/getnetbyht.c	/^static struct netent net;$/;"	v	typeref:struct:netent	file:
net_aliases	libc/getnetbyht.c	/^static char *net_aliases[MAXALIASES];$/;"	v	file:
net_mask	libc/res_init.c	/^net_mask(		\/* XXX - should really use system's version of this *\/$/;"	f	file:
netent	netdb.h	/^struct	netent {$/;"	s
netf	libc/getnetbyht.c	/^static FILE *netf;$/;"	v	file:
networkDaemon	rtems/rtems_glue.c	/^networkDaemon (void *task_argument)$/;"	f	file:
networkDaemonCpuset	rtems/rtems_glue.c	/^static const cpu_set_t *networkDaemonCpuset = 0;$/;"	v	file:
networkDaemonCpusetSize	rtems/rtems_glue.c	/^static size_t          networkDaemonCpusetSize = 0;$/;"	v	file:
networkDaemonPriority	rtems/rtems_glue.c	/^static uint32_t   networkDaemonPriority;$/;"	v	file:
networkDaemonTid	rtems/rtems_glue.c	/^static rtems_id networkDaemonTid;$/;"	v	file:
networkSemaphore	rtems/rtems_glue.c	/^static rtems_id networkSemaphore;$/;"	v	file:
network_down_time	rtems/rtems_dhcp_failsafe.c	/^static int network_down_time = RTEMS_DHCP_FAILSAFE_NETWORK_DOWN_TIME;$/;"	v	file:
network_fail_timeout	rtems/rtems_dhcp_failsafe.c	/^static int network_fail_timeout = RTEMS_DHCP_FAILSAFE_NETWORK_FAIL_TIMEOUT;$/;"	v	file:
network_task_cpuset	rtems/rtems_bsdnet.h	/^	const cpu_set_t		*network_task_cpuset;$/;"	m	struct:rtems_bsdnet_config
network_task_cpuset_size	rtems/rtems_bsdnet.h	/^	size_t			network_task_cpuset_size;$/;"	m	struct:rtems_bsdnet_config
network_task_priority	rtems/rtems_bsdnet.h	/^	rtems_task_priority	network_task_priority;	\/* 100		*\/$/;"	m	struct:rtems_bsdnet_config
new	kern/kern_sysctl.c	/^	void	*new;$/;"	m	struct:sysctl_args	file:
newfunc	sys/sysctl.h	/^	int		(*newfunc)(struct sysctl_req *, void *, size_t);$/;"	m	struct:sysctl_req
newidx	sys/sysctl.h	/^	size_t		newidx;$/;"	m	struct:sysctl_req
newlen	kern/kern_sysctl.c	/^	size_t	newlen;$/;"	m	struct:sysctl_args	file:
newlen	sys/sysctl.h	/^	size_t		newlen;$/;"	m	struct:sysctl_req
newptr	sys/sysctl.h	/^	void		*newptr;$/;"	m	struct:sysctl_req
newtask	rtems/rtems_glue.c	/^struct newtask {$/;"	s	file:
nexpire	netinet/ip_mroute.c	/^static u_char		nexpire[MFCTBLSIZ];$/;"	v	file:
next	netinet/ip_var.h	/^	struct	ipq *next,*prev;	\/* to other reass headers *\/$/;"	m	struct:ipq	typeref:struct:ipq::ipq
next	rtems/rtems_bsdnet.h	/^	struct rtems_bsdnet_ifconfig *next;$/;"	m	struct:rtems_bsdnet_ifconfig	typeref:struct:rtems_bsdnet_ifconfig::rtems_bsdnet_ifconfig
nextstop	netinet/in_rmx.c	/^	time_t nextstop;$/;"	m	struct:rtqk_arg	file:
nfds_t	sys/poll.h	/^typedef	unsigned int	nfds_t;$/;"	t
nfs_args	nfsclient/nfsargs.h	/^struct nfs_args {$/;"	s
nfs_diskless	nfsclient/nfsdiskless.h	/^struct nfs_diskless {$/;"	s
nfs_diskless_valid	rtems/rtems_glue.c	/^int nfs_diskless_valid;$/;"	v
nfs_fattr	nfs/nfsproto.h	/^struct nfs_fattr {$/;"	s
nfs_quadconvert	nfs/nfsproto.h	/^union nfs_quadconvert {$/;"	u
nfs_statfs	nfs/nfsproto.h	/^struct nfs_statfs {$/;"	s
nfs_uquad	nfs/nfsproto.h	/^struct nfs_uquad {$/;"	s
nfsfh	nfs/nfsproto.h	/^union nfsfh {$/;"	u
nfsfh_t	nfs/nfsproto.h	/^typedef union nfsfh nfsfh_t;$/;"	t	typeref:union:nfsfh
nfsquad_t	nfs/nfsproto.h	/^typedef union nfs_quadconvert	nfsquad_t;$/;"	t	typeref:union:nfs_quadconvert
nfstime2	nfs/nfsproto.h	/^typedef struct nfsv2_time	nfstime2;$/;"	t	typeref:struct:nfsv2_time
nfstime3	nfs/nfsproto.h	/^typedef struct nfsv3_time	nfstime3;$/;"	t	typeref:struct:nfsv3_time
nfstype	nfs/nfsproto.h	/^	NFSOCK=6, NFFIFO=7 } nfstype;$/;"	t	typeref:enum:__anon8
nfsuint64	nfs/nfsproto.h	/^typedef	struct nfs_uquad	nfsuint64;$/;"	t	typeref:struct:nfs_uquad
nfsuquad	nfs/nfsproto.h	/^	u_int32_t	nfsuquad[2];$/;"	m	struct:nfs_uquad
nfsv2_sattr	nfs/nfsproto.h	/^struct nfsv2_sattr {$/;"	s
nfsv2_sec	nfs/nfsproto.h	/^	u_int32_t	nfsv2_sec;$/;"	m	struct:nfsv2_time
nfsv2_time	nfs/nfsproto.h	/^struct nfsv2_time {$/;"	s
nfsv2_usec	nfs/nfsproto.h	/^	u_int32_t	nfsv2_usec;$/;"	m	struct:nfsv2_time
nfsv2fa_atime	nfs/nfsproto.h	/^			nfstime2	nfsv2fa_atime;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_blocks	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_blocks;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_blocksize	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_blocksize;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_ctime	nfs/nfsproto.h	/^			nfstime2	nfsv2fa_ctime;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_fileid	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_fileid;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_fsid	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_fsid;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_mtime	nfs/nfsproto.h	/^			nfstime2	nfsv2fa_mtime;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_rdev	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_rdev;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2fa_size	nfs/nfsproto.h	/^			u_int32_t	nfsv2fa_size;$/;"	m	struct:nfs_fattr::__anon9::__anon10
nfsv2sf_bavail	nfs/nfsproto.h	/^			u_int32_t	nfsv2sf_bavail;$/;"	m	struct:nfs_statfs::__anon12::__anon13
nfsv2sf_bfree	nfs/nfsproto.h	/^			u_int32_t	nfsv2sf_bfree;$/;"	m	struct:nfs_statfs::__anon12::__anon13
nfsv2sf_blocks	nfs/nfsproto.h	/^			u_int32_t	nfsv2sf_blocks;$/;"	m	struct:nfs_statfs::__anon12::__anon13
nfsv2sf_bsize	nfs/nfsproto.h	/^			u_int32_t	nfsv2sf_bsize;$/;"	m	struct:nfs_statfs::__anon12::__anon13
nfsv2sf_tsize	nfs/nfsproto.h	/^			u_int32_t	nfsv2sf_tsize;$/;"	m	struct:nfs_statfs::__anon12::__anon13
nfsv3_diskless	nfsclient/nfsdiskless.h	/^struct nfsv3_diskless {$/;"	s
nfsv3_fsinfo	nfs/nfsproto.h	/^struct nfsv3_fsinfo {$/;"	s
nfsv3_nsec	nfs/nfsproto.h	/^	u_int32_t	nfsv3_nsec;$/;"	m	struct:nfsv3_time
nfsv3_pathconf	nfs/nfsproto.h	/^struct nfsv3_pathconf {$/;"	s
nfsv3_sattr	nfs/nfsproto.h	/^struct nfsv3_sattr {$/;"	s
nfsv3_sec	nfs/nfsproto.h	/^	u_int32_t	nfsv3_sec;$/;"	m	struct:nfsv3_time
nfsv3_spec	nfs/nfsproto.h	/^struct nfsv3_spec {$/;"	s
nfsv3_time	nfs/nfsproto.h	/^struct nfsv3_time {$/;"	s
nfsv3fa_atime	nfs/nfsproto.h	/^			nfstime3	nfsv3fa_atime;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_ctime	nfs/nfsproto.h	/^			nfstime3	nfsv3fa_ctime;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_fileid	nfs/nfsproto.h	/^			nfsuint64	nfsv3fa_fileid;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_fsid	nfs/nfsproto.h	/^			nfsuint64	nfsv3fa_fsid;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_mtime	nfs/nfsproto.h	/^			nfstime3	nfsv3fa_mtime;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_rdev	nfs/nfsproto.h	/^			nfsv3spec	nfsv3fa_rdev;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_size	nfs/nfsproto.h	/^			nfsuint64	nfsv3fa_size;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3fa_used	nfs/nfsproto.h	/^			nfsuint64	nfsv3fa_used;$/;"	m	struct:nfs_fattr::__anon9::__anon11
nfsv3sf_abytes	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_abytes;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_afiles	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_afiles;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_fbytes	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_fbytes;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_ffiles	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_ffiles;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_invarsec	nfs/nfsproto.h	/^			u_int32_t	nfsv3sf_invarsec;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_tbytes	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_tbytes;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3sf_tfiles	nfs/nfsproto.h	/^			nfsuint64	nfsv3sf_tfiles;$/;"	m	struct:nfs_statfs::__anon12::__anon14
nfsv3spec	nfs/nfsproto.h	/^typedef	struct nfsv3_spec	nfsv3spec;$/;"	t	typeref:struct:nfsv3_spec
nipq	netinet/ip_input.c	/^static int    nipq = 0;         \/* total # of reass queues *\/$/;"	v	file:
nleft	lib/tftpDriver.c	/^    int     nleft;$/;"	m	struct:tftpStream	file:
nmbclusters	rtems/rtems_glue.c	/^       uint32_t nmbclusters = (128L * 1024L) \/ MCLBYTES;$/;"	v
nmbuf	rtems/rtems_glue.c	/^static uint32_t nmbuf       = (64L * 1024L) \/ MSIZE;$/;"	v	file:
nomb	kern/uipc_socket2.c	754;"	d	file:
nop	netinet/ip_input.c	/^	char	nop;				\/* one NOP to align *\/$/;"	m	struct:ip_srcrt	file:
normal_chars	net/radix.c	/^static char normal_chars[] = {0, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, -1};$/;"	v	file:
now_unused	net/if_arp.h	/^	int	now_unused;	\/* XXX was length of ac_multiaddrs list *\/$/;"	m	struct:arpcom
npioctl	net/if_ppp.h	/^struct npioctl {$/;"	s
ns1	libc/res_update.c	/^struct ns1 {$/;"	s	file:
ns_c_any	arpa/nameser.h	/^	ns_c_any = 255,		\/* Wildcard match. *\/$/;"	e	enum:__ns_class
ns_c_chaos	arpa/nameser.h	/^	ns_c_chaos = 3,		\/* MIT Chaos-net. *\/$/;"	e	enum:__ns_class
ns_c_hs	arpa/nameser.h	/^	ns_c_hs = 4,		\/* MIT Hesiod. *\/$/;"	e	enum:__ns_class
ns_c_in	arpa/nameser.h	/^	ns_c_in = 1,		\/* Internet. *\/$/;"	e	enum:__ns_class
ns_c_max	arpa/nameser.h	/^	ns_c_max = 65536$/;"	e	enum:__ns_class
ns_c_none	arpa/nameser.h	/^	ns_c_none = 254,	\/* for prereq. sections in update requests *\/$/;"	e	enum:__ns_class
ns_class	arpa/nameser.h	/^} ns_class;$/;"	t	typeref:enum:__ns_class
ns_count	net/route.h	/^	int	ns_count;$/;"	m	struct:route_cb
ns_f_aa	arpa/nameser.h	/^	ns_f_aa,		\/* Authoritative Answer. *\/$/;"	e	enum:__ns_flag
ns_f_ad	arpa/nameser.h	/^	ns_f_ad,		\/* Authentic Data (DNSSEC). *\/$/;"	e	enum:__ns_flag
ns_f_cd	arpa/nameser.h	/^	ns_f_cd,		\/* Checking Disabled (DNSSEC). *\/$/;"	e	enum:__ns_flag
ns_f_max	arpa/nameser.h	/^	ns_f_max$/;"	e	enum:__ns_flag
ns_f_opcode	arpa/nameser.h	/^	ns_f_opcode,		\/* Operation code. *\/$/;"	e	enum:__ns_flag
ns_f_qr	arpa/nameser.h	/^	ns_f_qr,		\/* Question\/Response. *\/$/;"	e	enum:__ns_flag
ns_f_ra	arpa/nameser.h	/^	ns_f_ra,		\/* Recursion Available. *\/$/;"	e	enum:__ns_flag
ns_f_rcode	arpa/nameser.h	/^	ns_f_rcode,		\/* Response code. *\/$/;"	e	enum:__ns_flag
ns_f_rd	arpa/nameser.h	/^	ns_f_rd,		\/* Recursion Desired. *\/$/;"	e	enum:__ns_flag
ns_f_tc	arpa/nameser.h	/^	ns_f_tc,		\/* Truncation occurred. *\/$/;"	e	enum:__ns_flag
ns_f_z	arpa/nameser.h	/^	ns_f_z,			\/* MBZ. *\/$/;"	e	enum:__ns_flag
ns_flag	arpa/nameser.h	/^} ns_flag;$/;"	t	typeref:enum:__ns_flag
ns_format_ttl	arpa/nameser.h	409;"	d
ns_format_ttl	libc/ns_ttl.c	/^ns_format_ttl(u_long src, char *dst, size_t dstlen) {$/;"	f
ns_get16	arpa/nameser.h	401;"	d
ns_get16	libc/ns_netint.c	/^ns_get16(const u_char *src) {$/;"	f
ns_get32	arpa/nameser.h	402;"	d
ns_get32	libc/ns_netint.c	/^ns_get32(const u_char *src) {$/;"	f
ns_initparse	arpa/nameser.h	405;"	d
ns_initparse	libc/ns_parse.c	/^ns_initparse(const u_char *msg, int msglen, ns_msg *handle) {$/;"	f
ns_msg	arpa/nameser.h	/^} ns_msg;$/;"	t	typeref:struct:__ns_msg
ns_msg_base	arpa/nameser.h	133;"	d
ns_msg_count	arpa/nameser.h	136;"	d
ns_msg_end	arpa/nameser.h	134;"	d
ns_msg_getflag	arpa/nameser.h	128;"	d
ns_msg_id	arpa/nameser.h	132;"	d
ns_msg_size	arpa/nameser.h	135;"	d
ns_name_compress	arpa/nameser.h	415;"	d
ns_name_compress	libc/ns_name.c	/^ns_name_compress(const char *src, u_char *dst, size_t dstsiz,$/;"	f
ns_name_ntop	arpa/nameser.h	411;"	d
ns_name_ntop	libc/ns_name.c	/^ns_name_ntop(const u_char *src, char *dst, size_t dstsiz) {$/;"	f
ns_name_pack	arpa/nameser.h	414;"	d
ns_name_pack	libc/ns_name.c	/^ns_name_pack(const u_char *src, u_char *dst, int dstsiz,$/;"	f
ns_name_pton	arpa/nameser.h	412;"	d
ns_name_pton	libc/ns_name.c	/^ns_name_pton(const char *src, u_char *dst, size_t dstsiz) {$/;"	f
ns_name_skip	libc/ns_name.c	/^ns_name_skip(const u_char **ptrptr, const u_char *eom) {$/;"	f
ns_name_uncompress	arpa/nameser.h	416;"	d
ns_name_uncompress	libc/ns_name.c	/^ns_name_uncompress(const u_char *msg, const u_char *eom, const u_char *src,$/;"	f
ns_name_unpack	arpa/nameser.h	413;"	d
ns_name_unpack	libc/ns_name.c	/^ns_name_unpack(const u_char *msg, const u_char *eom, const u_char *src,$/;"	f
ns_o_iquery	arpa/nameser.h	/^	ns_o_iquery = 1,	\/* Inverse query (deprecated\/unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_max	arpa/nameser.h	/^	ns_o_max = 6$/;"	e	enum:__ns_opcode
ns_o_notify	arpa/nameser.h	/^	ns_o_notify = 4,	\/* Zone change notification. *\/$/;"	e	enum:__ns_opcode
ns_o_query	arpa/nameser.h	/^	ns_o_query = 0,		\/* Standard query. *\/$/;"	e	enum:__ns_opcode
ns_o_status	arpa/nameser.h	/^	ns_o_status = 2,	\/* Name server status query (unsupported). *\/$/;"	e	enum:__ns_opcode
ns_o_update	arpa/nameser.h	/^	ns_o_update = 5,	\/* Zone update message. *\/$/;"	e	enum:__ns_opcode
ns_opcode	arpa/nameser.h	/^} ns_opcode;$/;"	t	typeref:enum:__ns_opcode
ns_parse_ttl	arpa/nameser.h	410;"	d
ns_parse_ttl	libc/ns_ttl.c	/^ns_parse_ttl(const char *src, u_long *dst) {$/;"	f
ns_parserr	arpa/nameser.h	406;"	d
ns_parserr	libc/ns_parse.c	/^ns_parserr(ns_msg *handle, ns_sect section, int rrnum, ns_rr *rr) {$/;"	f
ns_put16	arpa/nameser.h	403;"	d
ns_put16	libc/ns_netint.c	/^ns_put16(u_int src, u_char *dst) {$/;"	f
ns_put32	arpa/nameser.h	404;"	d
ns_put32	libc/ns_netint.c	/^ns_put32(u_long src, u_char *dst) {$/;"	f
ns_r_formerr	arpa/nameser.h	/^	ns_r_formerr = 1,	\/* Format error. *\/$/;"	e	enum:__ns_rcode
ns_r_max	arpa/nameser.h	/^	ns_r_max = 11$/;"	e	enum:__ns_rcode
ns_r_noerror	arpa/nameser.h	/^	ns_r_noerror = 0,	\/* No error occurred. *\/$/;"	e	enum:__ns_rcode
ns_r_notauth	arpa/nameser.h	/^	ns_r_notauth = 9,	\/* Not authoritative for zone *\/$/;"	e	enum:__ns_rcode
ns_r_notimpl	arpa/nameser.h	/^	ns_r_notimpl = 4,	\/* Unimplemented. *\/$/;"	e	enum:__ns_rcode
ns_r_notzone	arpa/nameser.h	/^	ns_r_notzone = 10,	\/* Zone of record different from zone section *\/$/;"	e	enum:__ns_rcode
ns_r_nxdomain	arpa/nameser.h	/^	ns_r_nxdomain = 3,	\/* Name error. *\/$/;"	e	enum:__ns_rcode
ns_r_nxrrset	arpa/nameser.h	/^	ns_r_nxrrset = 8,	\/* RRset does not exist *\/$/;"	e	enum:__ns_rcode
ns_r_refused	arpa/nameser.h	/^	ns_r_refused = 5,	\/* Operation refused. *\/$/;"	e	enum:__ns_rcode
ns_r_servfail	arpa/nameser.h	/^	ns_r_servfail = 2,	\/* Server failure. *\/$/;"	e	enum:__ns_rcode
ns_r_yxdomain	arpa/nameser.h	/^	ns_r_yxdomain = 6,	\/* Name exists *\/$/;"	e	enum:__ns_rcode
ns_r_yxrrset	arpa/nameser.h	/^	ns_r_yxrrset = 7,	\/* RRset exists *\/$/;"	e	enum:__ns_rcode
ns_rcode	arpa/nameser.h	/^} ns_rcode;$/;"	t	typeref:enum:__ns_rcode
ns_rr	arpa/nameser.h	/^} ns_rr;$/;"	t	typeref:struct:__ns_rr
ns_rr_class	arpa/nameser.h	153;"	d
ns_rr_name	arpa/nameser.h	151;"	d
ns_rr_rdata	arpa/nameser.h	156;"	d
ns_rr_rdlen	arpa/nameser.h	155;"	d
ns_rr_ttl	arpa/nameser.h	154;"	d
ns_rr_type	arpa/nameser.h	152;"	d
ns_s_an	arpa/nameser.h	/^	ns_s_an = 1,		\/* Query: Answer. *\/$/;"	e	enum:__ns_sect
ns_s_ar	arpa/nameser.h	/^	ns_s_ar = 3,		\/* Query|Update: Additional records. *\/$/;"	e	enum:__ns_sect
ns_s_max	arpa/nameser.h	/^	ns_s_max = 4$/;"	e	enum:__ns_sect
ns_s_ns	arpa/nameser.h	/^	ns_s_ns = 2,		\/* Query: Name servers. *\/$/;"	e	enum:__ns_sect
ns_s_pr	arpa/nameser.h	/^	ns_s_pr = 1,		\/* Update: Prerequisites. *\/$/;"	e	enum:__ns_sect
ns_s_qd	arpa/nameser.h	/^	ns_s_qd = 0,		\/* Query: Question. *\/$/;"	e	enum:__ns_sect
ns_s_ud	arpa/nameser.h	/^	ns_s_ud = 2,		\/* Update: Update. *\/$/;"	e	enum:__ns_sect
ns_s_zn	arpa/nameser.h	/^	ns_s_zn = 0,		\/* Update: Zone. *\/$/;"	e	enum:__ns_sect
ns_sect	arpa/nameser.h	/^} ns_sect;$/;"	t	typeref:enum:__ns_sect
ns_sprintrr	arpa/nameser.h	407;"	d
ns_sprintrr	libc/ns_print.c	/^ns_sprintrr(const ns_msg *handle, const ns_rr *rr,$/;"	f
ns_sprintrrf	arpa/nameser.h	408;"	d
ns_sprintrrf	libc/ns_print.c	/^ns_sprintrrf(const u_char *msg, size_t msglen,$/;"	f
ns_t_a	arpa/nameser.h	/^	ns_t_a = 1,		\/* Host address. *\/$/;"	e	enum:__ns_type
ns_t_aaaa	arpa/nameser.h	/^	ns_t_aaaa = 28,		\/* Ip6 Address. *\/$/;"	e	enum:__ns_type
ns_t_afsdb	arpa/nameser.h	/^	ns_t_afsdb = 18,	\/* AFS cell database. *\/$/;"	e	enum:__ns_type
ns_t_any	arpa/nameser.h	/^	ns_t_any = 255,		\/* Wildcard match. *\/$/;"	e	enum:__ns_type
ns_t_atma	arpa/nameser.h	/^	ns_t_atma = 34,		\/* ATM Address *\/$/;"	e	enum:__ns_type
ns_t_axfr	arpa/nameser.h	/^	ns_t_axfr = 252,	\/* Transfer zone of authority. *\/$/;"	e	enum:__ns_type
ns_t_cname	arpa/nameser.h	/^	ns_t_cname = 5,		\/* Canonical name. *\/$/;"	e	enum:__ns_type
ns_t_eid	arpa/nameser.h	/^	ns_t_eid = 31,		\/* Endpoint identifier. *\/$/;"	e	enum:__ns_type
ns_t_gpos	arpa/nameser.h	/^	ns_t_gpos = 27,		\/* Geographical position (withdrawn). *\/$/;"	e	enum:__ns_type
ns_t_hinfo	arpa/nameser.h	/^	ns_t_hinfo = 13,	\/* Host information. *\/$/;"	e	enum:__ns_type
ns_t_isdn	arpa/nameser.h	/^	ns_t_isdn = 20,		\/* ISDN calling address. *\/$/;"	e	enum:__ns_type
ns_t_ixfr	arpa/nameser.h	/^	ns_t_ixfr = 251,	\/* Incremental zone transfer. *\/$/;"	e	enum:__ns_type
ns_t_key	arpa/nameser.h	/^	ns_t_key = 25,		\/* Security key. *\/$/;"	e	enum:__ns_type
ns_t_loc	arpa/nameser.h	/^	ns_t_loc = 29,		\/* Location Information. *\/$/;"	e	enum:__ns_type
ns_t_maila	arpa/nameser.h	/^	ns_t_maila = 254,	\/* Transfer mail agent records. *\/$/;"	e	enum:__ns_type
ns_t_mailb	arpa/nameser.h	/^	ns_t_mailb = 253,	\/* Transfer mailbox records. *\/$/;"	e	enum:__ns_type
ns_t_max	arpa/nameser.h	/^	ns_t_max = 65536$/;"	e	enum:__ns_type
ns_t_mb	arpa/nameser.h	/^	ns_t_mb = 7,		\/* Mailbox domain name. *\/$/;"	e	enum:__ns_type
ns_t_md	arpa/nameser.h	/^	ns_t_md = 3,		\/* Mail destination. *\/$/;"	e	enum:__ns_type
ns_t_mf	arpa/nameser.h	/^	ns_t_mf = 4,		\/* Mail forwarder. *\/$/;"	e	enum:__ns_type
ns_t_mg	arpa/nameser.h	/^	ns_t_mg = 8,		\/* Mail group member. *\/$/;"	e	enum:__ns_type
ns_t_minfo	arpa/nameser.h	/^	ns_t_minfo = 14,	\/* Mailbox information. *\/$/;"	e	enum:__ns_type
ns_t_mr	arpa/nameser.h	/^	ns_t_mr = 9,		\/* Mail rename name. *\/$/;"	e	enum:__ns_type
ns_t_mx	arpa/nameser.h	/^	ns_t_mx = 15,		\/* Mail routing information. *\/$/;"	e	enum:__ns_type
ns_t_naptr	arpa/nameser.h	/^	ns_t_naptr = 35,	\/* Naming Authority PoinTeR *\/$/;"	e	enum:__ns_type
ns_t_nimloc	arpa/nameser.h	/^	ns_t_nimloc = 32,	\/* Nimrod Locator. *\/$/;"	e	enum:__ns_type
ns_t_ns	arpa/nameser.h	/^	ns_t_ns = 2,		\/* Authoritative server. *\/$/;"	e	enum:__ns_type
ns_t_nsap	arpa/nameser.h	/^	ns_t_nsap = 22,		\/* NSAP address. *\/$/;"	e	enum:__ns_type
ns_t_nsap_ptr	arpa/nameser.h	/^	ns_t_nsap_ptr = 23,	\/* Reverse NSAP lookup (deprecated). *\/$/;"	e	enum:__ns_type
ns_t_null	arpa/nameser.h	/^	ns_t_null = 10,		\/* Null resource record. *\/$/;"	e	enum:__ns_type
ns_t_nxt	arpa/nameser.h	/^	ns_t_nxt = 30,		\/* Next domain (security). *\/$/;"	e	enum:__ns_type
ns_t_opt	arpa/nameser.h	/^	ns_t_opt = 41,		\/* OPT pseudo-RR, RFC2761 *\/$/;"	e	enum:__ns_type
ns_t_ptr	arpa/nameser.h	/^	ns_t_ptr = 12,		\/* Domain name pointer. *\/$/;"	e	enum:__ns_type
ns_t_px	arpa/nameser.h	/^	ns_t_px = 26,		\/* X.400 mail mapping. *\/$/;"	e	enum:__ns_type
ns_t_rp	arpa/nameser.h	/^	ns_t_rp = 17,		\/* Responsible person. *\/$/;"	e	enum:__ns_type
ns_t_rt	arpa/nameser.h	/^	ns_t_rt = 21,		\/* Router. *\/$/;"	e	enum:__ns_type
ns_t_sig	arpa/nameser.h	/^	ns_t_sig = 24,		\/* Security signature. *\/$/;"	e	enum:__ns_type
ns_t_soa	arpa/nameser.h	/^	ns_t_soa = 6,		\/* Start of authority zone. *\/$/;"	e	enum:__ns_type
ns_t_srv	arpa/nameser.h	/^	ns_t_srv = 33,		\/* Server Selection. *\/$/;"	e	enum:__ns_type
ns_t_txt	arpa/nameser.h	/^	ns_t_txt = 16,		\/* Text strings. *\/$/;"	e	enum:__ns_type
ns_t_wks	arpa/nameser.h	/^	ns_t_wks = 11,		\/* Well known service. *\/$/;"	e	enum:__ns_type
ns_t_x25	arpa/nameser.h	/^	ns_t_x25 = 19,		\/* X_25 calling address. *\/$/;"	e	enum:__ns_type
ns_type	arpa/nameser.h	/^} ns_type;$/;"	t	typeref:enum:__ns_type
ns_uop_add	arpa/nameser.h	/^	ns_uop_add = 1,$/;"	e	enum:__ns_update_operation
ns_uop_delete	arpa/nameser.h	/^	ns_uop_delete = 0,$/;"	e	enum:__ns_update_operation
ns_uop_max	arpa/nameser.h	/^	ns_uop_max = 2$/;"	e	enum:__ns_update_operation
ns_update_operation	arpa/nameser.h	/^} ns_update_operation;$/;"	t	typeref:enum:__ns_update_operation
ns_updrec	arpa/nameser.h	/^struct ns_updrec {$/;"	s
ns_updrec	arpa/nameser.h	/^typedef struct ns_updrec ns_updrec;$/;"	t	typeref:struct:ns_updrec
nsaddr	resolv.h	131;"	d
nsaddr1	libc/res_update.c	/^	struct in_addr nsaddr1;$/;"	m	struct:ns1	typeref:struct:ns1::in_addr	file:
nsaddr_list	resolv.h	/^		nsaddr_list[MAXNS];	\/*%< address of name server *\/$/;"	m	struct:__res_state	typeref:struct:__res_state::sockaddr_in
nscount	arpa/nameser_compat.h	/^	unsigned	nscount :16;	\/* number of authority entries *\/$/;"	m	struct:__anon47
nscount	resolv.h	/^	int	nscount;		\/*%< number of name servers *\/$/;"	m	struct:__res_state
nsname	libc/res_update.c	/^	char nsname[MAXDNAME];$/;"	m	struct:ns1	file:
nsort	resolv.h	/^	unsigned nsort:4;		\/*%< number of elements in sort_list[] *\/$/;"	m	struct:__res_state
ntp	lib/rtems_bsdnet_ntp.c	/^	struct ntpPacketSmall	ntp;$/;"	m	struct:ntpPacket	typeref:struct:ntpPacket::ntpPacketSmall	file:
ntpPacket	lib/rtems_bsdnet_ntp.c	/^struct ntpPacket {$/;"	s	file:
ntpPacketSmall	rtems/rtems_bsdnet.h	/^struct ntpPacketSmall {$/;"	s
ntp_server	rtems/rtems_bsdnet.h	/^	char			*ntp_server[3];		\/* BOOTP	*\/$/;"	m	struct:rtems_bsdnet_config
num_pages	vm/vm_param.h	120;"	d
num_rcv_x2	net/if_llc.h	/^		u_int8_t num_rcv_x2;$/;"	m	struct:llc::__anon40::__anon42
num_rcv_x2	net/if_llc.h	/^		u_int8_t num_rcv_x2;$/;"	m	struct:llc::__anon40::__anon43
num_snd_x2	net/if_llc.h	/^		u_int8_t num_snd_x2;$/;"	m	struct:llc::__anon40::__anon42
number	resolv.h	/^	int		number;	   \/*%< Identifying number, like T_MX *\/$/;"	m	struct:res_sym
numvifs	netinet/ip_mroute.c	/^static vifi_t	   numvifs = 0;$/;"	v	file:
nused	lib/tftpDriver.c	/^    int     nused;$/;"	m	struct:tftpStream	file:
obytes	netinet/ip_mroute.h	/^    u_long obytes;		\/* Output byte count on vif		*\/$/;"	m	struct:sioc_vif_req
ocount	netinet/ip_mroute.h	/^    u_long ocount;		\/* Output packet count on vif		*\/$/;"	m	struct:sioc_vif_req
octet	net/ethernet.h	/^	u_char octet[ETHER_ADDR_LEN];$/;"	m	struct:ether_addr
ogetkerninfo	kern/kern_sysctl.c	/^ogetkerninfo(struct thread *td, struct getkerninfo_args *uap)$/;"	f
oid_arg1	sys/sysctl.h	/^	void		*oid_arg1;$/;"	m	struct:sysctl_oid
oid_arg2	sys/sysctl.h	/^	int32_t		oid_arg2;$/;"	m	struct:sysctl_oid
oid_fmt	sys/sysctl.h	/^	const char	*oid_fmt;$/;"	m	struct:sysctl_oid
oid_handler	sys/sysctl.h	/^	int 		(*oid_handler)(SYSCTL_HANDLER_ARGS);$/;"	m	struct:sysctl_oid
oid_kind	sys/sysctl.h	/^	uint32_t	oid_kind;$/;"	m	struct:sysctl_oid
oid_link	sys/sysctl.h	/^	SLIST_ENTRY(sysctl_oid) oid_link;$/;"	m	struct:sysctl_oid
oid_name	sys/sysctl.h	/^	const char	*oid_name;$/;"	m	struct:sysctl_oid
oid_number	sys/sysctl.h	/^	int		oid_number;$/;"	m	struct:sysctl_oid
oid_parent	sys/sysctl.h	/^	struct sysctl_oid_list *oid_parent;$/;"	m	struct:sysctl_oid	typeref:struct:sysctl_oid::sysctl_oid_list
oid_refcnt	sys/sysctl.h	/^	int		oid_refcnt;$/;"	m	struct:sysctl_oid
old	kern/kern_sysctl.c	/^	void	*old;$/;"	m	struct:sysctl_args	file:
old_abort	kern/uipc_socket2.c	/^old_abort(struct socket *so)$/;"	f	file:
old_accept	kern/uipc_socket2.c	/^old_accept(struct socket *so, struct mbuf *nam)$/;"	f	file:
old_attach	kern/uipc_socket2.c	/^old_attach(struct socket *so, intptr_t proto)$/;"	f	file:
old_bind	kern/uipc_socket2.c	/^old_bind(struct socket *so, struct mbuf *nam)$/;"	f	file:
old_chk_ptr	netinet/ip_fw.c	/^static ip_fw_chk_t *old_chk_ptr;$/;"	v	file:
old_connect	kern/uipc_socket2.c	/^old_connect(struct socket *so, struct mbuf *nam)$/;"	f	file:
old_connect2	kern/uipc_socket2.c	/^old_connect2(struct socket *so1, struct socket *so2)$/;"	f	file:
old_control	kern/uipc_socket2.c	/^old_control(struct socket *so, intptr_t cmd, caddr_t data, struct ifnet *ifp)$/;"	f	file:
old_ctl_ptr	netinet/ip_fw.c	/^static ip_fw_ctl_t *old_ctl_ptr;$/;"	v	file:
old_detach	kern/uipc_socket2.c	/^old_detach(struct socket *so)$/;"	f	file:
old_disconnect	kern/uipc_socket2.c	/^old_disconnect(struct socket *so)$/;"	f	file:
old_listen	kern/uipc_socket2.c	/^old_listen(struct socket *so)$/;"	f	file:
old_peeraddr	kern/uipc_socket2.c	/^old_peeraddr(struct socket *so, struct mbuf *nam)$/;"	f	file:
old_rcvd	kern/uipc_socket2.c	/^old_rcvd(struct socket *so, intptr_t flags)$/;"	f	file:
old_rcvoob	kern/uipc_socket2.c	/^old_rcvoob(struct socket *so, struct mbuf *m, intptr_t flags)$/;"	f	file:
old_send	kern/uipc_socket2.c	/^old_send(struct socket *so, int flags, struct mbuf *m, struct mbuf *addr,$/;"	f	file:
old_sense	kern/uipc_socket2.c	/^old_sense(struct socket *so, struct stat *sb)$/;"	f	file:
old_shutdown	kern/uipc_socket2.c	/^old_shutdown(struct socket *so)$/;"	f	file:
old_sockaddr	kern/uipc_socket2.c	/^old_sockaddr(struct socket *so, struct mbuf *nam)$/;"	f	file:
oldfunc	sys/sysctl.h	/^	int		(*oldfunc)(struct sysctl_req *, const void *, size_t);$/;"	m	struct:sysctl_req
oldidx	sys/sysctl.h	/^	size_t		oldidx;$/;"	m	struct:sysctl_req
oldlen	sys/sysctl.h	/^	size_t		oldlen;$/;"	m	struct:sysctl_req
oldlenp	kern/kern_sysctl.c	/^	size_t	*oldlenp;$/;"	m	struct:sysctl_args	file:
oldptr	sys/sysctl.h	/^	void		*oldptr;$/;"	m	struct:sysctl_req
omsghdr	sys/socket.h	/^struct omsghdr {$/;"	s
op	kern/kern_sysctl.c	/^	int	op;$/;"	m	struct:getkerninfo_args	file:
op	nfs/bootp_subr.c	/^  u_int8_t op;$/;"	m	struct:bootp_packet	file:
op	rtems/rtems_dhcp.c	/^  u_int8_t       op;$/;"	m	struct:dhcp_packet	file:
opcode	arpa/nameser_compat.h	/^	unsigned	opcode :4;	\/* purpose of message *\/$/;"	m	struct:__anon47
opcode	arpa/nameser_compat.h	/^	unsigned	opcode: 4;	\/* purpose of message *\/$/;"	m	struct:__anon47
opcode	lib/tftpDriver.c	/^        uint16_t      opcode;$/;"	m	struct:tftpPacket::tftpACK	file:
opcode	lib/tftpDriver.c	/^        uint16_t      opcode;$/;"	m	struct:tftpPacket::tftpDATA	file:
opcode	lib/tftpDriver.c	/^        uint16_t      opcode;$/;"	m	struct:tftpPacket::tftpERROR	file:
opcode	lib/tftpDriver.c	/^        uint16_t      opcode;$/;"	m	struct:tftpPacket::tftpRWRQ	file:
openlog	lib/syslog.c	/^openlog (const char *ident, int logstat, int logfac)$/;"	f
options	resolv.h	/^	u_long	options;		\/*%< option flags - see below. *\/$/;"	m	struct:__res_state
order	sys/kernel.h	/^	unsigned int	order;			\/* init order within subsystem*\/$/;"	m	struct:sysinit
org_code	net/if_llc.h	/^		u_int8_t  org_code[3];$/;"	m	struct:llc::__anon40::__anon45
originate_timestamp	rtems/rtems_bsdnet.h	/^	struct timestamp	originate_timestamp;$/;"	m	struct:ntpPacketSmall	typeref:struct:ntpPacketSmall::timestamp
ortentry	net/route.h	/^struct ortentry {$/;"	s
osockaddr	sys/socket.h	/^struct osockaddr {$/;"	s
osrelease	kern/kern_mib.c	/^char osrelease[] = RTEMS_VERSION;$/;"	v
ostype	kern/kern_mib.c	/^char ostype[] = "RTEMS";$/;"	v
ovbcopy	rtems/rtems_bsdnet_internal.h	57;"	d
p	net/ppp_defs.h	/^    struct pppstat p;		\/* basic PPP statistics *\/$/;"	m	struct:ppp_stats	typeref:struct:ppp_stats::pppstat
p_aliases	netdb.h	/^	char	**p_aliases;	\/* alias list *\/$/;"	m	struct:protoent
p_cdname	libc/res_debug.c	/^p_cdname(const u_char *cp, const u_char *msg, FILE *file) {$/;"	f
p_cdname	resolv.h	236;"	d
p_cdnname	libc/res_debug.c	/^p_cdnname(const u_char *cp, const u_char *msg, int len, FILE *file) {$/;"	f
p_cdnname	resolv.h	237;"	d
p_class	libc/res_debug.c	/^p_class(int class) {$/;"	f
p_class	resolv.h	239;"	d
p_fqname	libc/res_debug.c	/^p_fqname(const u_char *cp, const u_char *msg, FILE *file) {$/;"	f
p_fqname	resolv.h	240;"	d
p_fqnname	libc/res_debug.c	/^p_fqnname($/;"	f
p_fqnname	resolv.h	241;"	d
p_name	netdb.h	/^	char	*p_name;	\/* official protocol name *\/$/;"	m	struct:protoent
p_option	libc/res_debug.c	/^p_option(u_long option) {$/;"	f
p_option	resolv.h	242;"	d
p_proto	netdb.h	/^	int	p_proto;	\/* protocol # *\/$/;"	m	struct:protoent
p_query	libc/res_debug.c	/^p_query(const u_char *msg) {$/;"	f
p_query	resolv.h	193;"	d
p_secstodate	libc/res_debug.c	/^p_secstodate (u_long secs) {$/;"	f
p_secstodate	resolv.h	243;"	d
p_section	libc/res_debug.c	/^p_section(int section, int opcode) {$/;"	f
p_section	resolv.h	244;"	d
p_time	libc/res_debug.c	/^p_time(u_int32_t value) {$/;"	f
p_time	resolv.h	245;"	d
p_type	libc/res_debug.c	/^p_type(int type) {$/;"	f
p_type	resolv.h	246;"	d
pad	resolv.h	/^	char	pad[72];		\/* on an i386 this means 512b total *\/$/;"	m	struct:__res_state
pad0	kern/kern_sysctl.c	/^	char	*pad0;$/;"	m	struct:__anon48	file:
pad1	kern/kern_sysctl.c	/^	long	pad1;$/;"	m	struct:__anon48	file:
pad10	kern/kern_sysctl.c	/^	long	pad10;$/;"	m	struct:__anon48	file:
pad11	kern/kern_sysctl.c	/^	long	pad11;$/;"	m	struct:__anon48	file:
pad12	kern/kern_sysctl.c	/^	int	pad12;$/;"	m	struct:__anon48	file:
pad13	kern/kern_sysctl.c	/^	long	pad13;$/;"	m	struct:__anon48	file:
pad14	kern/kern_sysctl.c	/^	quad_t	pad14;$/;"	m	struct:__anon48	file:
pad15	kern/kern_sysctl.c	/^	long	pad15;$/;"	m	struct:__anon48	file:
pad16	kern/kern_sysctl.c	/^	struct	timeval pad16;$/;"	m	struct:__anon48	typeref:struct:__anon48::timeval	file:
pad2	kern/kern_sysctl.c	/^	long	pad2;$/;"	m	struct:__anon48	file:
pad3	kern/kern_sysctl.c	/^	long	pad3;$/;"	m	struct:__anon48	file:
pad4	kern/kern_sysctl.c	/^	u_long	pad4;$/;"	m	struct:__anon48	file:
pad5	kern/kern_sysctl.c	/^	u_long	pad5;$/;"	m	struct:__anon48	file:
pad6	kern/kern_sysctl.c	/^	u_long	pad6;$/;"	m	struct:__anon48	file:
pad7	kern/kern_sysctl.c	/^	long	pad7;$/;"	m	struct:__anon48	file:
pad8	kern/kern_sysctl.c	/^	long	pad8;$/;"	m	struct:__anon48	file:
pad9	kern/kern_sysctl.c	/^	char	*pad9;$/;"	m	struct:__anon48	file:
pagecnt	sys/malloc.h	/^		u_short pagecnt;\/* for large allocations, pages alloced *\/$/;"	m	union:kmemusage::__anon52
panic	rtems/rtems_bsdnet_internal.h	62;"	d
paritytab	net/ppp_tty.c	/^static uint32_t paritytab[8] = {$/;"	v	file:
password	lib/ftpfs.c	/^  const char *password;$/;"	m	struct:__anon15	file:
pc_caseinsensitive	nfs/nfsproto.h	/^	u_int32_t	pc_caseinsensitive;$/;"	m	struct:nfsv3_pathconf
pc_casepreserving	nfs/nfsproto.h	/^	u_int32_t	pc_casepreserving;$/;"	m	struct:nfsv3_pathconf
pc_chownrestricted	nfs/nfsproto.h	/^	u_int32_t	pc_chownrestricted;$/;"	m	struct:nfsv3_pathconf
pc_linkmax	nfs/nfsproto.h	/^	u_int32_t	pc_linkmax;$/;"	m	struct:nfsv3_pathconf
pc_namemax	nfs/nfsproto.h	/^	u_int32_t	pc_namemax;$/;"	m	struct:nfsv3_pathconf
pc_notrunc	nfs/nfsproto.h	/^	u_int32_t	pc_notrunc;$/;"	m	struct:nfsv3_pathconf
periodchar	libc/res_comp.c	140;"	d	file:
pf	netinet/tcp_debug.c	141;"	d	file:
pfcode	resolv.h	/^	u_long	pfcode;			\/*%< RES_PRF_ flags - see below. *\/$/;"	m	struct:__res_state
pfctlinput	kern/uipc_domain.c	/^pfctlinput(int cmd, struct sockaddr *sa)$/;"	f
pffasttimo	kern/uipc_domain.c	/^pffasttimo(void *arg)$/;"	f	file:
pffindproto	kern/uipc_domain.c	/^pffindproto(int family, int protocol, int type)$/;"	f
pffindtype	kern/uipc_domain.c	/^pffindtype(int family, int type)$/;"	f
pfslowtimo	kern/uipc_domain.c	/^pfslowtimo(void *arg)$/;"	f	file:
phashinit	kern/kern_subr.c	/^phashinit(elements, type, nentries)$/;"	f
phyint_send	netinet/ip_mroute.c	/^phyint_send(struct ip *ip, struct vif *vifp, struct mbuf *m)$/;"	f	file:
pim_assert	netinet/ip_mroute.c	/^static int pim_assert;$/;"	v	file:
pkbuf	lib/tftpDriver.c	/^    union tftpPacket    pkbuf;$/;"	m	struct:tftpStream	typeref:union:tftpStream::tftpPacket	file:
pksent	rtems/rtems_showroute.c	/^	unsigned long	pksent;$/;"	m	struct:rinfo	file:
pktcnt	netinet/ip_mroute.h	/^    u_long pktcnt;$/;"	m	struct:sioc_sg_req
pkthdr	sys/mbuf.h	/^struct	pkthdr {$/;"	s
poll_interval	rtems/rtems_bsdnet.h	/^	int8_t		poll_interval;$/;"	m	struct:ntpPacketSmall
pollfd	sys/poll.h	/^struct pollfd {$/;"	s
port	rtems/rtems_bsdnet.h	/^	unsigned int	port;   \/* port of the board *\/$/;"	m	struct:rtems_bsdnet_ifconfig
port_match	netinet/ip_fw.c	/^port_match(u_short *portptr, int nports, u_short port, int range_flag)$/;"	f	file:
poweroften	libc/res_debug.c	/^static uint32_t poweroften[10] = {1, 10, 100, 1000, 10000, 100000,$/;"	v	file:
ppp_ccp	net/if_ppp.c	/^ppp_ccp(struct ppp_softc *sc, struct mbuf *m, int rcvd)$/;"	f	file:
ppp_ccp_closed	net/if_ppp.c	/^ppp_ccp_closed(struct ppp_softc *sc)$/;"	f	file:
ppp_comp_stats	net/ppp_defs.h	/^struct ppp_comp_stats {$/;"	s
ppp_compressors	net/if_ppp.c	/^struct compressor *ppp_compressors[8] = {$/;"	v	typeref:struct:compressor
ppp_dequeue	net/if_ppp.c	/^ppp_dequeue(struct ppp_softc *sc)$/;"	f
ppp_ibytes	net/ppp_defs.h	/^    unsigned int ppp_ibytes;	\/* bytes received *\/$/;"	m	struct:pppstat
ppp_idle	net/ppp_defs.h	/^struct ppp_idle {$/;"	s
ppp_ierrors	net/ppp_defs.h	/^    unsigned int ppp_ierrors;	\/* receive errors *\/$/;"	m	struct:pppstat
ppp_init	net/if_ppp.c	/^static void ppp_init(struct ppp_softc *sc)$/;"	f	file:
ppp_inproc	net/if_ppp.c	/^ppp_inproc(struct ppp_softc *sc, struct mbuf *m)$/;"	f	file:
ppp_ipackets	net/ppp_defs.h	/^    unsigned int ppp_ipackets;	\/* packets received *\/$/;"	m	struct:pppstat
ppp_obytes	net/ppp_defs.h	/^    unsigned int ppp_obytes;	\/* bytes sent *\/$/;"	m	struct:pppstat
ppp_oerrors	net/ppp_defs.h	/^    unsigned int ppp_oerrors;	\/* transmit errors *\/$/;"	m	struct:pppstat
ppp_opackets	net/ppp_defs.h	/^    unsigned int ppp_opackets;	\/* packets sent *\/$/;"	m	struct:pppstat
ppp_option_data	net/if_ppp.h	/^struct ppp_option_data {$/;"	s
ppp_requeue	net/if_ppp.c	/^ppp_requeue(struct ppp_softc *sc)$/;"	f	file:
ppp_rxdaemon	net/if_ppp.c	/^static rtems_task ppp_rxdaemon(rtems_task_argument arg)$/;"	f	file:
ppp_softc	net/if_ppp.c	/^static struct	ppp_softc ppp_softc[NPPP];$/;"	v	typeref:struct:ppp_softc	file:
ppp_softc	net/if_pppvar.h	/^struct ppp_softc {$/;"	s
ppp_stats	net/ppp_defs.h	/^struct ppp_stats {$/;"	s
ppp_time	net/if_ppp.c	/^static struct timeval    ppp_time;$/;"	v	typeref:struct:timeval	file:
ppp_timeout	net/ppp_tty.c	/^ppp_timeout(void *x)$/;"	f	file:
ppp_txdaemon	net/if_ppp.c	/^static rtems_task ppp_txdaemon(rtems_task_argument arg)$/;"	f	file:
ppp_unit	net/if_ppp.c	/^ppp_unit(struct ppp_softc *sc)$/;"	f	file:
pppalloc	net/if_ppp.c	/^pppalloc(pid_t pid)$/;"	f
pppallocmbuf	net/ppp_tty.c	/^pppallocmbuf(struct ppp_softc *sc, struct mbuf **mp)$/;"	f
pppasyncattach	net/ppp_tty.c	/^pppasyncattach(void)$/;"	f
pppasyncctlp	net/ppp_tty.c	/^pppasyncctlp($/;"	f	file:
pppasyncrelinq	net/ppp_tty.c	/^pppasyncrelinq(struct ppp_softc *sc)$/;"	f	file:
pppasyncstart	net/ppp_tty.c	/^void pppasyncstart(struct ppp_softc *sc)$/;"	f
pppclose	net/ppp_tty.c	/^pppclose(struct rtems_termios_tty *tty)$/;"	f
pppdealloc	net/if_ppp.c	/^pppdealloc(struct ppp_softc *sc)$/;"	f
pppdisc	net/ppp_tty.c	/^static struct rtems_termios_linesw pppdisc = {$/;"	v	typeref:struct:rtems_termios_linesw	file:
pppdumpb	net/ppp_tty.c	/^pppdumpb(u_char *b, int l)$/;"	f	file:
pppdumpm	net/if_ppp.c	/^pppdumpm(struct mbuf *m0)$/;"	f	file:
pppfcs	net/ppp_tty.c	/^pppfcs(u_short fcs, u_char *cp, int len)$/;"	f
pppgetm	net/ppp_tty.c	/^pppgetm(struct ppp_softc *sc)$/;"	f	file:
pppinput	net/ppp_tty.c	/^pppinput(int c, struct rtems_termios_tty *tp)$/;"	f
pppioctl	net/if_ppp.c	/^pppioctl(struct ppp_softc *sc, ioctl_command_t cmd, caddr_t data,$/;"	f
ppplogchar	net/ppp_tty.c	/^ppplogchar(struct ppp_softc *sc, int c)$/;"	f	file:
pppopen	net/ppp_tty.c	/^pppopen(struct rtems_termios_tty *tty)$/;"	f
pppoutput	net/if_ppp.c	/^pppoutput(struct ifnet *ifp, struct mbuf *m0, struct sockaddr *dst,$/;"	f
pppread	net/ppp_tty.c	/^pppread(struct rtems_termios_tty *tty, rtems_libio_rw_args_t *rw_args)$/;"	f
pppsioctl	net/if_ppp.c	/^pppsioctl(struct ifnet *ifp, ioctl_command_t cmd, caddr_t data)$/;"	f	file:
pppstart	net/ppp_tty.c	/^pppstart(struct rtems_termios_tty *tp)$/;"	f
pppstat	net/ppp_defs.h	/^struct pppstat	{$/;"	s
ppptioctl	net/ppp_tty.c	/^ppptioctl(struct rtems_termios_tty *tty, rtems_libio_ioctl_args_t *args)$/;"	f
pppwrite	net/ppp_tty.c	/^pppwrite(struct rtems_termios_tty *tty, rtems_libio_rw_args_t *rw_args)$/;"	f
pr_ctlinput	sys/protosw.h	/^	void	(*pr_ctlinput)(int, struct sockaddr *, void *);$/;"	m	struct:protosw
pr_ctloutput	sys/protosw.h	/^	int	(*pr_ctloutput)(int, struct socket *, int, int,$/;"	m	struct:protosw
pr_domain	sys/protosw.h	/^	struct	domain *pr_domain;	\/* domain protocol a member of *\/$/;"	m	struct:protosw	typeref:struct:protosw::domain
pr_drain	sys/protosw.h	/^	void	(*pr_drain)(void);$/;"	m	struct:protosw
pr_fasttimo	sys/protosw.h	/^	void	(*pr_fasttimo)(void);$/;"	m	struct:protosw
pr_flags	sys/protosw.h	/^	short	pr_flags;		\/* see below *\/$/;"	m	struct:protosw
pr_init	sys/protosw.h	/^	void	(*pr_init)(void);	\/* initialization hook *\/$/;"	m	struct:protosw
pr_input	sys/protosw.h	/^	void	(*pr_input)(struct mbuf *, int len);$/;"	m	struct:protosw
pr_ousrreq	sys/protosw.h	/^	int	(*pr_ousrreq)(struct socket *, int, struct mbuf *,$/;"	m	struct:protosw
pr_output	sys/protosw.h	/^	int	(*pr_output)(struct mbuf *m, struct socket *so);$/;"	m	struct:protosw
pr_protocol	sys/protosw.h	/^	short	pr_protocol;		\/* protocol number *\/$/;"	m	struct:protosw
pr_slowtimo	sys/protosw.h	/^	void	(*pr_slowtimo)(void);$/;"	m	struct:protosw
pr_type	sys/protosw.h	/^	short	pr_type;		\/* socket type used for *\/$/;"	m	struct:protosw
pr_usrreqs	sys/protosw.h	/^	struct	pr_usrreqs *pr_usrreqs;	\/* supersedes pr_usrreq() *\/$/;"	m	struct:protosw	typeref:struct:protosw::pr_usrreqs
pr_usrreqs	sys/protosw.h	/^struct pr_usrreqs {$/;"	s
prcorequests	sys/protosw.h	/^char	*prcorequests[] = {$/;"	v
prcrequests	sys/protosw.h	/^char	*prcrequests[] = {$/;"	v
precision	rtems/rtems_bsdnet.h	/^	int8_t		precision;$/;"	m	struct:ntpPacketSmall
precsize_aton	libc/res_debug.c	/^precsize_aton($/;"	f	file:
precsize_ntoa	libc/res_debug.c	/^precsize_ntoa($/;"	f	file:
prev	netinet/ip_var.h	/^	struct	ipq *next,*prev;	\/* to other reass headers *\/$/;"	m	struct:ipq	typeref:struct:ipq::
primes	kern/kern_subr.c	/^static int primes[] = { 1, 13, 31, 61, 127, 251, 509, 761, 1021, 1531, 2039,$/;"	v	file:
print_ip	netinet/ip_fw.c	79;"	d	file:
printable	libc/ns_name.c	/^printable(int ch) {$/;"	f	file:
printip	nfs/bootp_subr.c	/^static void printip(char *prefix,struct in_addr addr)$/;"	f	file:
printsetup	rtems/rtems_dhcp.c	/^printsetup (const char     *iface,$/;"	f	file:
priority	netinet/ip_mroute.c	/^priority(struct vif *vifp, struct ip *ip)$/;"	f	file:
prioritynames	sys/syslog.h	/^CODE prioritynames[] = {$/;"	v
proc	sys/proc.h	/^struct proc {$/;"	s
processOptions	nfs/bootp_subr.c	/^processOptions (unsigned char *optbuf, int optbufSize)$/;"	f	file:
processPacket	lib/rtems_bsdnet_ntp.c	/^processPacket (struct ntpPacketSmall *p, int state, void *unused)$/;"	f	file:
process_options	rtems/rtems_dhcp.c	/^process_options (unsigned char *optbuf, int optbufSize)$/;"	f	file:
proto	libc/getprotoent.c	/^static struct protoent proto;$/;"	v	typeref:struct:protoent	file:
proto	nfsclient/nfsargs.h	/^	int		proto;		\/* and Protocol *\/$/;"	m	struct:nfs_args
proto_aliases	libc/getprotoent.c	/^static char *proto_aliases[MAXALIASES];$/;"	v	file:
protocol	net/if_ppp.h	/^    int		protocol;	\/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl
protoent	netdb.h	/^struct	protoent {$/;"	s
protof	libc/getprotoent.c	/^static FILE *protof = NULL;$/;"	v	file:
protosw	sys/protosw.h	/^struct protosw {$/;"	s
prototab	lib/getprotoby.c	/^static const struct protoent prototab[] = {$/;"	v	typeref:struct:protoent	file:
pru_abort	sys/protosw.h	/^	int	(*pru_abort)(struct socket *so);$/;"	m	struct:pr_usrreqs
pru_accept	sys/protosw.h	/^	int	(*pru_accept)(struct socket *so, struct mbuf *nam);$/;"	m	struct:pr_usrreqs
pru_accept_notsupp	kern/uipc_socket2.c	/^pru_accept_notsupp(struct socket *so, struct mbuf *nam)$/;"	f
pru_attach	sys/protosw.h	/^	int	(*pru_attach)(struct socket *so, intptr_t proto);$/;"	m	struct:pr_usrreqs
pru_bind	sys/protosw.h	/^	int	(*pru_bind)(struct socket *so, struct mbuf *nam);$/;"	m	struct:pr_usrreqs
pru_connect	sys/protosw.h	/^	int	(*pru_connect)(struct socket *so, struct mbuf *nam);$/;"	m	struct:pr_usrreqs
pru_connect2	sys/protosw.h	/^	int	(*pru_connect2)(struct socket *so1, struct socket *so2);$/;"	m	struct:pr_usrreqs
pru_connect2_notsupp	kern/uipc_socket2.c	/^pru_connect2_notsupp(struct socket *so1, struct socket *so2)$/;"	f
pru_control	sys/protosw.h	/^	int	(*pru_control)(struct socket *so, intptr_t cmd, caddr_t data,$/;"	m	struct:pr_usrreqs
pru_control_notsupp	kern/uipc_socket2.c	/^pru_control_notsupp(struct socket *so, int cmd, caddr_t data,$/;"	f
pru_detach	sys/protosw.h	/^	int	(*pru_detach)(struct socket *so);$/;"	m	struct:pr_usrreqs
pru_disconnect	sys/protosw.h	/^	int	(*pru_disconnect)(struct socket *so);$/;"	m	struct:pr_usrreqs
pru_listen	sys/protosw.h	/^	int	(*pru_listen)(struct socket *so);$/;"	m	struct:pr_usrreqs
pru_listen_notsupp	kern/uipc_socket2.c	/^pru_listen_notsupp(struct socket *so)$/;"	f
pru_oldstyle	kern/uipc_socket2.c	/^struct pr_usrreqs pru_oldstyle = {$/;"	v	typeref:struct:pr_usrreqs
pru_peeraddr	sys/protosw.h	/^	int	(*pru_peeraddr)(struct socket *so, struct mbuf *nam);$/;"	m	struct:pr_usrreqs
pru_rcvd	sys/protosw.h	/^	int	(*pru_rcvd)(struct socket *so, intptr_t flags);$/;"	m	struct:pr_usrreqs
pru_rcvd_notsupp	kern/uipc_socket2.c	/^pru_rcvd_notsupp(struct socket *so, int flags)$/;"	f
pru_rcvoob	sys/protosw.h	/^	int	(*pru_rcvoob)(struct socket *so, struct mbuf *m,$/;"	m	struct:pr_usrreqs
pru_rcvoob_notsupp	kern/uipc_socket2.c	/^pru_rcvoob_notsupp(struct socket *so, struct mbuf *m, int flags)$/;"	f
pru_send	sys/protosw.h	/^	int	(*pru_send)(struct socket *so, int flags, struct mbuf *m, $/;"	m	struct:pr_usrreqs
pru_sense	sys/protosw.h	/^	int	(*pru_sense)(struct socket *so, struct stat *sb);$/;"	m	struct:pr_usrreqs
pru_sense_null	kern/uipc_socket2.c	/^pru_sense_null(struct socket *so, struct stat *sb)$/;"	f
pru_shutdown	sys/protosw.h	/^	int	(*pru_shutdown)(struct socket *so);$/;"	m	struct:pr_usrreqs
pru_sockaddr	sys/protosw.h	/^	int	(*pru_sockaddr)(struct socket *so, struct mbuf *nam);$/;"	m	struct:pr_usrreqs
prune_origin	libc/ns_print.c	/^prune_origin(const char *name, const char *origin) {$/;"	f	file:
prurequests	sys/protosw.h	/^const char *prurequests[] = {$/;"	v
ps_catchmask	sys/signalvar.h	/^	sigset_t ps_catchmask[NSIG];	\/* signals to be blocked *\/$/;"	m	struct:sigacts
ps_code	sys/signalvar.h	/^	u_long	ps_code;		\/* for core dump\/debugger XXX *\/$/;"	m	struct:sigacts
ps_flags	sys/signalvar.h	/^	int	ps_flags;		\/* signal flags, below *\/$/;"	m	struct:sigacts
ps_oldmask	sys/signalvar.h	/^	sigset_t ps_oldmask;		\/* saved mask from before sigpause *\/$/;"	m	struct:sigacts
ps_sig	sys/signalvar.h	/^	int	ps_sig;			\/* for core dump\/debugger XXX *\/$/;"	m	struct:sigacts
ps_sigact	sys/signalvar.h	/^	sig_t	ps_sigact[NSIG];	\/* disposition of signals *\/$/;"	m	struct:sigacts
ps_sigintr	sys/signalvar.h	/^	sigset_t ps_sigintr;		\/* signals that interrupt syscalls *\/$/;"	m	struct:sigacts
ps_signodefer	sys/signalvar.h	/^	sigset_t ps_signodefer;		\/* signals not masked while handled *\/$/;"	m	struct:sigacts
ps_sigonstack	sys/signalvar.h	/^	sigset_t ps_sigonstack;		\/* signals to take on sigstack *\/$/;"	m	struct:sigacts
ps_sigreset	sys/signalvar.h	/^	sigset_t ps_sigreset;		\/* signals that reset when caught *\/$/;"	m	struct:sigacts
ps_sigstk	sys/signalvar.h	/^	struct	sigaltstack ps_sigstk;	\/* sp & on stack state variable *\/$/;"	m	struct:sigacts	typeref:struct:sigacts::sigaltstack
ps_usertramp	sys/signalvar.h	/^	sigset_t ps_usertramp;		\/* SunOS compat; libc sigtramp XXX *\/$/;"	m	struct:sigacts
pseudo_AF_KEY	sys/socket.h	169;"	d
pseudo_AF_PIP	sys/socket.h	166;"	d
pseudo_AF_RTIP	sys/socket.h	163;"	d
pseudo_AF_XTP	sys/socket.h	160;"	d
ptr	net/if_ppp.h	/^	u_char	*ptr;$/;"	m	struct:ppp_option_data
putbits	rtems/rtems_select.c	166;"	d	file:
putbits	rtems/rtems_select.c	170;"	d	file:
putlong	resolv.h	247;"	d
putshort	resolv.h	248;"	d
qaddr_t	rtems/rtems_bsdnet_internal.h	/^typedef	quad_t *	qaddr_t;$/;"	t
qdcount	arpa/nameser_compat.h	/^	unsigned	qdcount :16;	\/* number of question entries *\/$/;"	m	struct:__anon47
qmax	sys/libkern.h	/^static __inline quad_t qmax(quad_t a, quad_t b) { return (a > b ? a : b); }$/;"	f
qmin	sys/libkern.h	/^static __inline quad_t qmin(quad_t a, quad_t b) { return (a < b ? a : b); }$/;"	f
qr	arpa/nameser_compat.h	/^	unsigned	qr :1;		\/* response flag *\/$/;"	m	struct:__anon47
qr	arpa/nameser_compat.h	/^	unsigned	qr: 1;		\/* response flag *\/$/;"	m	struct:__anon47
quad_t	rtems/rtems_bsdnet_internal.h	/^typedef	int64_t		quad_t;$/;"	t
querybuf	libc/gethostbydns.c	/^} querybuf;$/;"	t	typeref:union:__anon28	file:
querybuf	libc/getnetbydns.c	/^} querybuf;$/;"	t	typeref:union:__anon30	file:
qval	nfs/nfsproto.h	/^	u_quad_t	qval;$/;"	m	union:nfs_quadconvert
r_class	arpa/nameser.h	/^	u_int16_t	r_class;	\/* class number *\/$/;"	m	struct:ns_updrec
r_data	arpa/nameser.h	/^	u_char *	r_data;		\/* rdata fields as text string *\/$/;"	m	struct:ns_updrec
r_deldp	arpa/nameser.h	/^	struct databuf *r_deldp;	\/* databuf's deleted\/overwritten *\/$/;"	m	struct:ns_updrec	typeref:struct:ns_updrec::databuf
r_dname	arpa/nameser.h	/^	char *		r_dname;	\/* owner of the RR *\/$/;"	m	struct:ns_updrec
r_dp	arpa/nameser.h	/^	struct databuf *r_dp;		\/* databuf to process *\/$/;"	m	struct:ns_updrec	typeref:struct:ns_updrec::databuf
r_grpnext	arpa/nameser.h	/^	struct ns_updrec *r_grpnext;	\/* next record when grouped *\/$/;"	m	struct:ns_updrec	typeref:struct:ns_updrec::ns_updrec
r_next	arpa/nameser.h	/^	struct ns_updrec *r_next;	\/* next record *\/$/;"	m	struct:ns_updrec	typeref:struct:ns_updrec::ns_updrec
r_opcode	arpa/nameser.h	/^	int		r_opcode;	\/* type of operation *\/$/;"	m	struct:ns_updrec
r_prev	arpa/nameser.h	/^	struct ns_updrec *r_prev;	\/* prev record *\/$/;"	m	struct:ns_updrec	typeref:struct:ns_updrec::ns_updrec
r_section	arpa/nameser.h	/^	u_int8_t	r_section;	\/* ZONE\/PREREQUISITE\/UPDATE *\/$/;"	m	struct:ns_updrec
r_size	arpa/nameser.h	/^	u_int16_t	r_size;		\/* size of r_data field *\/$/;"	m	struct:ns_updrec
r_ttl	arpa/nameser.h	/^	u_int32_t	r_ttl;		\/* time to live *\/$/;"	m	struct:ns_updrec
r_type	arpa/nameser.h	/^	u_int16_t	r_type;		\/* type number *\/$/;"	m	struct:ns_updrec
r_zone	arpa/nameser.h	/^	u_int16_t	r_zone;		\/* zone number on server *\/$/;"	m	struct:ns_updrec
ra	arpa/nameser_compat.h	/^	unsigned	ra :1;		\/* recursion available *\/$/;"	m	struct:__anon47
ra	arpa/nameser_compat.h	/^	unsigned	ra: 1;		\/* recursion available *\/$/;"	m	struct:__anon47
radix_mask	net/radix.h	/^struct radix_mask {$/;"	s
radix_node	net/radix.h	/^struct radix_node {$/;"	s
radix_node_head	net/radix.h	/^struct radix_node_head {$/;"	s
random	rtems/rtems_bsdnet_internal.h	61;"	d
random	sys/libkern.h	73;"	d
ratio	net/ppp_defs.h	/^    unsigned int ratio;		\/* recent compression ratio << 8 *\/$/;"	m	struct:compstat
raw_attach	net/raw_cb.c	/^raw_attach(struct socket *so, int proto)$/;"	f
raw_bind	net/raw_cb.c	/^raw_bind(struct socket *so, struct mbuf *nam)$/;"	f
raw_ctlinput	net/raw_usrreq.c	/^raw_ctlinput(int cmd, struct sockaddr *arg, void *dummy)$/;"	f
raw_detach	net/raw_cb.c	/^raw_detach(struct rawcb *rp)$/;"	f
raw_disconnect	net/raw_cb.c	/^raw_disconnect(struct rawcb *rp)$/;"	f
raw_init	net/raw_usrreq.c	/^raw_init(void)$/;"	f
raw_input	net/raw_usrreq.c	/^raw_input(struct mbuf *m0, struct sockproto *proto, struct sockaddr *src, $/;"	f
raw_recvspace	net/raw_cb.c	/^static u_long	raw_recvspace = RAWRCVQ;$/;"	v	file:
raw_sendspace	net/raw_cb.c	/^static u_long	raw_sendspace = RAWSNDQ;$/;"	v	file:
raw_usrreq	net/raw_usrreq.c	/^raw_usrreq( struct socket *so, int req, struct mbuf *m, struct mbuf *nam,$/;"	f
rawcb	net/raw_cb.h	/^struct rawcb {$/;"	s
rawcb_list	net/raw_cb.c	/^struct rawcb_list_head rawcb_list;$/;"	v	typeref:struct:rawcb_list_head
rbuf_count	rtems/rtems_bsdnet.h	/^	int		rbuf_count;$/;"	m	struct:rtems_bsdnet_ifconfig
rcb_faddr	net/raw_cb.h	/^	struct	sockaddr *rcb_faddr;	\/* destination address *\/$/;"	m	struct:rawcb	typeref:struct:rawcb::sockaddr
rcb_laddr	net/raw_cb.h	/^	struct	sockaddr *rcb_laddr;	\/* socket's address *\/$/;"	m	struct:rawcb	typeref:struct:rawcb::sockaddr
rcb_proto	net/raw_cb.h	/^	struct	sockproto rcb_proto;	\/* protocol family, protocol *\/$/;"	m	struct:rawcb	typeref:struct:rawcb::sockproto
rcb_socket	net/raw_cb.h	/^	struct	socket *rcb_socket;	\/* back pointer to socket *\/$/;"	m	struct:rawcb	typeref:struct:rawcb::socket
rcmd	libc/rcmd.c	/^rcmd($/;"	f
rcode	arpa/nameser_compat.h	/^	unsigned	rcode :4;	\/* response code *\/$/;"	m	struct:__anon47
rcv_adv	netinet/tcp_var.h	/^	tcp_seq	rcv_adv;		\/* advertised window *\/$/;"	m	struct:tcpcb
rcv_nxt	netinet/tcp_var.h	/^	tcp_seq	rcv_nxt;		\/* receive next *\/$/;"	m	struct:tcpcb
rcv_scale	netinet/tcp_var.h	/^	u_char	rcv_scale;		\/* window scaling for recv window *\/$/;"	m	struct:tcpcb
rcv_up	netinet/tcp_var.h	/^	tcp_seq	rcv_up;			\/* receive urgent pointer *\/$/;"	m	struct:tcpcb
rcv_wnd	netinet/tcp_var.h	/^	u_long	rcv_wnd;		\/* receive window *\/$/;"	m	struct:tcpcb
rcvif	sys/mbuf.h	/^	struct	ifnet *rcvif;		\/* rcv interface *\/$/;"	m	struct:pkthdr	typeref:struct:pkthdr::ifnet
rd	arpa/nameser_compat.h	/^	unsigned	rd :1;		\/* recursion desired *\/$/;"	m	struct:__anon47
rd	arpa/nameser_compat.h	/^	unsigned	rd: 1;		\/* recursion desired *\/$/;"	m	struct:__anon47
rdata	arpa/nameser.h	/^	const u_char	*rdata;$/;"	m	struct:__ns_rr
rdlength	arpa/nameser.h	/^	u_int16_t	rdlength;$/;"	m	struct:__ns_rr
readahead	nfsclient/nfsargs.h	/^	int		readahead;	\/* # of blocks to readahead *\/$/;"	m	struct:nfs_args
readdirsize	nfsclient/nfsargs.h	/^	int		readdirsize;	\/* readdir size in bytes *\/$/;"	m	struct:nfs_args
receive_timestamp	rtems/rtems_bsdnet.h	/^	struct timestamp	receive_timestamp;$/;"	m	struct:ntpPacketSmall	typeref:struct:ntpPacketSmall::timestamp
recv	libc/recv.c	/^recv($/;"	f
recv_idle	net/ppp_defs.h	/^    time_t recv_idle;		\/* time since last NP packet received *\/$/;"	m	struct:ppp_idle
recvfrom	rtems/rtems_syscall.c	/^recvfrom (int s, void *buf, size_t buflen, int flags, struct sockaddr *from, int *fromlen)$/;"	f
recvmsg	rtems/rtems_syscall.c	/^recvmsg (int s, struct msghdr *mp, int flags)$/;"	f
refcnt	rtems/rtems_showroute.c	/^	short		refcnt;$/;"	m	struct:rinfo	file:
reference_identifier	rtems/rtems_bsdnet.h	/^	char			reference_identifier[4];$/;"	m	struct:ntpPacketSmall
reference_timestamp	rtems/rtems_bsdnet.h	/^	struct timestamp	reference_timestamp;$/;"	m	struct:ntpPacketSmall	typeref:struct:ntpPacketSmall::timestamp
regression_securelevel_nonmonotonic	kern/kern_mib.c	/^static int	regression_securelevel_nonmonotonic = 0;$/;"	v	file:
releaseStream	lib/tftpDriver.c	/^releaseStream (tftpfs_info_t *fs, int s)$/;"	f	file:
remove_address	rtems/rtems_dhcp_failsafe.c	/^static int remove_address(const char *if_name)$/;"	f	file:
reply_buffer	lib/ftpfs.c	/^  char reply_buffer [128];$/;"	m	struct:__anon15	file:
reply_current	lib/ftpfs.c	/^  size_t reply_current;$/;"	m	struct:__anon15	file:
reply_end	lib/ftpfs.c	/^  size_t reply_end;$/;"	m	struct:__anon15	file:
request_r_scale	netinet/tcp_var.h	/^	u_char	request_r_scale;	\/* pending window scaling *\/$/;"	m	struct:tcpcb
requested_s_scale	netinet/tcp_var.h	/^	u_char	requested_s_scale;$/;"	m	struct:tcpcb
res_close	libc/res_send.c	/^res_close(void)$/;"	f
res_close	resolv.h	194;"	d
res_dnok	libc/res_comp.c	/^res_dnok(const char *dn)$/;"	f
res_dnok	resolv.h	249;"	d
res_done	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon6
res_error	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon6
res_freeupdrec	libc/res_mkupdate.c	/^res_freeupdrec(ns_updrec *rrecp) {$/;"	f
res_freeupdrec	resolv.h	263;"	d
res_goahead	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon6
res_hnok	libc/res_comp.c	/^res_hnok(const char *dn)$/;"	f
res_hnok	resolv.h	250;"	d
res_init	libc/res_init.c	/^res_init(void)$/;"	f
res_init	resolv.h	195;"	d
res_isourserver	libc/res_send.c	/^res_isourserver($/;"	f
res_isourserver	resolv.h	196;"	d
res_mailok	libc/res_comp.c	/^res_mailok(const char *dn)$/;"	f
res_mailok	resolv.h	251;"	d
res_mkquery	libc/res_mkquery.c	/^res_mkquery($/;"	f
res_mkquery	resolv.h	197;"	d
res_mkupdate	libc/res_mkupdate.c	/^res_mkupdate(ns_updrec *rrecp_in, u_char *buf, int buflen) {$/;"	f
res_mkupdate	resolv.h	261;"	d
res_mkupdrec	libc/res_mkupdate.c	/^res_mkupdrec(int section, const char *dname,$/;"	f
res_mkupdrec	resolv.h	262;"	d
res_modified	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon6
res_nameinquery	libc/res_send.c	/^res_nameinquery($/;"	f
res_nameinquery	resolv.h	252;"	d
res_nextns	resolv.h	/^typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }$/;"	e	enum:__anon6
res_ownok	libc/res_comp.c	/^res_ownok(const char *dn)$/;"	f
res_ownok	resolv.h	253;"	d
res_queriesmatch	libc/res_send.c	/^res_queriesmatch($/;"	f
res_queriesmatch	resolv.h	254;"	d
res_query	libc/res_query.c	/^res_query($/;"	f
res_query	resolv.h	198;"	d
res_querydomain	libc/res_query.c	/^res_querydomain($/;"	f
res_querydomain	resolv.h	199;"	d
res_randomid	libc/res_init.c	/^res_randomid(void)$/;"	f
res_randomid	resolv.h	255;"	d
res_search	libc/res_query.c	/^res_search($/;"	f
res_search	resolv.h	200;"	d
res_send	libc/res_send.c	/^res_send($/;"	f
res_send	resolv.h	201;"	d
res_send_qhook	resolv.h	/^typedef res_sendhookact (*res_send_qhook)(struct sockaddr_in * const *ns,$/;"	t
res_send_rhook	resolv.h	/^typedef res_sendhookact (*res_send_rhook)(const struct sockaddr_in *ns,$/;"	t
res_send_setqhook	libc/res_send.c	/^res_send_setqhook($/;"	f
res_send_setqhook	resolv.h	259;"	d
res_send_setrhook	libc/res_send.c	/^res_send_setrhook($/;"	f
res_send_setrhook	resolv.h	260;"	d
res_sendhookact	resolv.h	/^	res_sendhookact;$/;"	t	typeref:enum:__anon6
res_setoptions	libc/res_init.c	/^res_setoptions($/;"	f	file:
res_state	resolv.h	/^typedef struct __res_state *res_state;$/;"	t	typeref:struct:__res_state
res_sym	resolv.h	/^struct res_sym {$/;"	s
res_update	libc/res_update.c	/^res_update(ns_updrec *rrecp_in) {$/;"	f
retrans	nfsclient/nfsargs.h	/^	int		retrans;	\/* times to retry send *\/$/;"	m	struct:nfs_args
retrans	resolv.h	/^	int	retrans;	 	\/*%< retransmission time interval *\/$/;"	m	struct:__res_state
retry	resolv.h	/^	int	retry;			\/*%< number of times to retransmit *\/$/;"	m	struct:__res_state
revents	sys/poll.h	/^	short	revents;	\/* events found on return *\/$/;"	m	struct:pollfd
rinfo	rtems/rtems_showroute.c	/^struct rinfo {$/;"	s	file:
rip_ctloutput	netinet/raw_ip.c	/^rip_ctloutput(int op, struct socket *so, int level, int optname,$/;"	f
rip_init	netinet/raw_ip.c	/^rip_init(void)$/;"	f
rip_input	netinet/raw_ip.c	/^rip_input(struct mbuf *m, int iphlen)$/;"	f
rip_output	netinet/raw_ip.c	/^rip_output(struct mbuf *m, struct socket *so, u_long dst)$/;"	f
rip_recvspace	netinet/raw_ip.c	/^static u_long	rip_recvspace = RIPRCVQ; \/* XXX sysctl ? *\/$/;"	v	file:
rip_sendspace	netinet/raw_ip.c	/^static u_long	rip_sendspace = RIPSNDQ; \/* XXX sysctl ? *\/$/;"	v	file:
rip_usrreq	netinet/raw_ip.c	/^rip_usrreq(struct socket *so, int req, struct mbuf *m, struct mbuf *nam,$/;"	f
ripcb	netinet/raw_ip.c	/^static struct inpcbhead ripcb;$/;"	v	typeref:struct:inpcbhead	file:
ripcbinfo	netinet/raw_ip.c	/^static struct inpcbinfo ripcbinfo;$/;"	v	typeref:struct:inpcbinfo	file:
ripsrc	netinet/raw_ip.c	/^static struct	sockaddr_in ripsrc = { sizeof(ripsrc), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
rlim_t	rtems/rtems_bsdnet_internal.h	/^typedef quad_t          rlim_t;         \/* resource limit *\/$/;"	t
rm_bit	net/radix.h	/^	short	rm_bit;			\/* bit offset; -1-index(netmask) *\/$/;"	m	struct:radix_mask
rm_flags	net/radix.h	/^	u_char	rm_flags;		\/* cf. rn_flags *\/$/;"	m	struct:radix_mask
rm_leaf	net/radix.h	92;"	d
rm_mask	net/radix.h	91;"	d
rm_mklist	net/radix.h	/^	struct	radix_mask *rm_mklist;	\/* more masks to try *\/$/;"	m	struct:radix_mask	typeref:struct:radix_mask::radix_mask
rm_refs	net/radix.h	/^	int	rm_refs;		\/* # of references to this struct *\/$/;"	m	struct:radix_mask
rm_rmu	net/radix.h	/^	}	rm_rmu;$/;"	m	struct:radix_mask	typeref:union:radix_mask::__anon38
rm_unused	net/radix.h	/^	char	rm_unused;		\/* cf. rn_bmask *\/$/;"	m	struct:radix_mask
rmu_leaf	net/radix.h	/^		struct	radix_node *rmu_leaf;	\/* for normal routes *\/$/;"	m	union:radix_mask::__anon38	typeref:struct:radix_mask::__anon38::radix_node
rmu_mask	net/radix.h	/^		caddr_t	rmu_mask;		\/* the mask *\/$/;"	m	union:radix_mask::__anon38
rmx_expire	net/route.h	/^	u_long	rmx_expire;	\/* lifetime for route, e.g. redirect *\/$/;"	m	struct:rt_metrics
rmx_expire	net/route.h	/^	u_long	rmx_expire;	\/* lifetime for route, e.g. redirect *\/$/;"	m	struct:rt_metrics_lite
rmx_filler	net/route.h	/^	u_long	rmx_filler[4];	\/* will be used for T\/TCP later *\/$/;"	m	struct:rt_metrics
rmx_hopcount	net/route.h	/^	u_long	rmx_hopcount;	\/* max hops expected *\/$/;"	m	struct:rt_metrics
rmx_locks	net/route.h	/^	u_long	rmx_locks;	\/* Kernel must leave these values alone *\/$/;"	m	struct:rt_metrics
rmx_mtu	net/route.h	/^	u_long	rmx_mtu;	\/* MTU for this path *\/$/;"	m	struct:rt_metrics
rmx_mtu	net/route.h	/^	u_long	rmx_mtu;	\/* MTU for this path *\/$/;"	m	struct:rt_metrics_lite
rmx_pksent	net/route.h	/^	u_long	rmx_pksent;	\/* packets sent using this route *\/$/;"	m	struct:rt_metrics
rmx_pksent	net/route.h	/^	u_long	rmx_pksent;	\/* packets sent using this route *\/$/;"	m	struct:rt_metrics_lite
rmx_recvpipe	net/route.h	/^	u_long	rmx_recvpipe;	\/* inbound delay-bandwidth product *\/$/;"	m	struct:rt_metrics
rmx_rtt	net/route.h	/^	u_long	rmx_rtt;	\/* estimated round trip time *\/$/;"	m	struct:rt_metrics
rmx_rttvar	net/route.h	/^	u_long	rmx_rttvar;	\/* estimated rtt variance *\/$/;"	m	struct:rt_metrics
rmx_sendpipe	net/route.h	/^	u_long	rmx_sendpipe;	\/* outbound delay-bandwidth product *\/$/;"	m	struct:rt_metrics
rmx_ssthresh	net/route.h	/^	u_long	rmx_ssthresh;	\/* outbound gateway buffer limit *\/$/;"	m	struct:rt_metrics
rmx_taop	netinet/tcp_var.h	187;"	d
rmxp_tao	netinet/tcp_var.h	/^struct rmxp_tao {$/;"	s
rn_Dupedkey	net/radix.h	/^			struct	radix_node *rn_Dupedkey;$/;"	m	struct:radix_node::__anon35::__anon36	typeref:struct:radix_node::__anon35::__anon36::radix_node
rn_Key	net/radix.h	/^			caddr_t	rn_Key;		\/* object of search *\/$/;"	m	struct:radix_node::__anon35::__anon36
rn_L	net/radix.h	/^			struct	radix_node *rn_L;\/* progeny *\/$/;"	m	struct:radix_node::__anon35::__anon37	typeref:struct:radix_node::__anon35::__anon37::radix_node
rn_Mask	net/radix.h	/^			caddr_t	rn_Mask;	\/* netmask, if present *\/$/;"	m	struct:radix_node::__anon35::__anon36
rn_Off	net/radix.h	/^			int	rn_Off;		\/* where to start compare *\/$/;"	m	struct:radix_node::__anon35::__anon37
rn_R	net/radix.h	/^			struct	radix_node *rn_R;\/* progeny *\/$/;"	m	struct:radix_node::__anon35::__anon37	typeref:struct:radix_node::__anon35::__anon37::radix_node
rn_addmask	net/radix.c	/^rn_addmask(void *n_arg, int search, int skip)$/;"	f
rn_addroute	net/radix.c	/^rn_addroute(void *v_arg, void *n_arg, struct radix_node_head *head,$/;"	f
rn_bit	net/radix.h	/^	short	rn_bit;			\/* bit offset; -1-index(netmask) *\/$/;"	m	struct:radix_node
rn_bmask	net/radix.h	/^	char	rn_bmask;		\/* node: mask for bit test*\/$/;"	m	struct:radix_node
rn_clist	net/radix.c	/^struct	radix_node *rn_clist;$/;"	v	typeref:struct:radix_node
rn_debug	net/radix.c	/^int	rn_debug =  1;$/;"	v
rn_delete	net/radix.c	/^rn_delete(void *v_arg, void *netmask_arg, struct radix_node_head *head)$/;"	f
rn_dupedkey	net/radix.h	68;"	d
rn_flags	net/radix.h	/^	u_char	rn_flags;		\/* enumerated next *\/$/;"	m	struct:radix_node
rn_info	net/radix.h	/^	int rn_info;$/;"	m	struct:radix_node
rn_init	net/radix.c	/^rn_init(void)$/;"	f
rn_inithead	net/radix.c	/^rn_inithead(void **head, int off)$/;"	f
rn_insert	net/radix.c	/^rn_insert(void *v_arg, struct radix_node_head *head, int *dupentry,$/;"	f	file:
rn_key	net/radix.h	69;"	d
rn_leaf	net/radix.h	/^		} rn_leaf;$/;"	m	union:radix_node::__anon35	typeref:struct:radix_node::__anon35::__anon36
rn_left	net/radix.h	72;"	d
rn_lexobetter	net/radix.c	/^rn_lexobetter(void *m_arg, void *n_arg)$/;"	f	file:
rn_lookup	net/radix.c	/^rn_lookup(void *v_arg, void *m_arg, struct radix_node_head *head)$/;"	f
rn_mask	net/radix.h	70;"	d
rn_masktop	net/radix.c	71;"	d	file:
rn_match	net/radix.c	/^rn_match(void *v_arg, struct radix_node_head *head)$/;"	f
rn_mkfreelist	net/radix.c	/^static struct radix_mask *rn_mkfreelist;$/;"	v	typeref:struct:radix_mask	file:
rn_mklist	net/radix.h	/^	struct	radix_mask *rn_mklist;	\/* list of masks contained in subtree *\/$/;"	m	struct:radix_node	typeref:struct:radix_node::radix_mask
rn_new_radix_mask	net/radix.c	/^rn_new_radix_mask(struct radix_node *tt, struct radix_mask *next)$/;"	f	file:
rn_newpair	net/radix.c	/^rn_newpair(void *v, int b, struct radix_node nodes[2])$/;"	f	file:
rn_node	net/radix.h	/^		} rn_node;$/;"	m	union:radix_node::__anon35	typeref:struct:radix_node::__anon35::__anon37
rn_nodenum	net/radix.c	/^int	rn_nodenum;$/;"	v
rn_offset	net/radix.h	71;"	d
rn_ones	net/radix.c	/^static char *rn_zeros, *rn_ones;$/;"	v	file:
rn_parent	net/radix.h	/^	struct	radix_node *rn_parent;	\/* parent *\/$/;"	m	struct:radix_node	typeref:struct:radix_node::radix_node
rn_refines	net/radix.c	/^rn_refines(void *m_arg, void *n_arg)$/;"	f
rn_right	net/radix.h	73;"	d
rn_satisfies_leaf	net/radix.c	/^rn_satisfies_leaf(char *trial, struct radix_node *leaf, int skip)$/;"	f	file:
rn_saveinfo	net/radix.c	/^int	rn_saveinfo;$/;"	v
rn_search	net/radix.c	/^rn_search(void *v_arg, struct radix_node *head)$/;"	f	file:
rn_search_m	net/radix.c	/^rn_search_m(void *v_arg, struct radix_node *head, void *m_arg)$/;"	f	file:
rn_twin	net/radix.h	/^	struct radix_node *rn_twin;$/;"	m	struct:radix_node	typeref:struct:radix_node::radix_node
rn_u	net/radix.h	/^	}		rn_u;$/;"	m	struct:radix_node	typeref:union:radix_node::__anon35
rn_walktree	net/radix.c	/^rn_walktree(struct radix_node_head *h, walktree_f_t *f, void *w)$/;"	f	file:
rn_walktree_from	net/radix.c	/^rn_walktree_from(struct radix_node_head *h, void *a, void *m,$/;"	f	file:
rn_ybro	net/radix.h	/^	struct radix_node *rn_ybro;$/;"	m	struct:radix_node	typeref:struct:radix_node::radix_node
rn_zeros	net/radix.c	/^static char *rn_zeros, *rn_ones;$/;"	v	file:
rnh	net/route.c	/^	struct radix_node_head *rnh;$/;"	m	struct:rtfc_arg	typeref:struct:rtfc_arg::radix_node_head	file:
rnh	netinet/in_rmx.c	/^	struct radix_node_head *rnh;$/;"	m	struct:rtqk_arg	typeref:struct:rtqk_arg::radix_node_head	file:
rnh_addaddr	net/radix.h	/^	struct	radix_node *(*rnh_addaddr)	\/* add based on sockaddr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_addaddr
rnh_addpkt	net/radix.h	/^	struct	radix_node *(*rnh_addpkt)	\/* add based on packet hdr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_addpkt
rnh_addrsize	net/radix.h	/^	int	rnh_addrsize;		\/* permit, but not require fixed keys *\/$/;"	m	struct:radix_node_head
rnh_close	net/radix.h	/^	void	(*rnh_close)	\/* do something when the last ref drops *\/$/;"	m	struct:radix_node_head
rnh_deladdr	net/radix.h	/^	struct	radix_node *(*rnh_deladdr)	\/* remove based on sockaddr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_deladdr
rnh_delpkt	net/radix.h	/^	struct	radix_node *(*rnh_delpkt)	\/* remove based on packet hdr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_delpkt
rnh_lookup	net/radix.h	/^	struct	radix_node *(*rnh_lookup)	\/* locate based on sockaddr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_lookup
rnh_matchaddr	net/radix.h	/^	struct	radix_node *(*rnh_matchaddr)	\/* locate based on sockaddr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_matchaddr
rnh_matchpkt	net/radix.h	/^	struct	radix_node *(*rnh_matchpkt)	\/* locate based on packet hdr *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::rnh_matchpkt
rnh_nodes	net/radix.h	/^	struct	radix_node rnh_nodes[3];	\/* empty tree for common case *\/$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::radix_node
rnh_pktsize	net/radix.h	/^	int	rnh_pktsize;		\/* permit, but not require fixed keys *\/$/;"	m	struct:radix_node_head
rnh_treetop	net/radix.h	/^	struct	radix_node *rnh_treetop;$/;"	m	struct:radix_node_head	typeref:struct:radix_node_head::radix_node
rnh_walktree	net/radix.h	/^	int	(*rnh_walktree)			\/* traverse tree *\/$/;"	m	struct:radix_node_head
rnh_walktree_from	net/radix.h	/^	int	(*rnh_walktree_from)		\/* traverse tree below a *\/$/;"	m	struct:radix_node_head
ro_dst	net/route.h	/^	struct	sockaddr ro_dst;$/;"	m	struct:route	typeref:struct:route::sockaddr
ro_rt	net/route.h	/^	struct	rtentry *ro_rt;$/;"	m	struct:route	typeref:struct:route::rtentry
root_args	nfsclient/nfsdiskless.h	/^	struct nfs_args	root_args;		\/* Mount args for root fs *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::nfs_args
root_args	nfsclient/nfsdiskless.h	/^	struct nfs_args	root_args;		\/* Mount args for root fs *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::nfs_args
root_delay	rtems/rtems_bsdnet.h	/^	int32_t		root_delay;$/;"	m	struct:ntpPacketSmall
root_dispersion	rtems/rtems_bsdnet.h	/^	int32_t		root_dispersion;$/;"	m	struct:ntpPacketSmall
root_fh	nfsclient/nfsdiskless.h	/^	u_char		root_fh[NFSX_V2FH];	\/* File handle of root dir *\/$/;"	m	struct:nfs_diskless
root_fh	nfsclient/nfsdiskless.h	/^	u_char		root_fh[NFSX_V3FHMAX];	\/* File handle of root dir *\/$/;"	m	struct:nfsv3_diskless
root_fhsize	nfsclient/nfsdiskless.h	/^	int		root_fhsize;		\/* Size of root file handle *\/$/;"	m	struct:nfsv3_diskless
root_hostnam	nfsclient/nfsdiskless.h	/^	char		root_hostnam[MNAMELEN];	\/* Host name for mount pt *\/$/;"	m	struct:nfs_diskless
root_hostnam	nfsclient/nfsdiskless.h	/^	char		root_hostnam[MNAMELEN];	\/* Host name for mount pt *\/$/;"	m	struct:nfsv3_diskless
root_saddr	nfsclient/nfsdiskless.h	/^	struct sockaddr_in root_saddr;		\/* Address of root server *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::sockaddr_in
root_saddr	nfsclient/nfsdiskless.h	/^	struct sockaddr_in root_saddr;		\/* Address of root server *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::sockaddr_in
root_time	nfsclient/nfsdiskless.h	/^	long		root_time;		\/* Timestamp of root fs *\/$/;"	m	struct:nfs_diskless
root_time	nfsclient/nfsdiskless.h	/^	long		root_time;		\/* Timestamp of root fs *\/$/;"	m	struct:nfsv3_diskless
route	net/route.h	/^struct route {$/;"	s
route	net/rtsock.c	/^DOMAIN_SET(route);$/;"	v
route	netinet/ip_input.c	/^	struct	in_addr route[MAX_IPOPTLEN\/sizeof(struct in_addr)];$/;"	m	struct:ip_srcrt	typeref:struct:ip_srcrt::in_addr	file:
route_cb	net/route.c	/^struct route_cb route_cb;$/;"	v	typeref:struct:route_cb
route_cb	net/route.h	/^struct route_cb {$/;"	s
route_dst	net/rtsock.c	/^static struct	sockaddr route_dst = { 2, PF_ROUTE, { 0 }  };$/;"	v	typeref:struct:sockaddr	file:
route_init	net/route.c	/^route_init(void)$/;"	f
route_output	net/rtsock.c	/^route_output(struct mbuf *m, struct socket *so)$/;"	f	file:
route_proto	net/rtsock.c	/^static struct	sockproto route_proto = { PF_ROUTE, 0 };$/;"	v	typeref:struct:sockproto	file:
route_src	net/rtsock.c	/^static struct	sockaddr route_src = { 2, PF_ROUTE, { 0 } };$/;"	v	typeref:struct:sockaddr	file:
route_usrreq	net/rtsock.c	/^route_usrreq(struct socket *so, int req, struct mbuf *m, struct mbuf *nam,$/;"	f	file:
routedomain	net/rtsock.c	/^struct domain routedomain =$/;"	v	typeref:struct:domain
router_alert	netinet/igmp.c	/^static struct mbuf *router_alert;$/;"	v	typeref:struct:mbuf	file:
router_info	netinet/in_var.h	/^struct router_info {$/;"	s
routes	rtems/rtems_showroute.c	/^	struct rinfo	*routes;$/;"	m	struct:dinfo	typeref:struct:dinfo::rinfo	file:
routesw	net/rtsock.c	/^static struct protosw routesw[] = {$/;"	v	typeref:struct:protosw	file:
rr_class	arpa/nameser.h	/^	u_int16_t	rr_class;$/;"	m	struct:__ns_rr
rresvport	libc/rcmd.c	/^rresvport(int *alport )$/;"	f
rsize	nfsclient/nfsargs.h	/^	int		rsize;		\/* read size in bytes *\/$/;"	m	struct:nfs_args
rstate	net/slcompress.h	/^	struct cstate rstate[MAX_STATES];	\/* receive connection states *\/$/;"	m	struct:slcompress	typeref:struct:slcompress::cstate
rsvp_input	netinet/ip_mroute.c	/^rsvp_input(struct mbuf *m, int iphlen)$/;"	f
rsvp_on	netinet/ip_input.c	/^int rsvp_on = 0;$/;"	v
rsvpdebug	netinet/ip_mroute.c	/^static u_int	rsvpdebug = 0;	  \/* rsvp debug level   *\/$/;"	v	file:
rsvpdebug	netinet/ip_mroute.c	/^u_int		rsvpdebug = 0;$/;"	v
rt0	net/route.c	/^	struct rtentry *rt0;$/;"	m	struct:rtfc_arg	typeref:struct:rtfc_arg::rtentry	file:
rt_addrinfo	net/route.h	/^struct rt_addrinfo {$/;"	s
rt_dst	net/route.h	/^	struct	sockaddr rt_dst;	\/* key *\/$/;"	m	struct:ortentry	typeref:struct:ortentry::sockaddr
rt_expire	netinet/if_ether.c	84;"	d	file:
rt_fixchange	net/route.c	/^rt_fixchange(struct radix_node *rn, void *vp)$/;"	f	file:
rt_fixdelete	net/route.c	/^rt_fixdelete(struct radix_node *rn, void *vp)$/;"	f	file:
rt_flags	net/route.h	/^	short	rt_flags;		\/* up\/down?, host\/net *\/$/;"	m	struct:ortentry
rt_flags	net/route.h	/^	u_long	rt_flags;		\/* up\/down?, host\/net *\/$/;"	m	struct:rtentry
rt_gateway	net/route.h	/^	struct	sockaddr *rt_gateway;	\/* value *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::sockaddr
rt_gateway	net/route.h	/^	struct	sockaddr rt_gateway;	\/* value *\/$/;"	m	struct:ortentry	typeref:struct:ortentry::sockaddr
rt_genmask	net/route.h	/^	struct	sockaddr *rt_genmask;	\/* for generation of cloned routes *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::sockaddr
rt_gwroute	net/route.h	/^	struct	rtentry *rt_gwroute;	\/* implied entry for gatewayed routes *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::rtentry
rt_hash	net/route.h	/^	u_long	rt_hash;		\/* to speed lookups *\/$/;"	m	struct:ortentry
rt_ifa	net/route.h	/^	struct	ifaddr *rt_ifa;		\/* the answer: interface address to use *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::ifaddr
rt_ifmsg	net/rtsock.c	/^rt_ifmsg(struct ifnet *ifp)$/;"	f
rt_ifp	net/route.h	/^	struct	ifnet *rt_ifp;		\/* the answer: interface to use *\/$/;"	m	struct:ortentry	typeref:struct:ortentry::ifnet
rt_ifp	net/route.h	/^	struct	ifnet *rt_ifp;		\/* the answer: interface to use *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::ifnet
rt_key	net/route.h	105;"	d
rt_llinfo	net/route.h	/^	caddr_t	rt_llinfo;		\/* pointer to link level info cache *\/$/;"	m	struct:rtentry
rt_mask	net/route.h	106;"	d
rt_maskedcopy	net/route.c	/^rt_maskedcopy(struct sockaddr *src, struct sockaddr *dst,$/;"	f	file:
rt_metrics	net/route.h	/^struct rt_metrics {$/;"	s
rt_metrics_lite	net/route.h	/^struct rt_metrics_lite {$/;"	s
rt_missmsg	net/rtsock.c	/^rt_missmsg(int type, struct rt_addrinfo *rtinfo, int flags, int error)$/;"	f
rt_msg1	net/rtsock.c	/^rt_msg1(int type, struct rt_addrinfo *rtinfo)$/;"	f	file:
rt_msg2	net/rtsock.c	/^rt_msg2(int type, struct rt_addrinfo *rtinfo, caddr_t cp, struct walkarg *w)$/;"	f	file:
rt_msghdr	net/route.h	/^struct rt_msghdr {$/;"	s
rt_newaddrmsg	net/rtsock.c	/^rt_newaddrmsg(int cmd, struct ifaddr *ifa, int error, struct rtentry *rt)$/;"	f
rt_nodes	net/route.h	/^	struct	radix_node rt_nodes[2];	\/* tree glue, and other values *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::radix_node
rt_parent	net/route.h	/^	struct	rtentry *rt_parent; 	\/* cloning parent of this route *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::rtentry
rt_refcnt	net/route.h	/^	long	rt_refcnt;		\/* # held references *\/$/;"	m	struct:rtentry
rt_refcnt	net/route.h	/^	short	rt_refcnt;		\/* # held references *\/$/;"	m	struct:ortentry
rt_rmx	net/route.h	/^	struct	rt_metrics rt_rmx;	\/* metrics used by rx'ing protocols *\/$/;"	m	struct:rtentry	typeref:struct:rtentry::rt_metrics
rt_setgate	net/route.c	/^rt_setgate(struct rtentry *rt0, struct sockaddr *dst, struct sockaddr *gate)$/;"	f
rt_setmetrics	net/rtsock.c	/^rt_setmetrics(u_long which, const struct rt_metrics *in, $/;"	f	file:
rt_tables	net/route.c	/^struct radix_node_head *rt_tables[AF_MAX+1];$/;"	v	typeref:struct:radix_node_head
rt_use	net/route.h	/^	u_long	rt_use;			\/* raw # packets forwarded *\/$/;"	m	struct:ortentry
rt_use	net/route.h	133;"	d
rt_xaddrs	net/rtsock.c	/^rt_xaddrs(caddr_t cp, caddr_t cplim, struct rt_addrinfo *rtinfo)$/;"	f	file:
rtable_init	net/route.c	/^rtable_init(struct radix_node_head **table)$/;"	f	file:
rtalloc	net/route.c	/^rtalloc(struct route *ro)$/;"	f
rtalloc1	net/route.c	/^rtalloc1(struct sockaddr *dst, int report, u_long ignflags)$/;"	f
rtalloc_ign	net/route.c	/^rtalloc_ign(struct route *ro, u_long ignore)$/;"	f
rtdetq	netinet/ip_mroute.h	/^struct rtdetq {$/;"	s
rtems_bsdnet_attach	rtems/rtems_glue.c	/^void rtems_bsdnet_attach(struct rtems_bsdnet_ifconfig *ifp)$/;"	f
rtems_bsdnet_bootp_boot_file_name	rtems/rtems_glue.c	/^char *rtems_bsdnet_bootp_boot_file_name = 0;$/;"	v
rtems_bsdnet_bootp_cmdline	rtems/rtems_glue.c	/^char *rtems_bsdnet_bootp_cmdline = 0;$/;"	v
rtems_bsdnet_bootp_server_address	rtems/rtems_glue.c	/^struct in_addr rtems_bsdnet_bootp_server_address = {0};$/;"	v	typeref:struct:in_addr
rtems_bsdnet_bootp_server_name	rtems/rtems_glue.c	/^char *rtems_bsdnet_bootp_server_name = 0;$/;"	v
rtems_bsdnet_close	rtems/rtems_syscall.c	/^rtems_bsdnet_close (rtems_libio_t *iop)$/;"	f	file:
rtems_bsdnet_config	rtems/rtems_bsdnet.h	/^struct rtems_bsdnet_config {$/;"	s
rtems_bsdnet_detach	rtems/rtems_glue.c	/^void rtems_bsdnet_detach (struct rtems_bsdnet_ifconfig *ifp)$/;"	f
rtems_bsdnet_dhcp_down	rtems/rtems_dhcp.c	/^void rtems_bsdnet_dhcp_down (void)$/;"	f
rtems_bsdnet_dhcp_failsafe_config	rtems/rtems_dhcp_failsafe.c	/^void rtems_bsdnet_dhcp_failsafe_config($/;"	f
rtems_bsdnet_do_bootp	rtems/rtems_bootp.c	/^rtems_bsdnet_do_bootp (void)$/;"	f
rtems_bsdnet_do_bootp_and_rootfs	rtems/rtems_bootp.c	/^rtems_bsdnet_do_bootp_and_rootfs (void)$/;"	f
rtems_bsdnet_do_dhcp	rtems/rtems_dhcp.c	/^void rtems_bsdnet_do_dhcp (void)$/;"	f
rtems_bsdnet_do_dhcp_failsafe	rtems/rtems_dhcp_failsafe.c	/^void rtems_bsdnet_do_dhcp_failsafe (void)$/;"	f
rtems_bsdnet_do_dhcp_refresh_only	rtems/rtems_dhcp.c	/^rtems_bsdnet_do_dhcp_refresh_only (unsigned long xid,$/;"	f
rtems_bsdnet_do_dhcp_timeout	rtems/rtems_dhcp.c	/^int rtems_bsdnet_do_dhcp_timeout( void )$/;"	f
rtems_bsdnet_domain_name	rtems/rtems_glue.c	/^char *rtems_bsdnet_domain_name = 0;$/;"	v
rtems_bsdnet_event_receive	rtems/rtems_glue.c	/^rtems_status_code rtems_bsdnet_event_receive ($/;"	f
rtems_bsdnet_event_send	rtems/rtems_bsdnet_internal.h	/^static inline rtems_status_code rtems_bsdnet_event_send ($/;"	f
rtems_bsdnet_fcntl	rtems/rtems_syscall.c	/^rtems_bsdnet_fcntl (rtems_libio_t *iop, int cmd)$/;"	f	file:
rtems_bsdnet_fdToSocket	rtems/rtems_syscall.c	/^rtems_bsdnet_fdToSocket (int fd)$/;"	f
rtems_bsdnet_free	rtems/rtems_glue.c	/^rtems_bsdnet_free (void *addr, int type)$/;"	f
rtems_bsdnet_fstat	rtems/rtems_syscall.c	/^rtems_bsdnet_fstat (const rtems_filesystem_location_info_t *loc, struct stat *sp)$/;"	f	file:
rtems_bsdnet_get_ntp	lib/rtems_bsdnet_ntp.c	/^int rtems_bsdnet_get_ntp(int sock, rtems_bsdnet_ntp_callback_t callback, void *usr_data)$/;"	f
rtems_bsdnet_ifconfig	rtems/rtems_bsdnet.h	/^struct rtems_bsdnet_ifconfig {$/;"	s
rtems_bsdnet_ifconfig	rtems/rtems_glue.c	/^int rtems_bsdnet_ifconfig(const char *ifname, uint32_t cmd, void *param)$/;"	f
rtems_bsdnet_initialize	rtems/rtems_glue.c	/^rtems_bsdnet_initialize (void)$/;"	f	file:
rtems_bsdnet_initialize_loop	net/if_loop.c	/^rtems_bsdnet_initialize_loop(void)$/;"	f
rtems_bsdnet_initialize_network	rtems/rtems_glue.c	/^rtems_bsdnet_initialize_network(void)$/;"	f
rtems_bsdnet_initialize_sockaddr_in	rtems/rtems_glue.c	/^rtems_bsdnet_initialize_sockaddr_in(struct sockaddr_in *addr)$/;"	f	file:
rtems_bsdnet_ioctl	rtems/rtems_syscall.c	/^rtems_bsdnet_ioctl (rtems_libio_t *iop, uint32_t   command, void *buffer)$/;"	f	file:
rtems_bsdnet_log	rtems/rtems_glue.c	/^rtems_bsdnet_log (int priority, const char *fmt, ...)$/;"	f
rtems_bsdnet_log_host_address	rtems/rtems_glue.c	/^struct in_addr rtems_bsdnet_log_host_address = {0};$/;"	v	typeref:struct:in_addr
rtems_bsdnet_log_priority	rtems/rtems_glue.c	/^int rtems_bsdnet_log_priority;$/;"	v
rtems_bsdnet_makeFdForSocket	rtems/rtems_syscall.c	/^rtems_bsdnet_makeFdForSocket (void *so)$/;"	f	file:
rtems_bsdnet_malloc	rtems/rtems_glue.c	/^rtems_bsdnet_malloc (size_t size, int type, int flags)$/;"	f
rtems_bsdnet_malloc_mbuf	rtems/rtems_malloc_mbuf.c	/^void* rtems_bsdnet_malloc_mbuf(size_t size, int type)$/;"	f
rtems_bsdnet_malloc_starvation	rtems/rtems_bsdnet_malloc_starvation.c	/^rtems_bsdnet_malloc_starvation(void)$/;"	f
rtems_bsdnet_microseconds_per_tick	rtems/rtems_glue.c	/^int			rtems_bsdnet_microseconds_per_tick;$/;"	v
rtems_bsdnet_nameserver	rtems/rtems_glue.c	/^struct in_addr *rtems_bsdnet_nameserver = _rtems_bsdnet_nameserver;$/;"	v	typeref:struct:in_addr
rtems_bsdnet_nameserver_count	rtems/rtems_glue.c	/^int rtems_bsdnet_nameserver_count = 0;$/;"	v
rtems_bsdnet_newproc	rtems/rtems_glue.c	/^rtems_bsdnet_newproc (char *name, int stacksize, void(*entry)(void *), void *arg)$/;"	f
rtems_bsdnet_newproc_affinity	rtems/rtems_glue.c	/^rtems_bsdnet_newproc_affinity (char *name, int stacksize, void(*entry)(void *),$/;"	f
rtems_bsdnet_ntp_bcast_timeout_secs	lib/rtems_bsdnet_ntp.c	/^int rtems_bsdnet_ntp_bcast_timeout_secs = 80;$/;"	v
rtems_bsdnet_ntp_callback_t	rtems/rtems_bsdnet.h	/^typedef int (*rtems_bsdnet_ntp_callback_t)($/;"	t
rtems_bsdnet_ntp_retry_count	lib/rtems_bsdnet_ntp.c	/^int rtems_bsdnet_ntp_retry_count  = 5;$/;"	v
rtems_bsdnet_ntp_timeout_secs	lib/rtems_bsdnet_ntp.c	/^int rtems_bsdnet_ntp_timeout_secs = 5;$/;"	v
rtems_bsdnet_ntpserver	rtems/rtems_glue.c	/^struct in_addr *rtems_bsdnet_ntpserver = _rtems_bsdnet_ntpserver;$/;"	v	typeref:struct:in_addr
rtems_bsdnet_ntpserver_count	rtems/rtems_glue.c	/^int rtems_bsdnet_ntpserver_count = 0;$/;"	v
rtems_bsdnet_parse_driver_name	rtems/rtems_glue.c	/^rtems_bsdnet_parse_driver_name (const struct rtems_bsdnet_ifconfig *config, char **namep)$/;"	f
rtems_bsdnet_random	rtems/rtems_glue.c	/^rtems_bsdnet_random (void)$/;"	f
rtems_bsdnet_read	rtems/rtems_syscall.c	/^rtems_bsdnet_read (rtems_libio_t *iop, void *buffer, size_t count)$/;"	f	file:
rtems_bsdnet_rtrequest	rtems/rtems_glue.c	/^int rtems_bsdnet_rtrequest ($/;"	f
rtems_bsdnet_schednetisr	rtems/rtems_glue.c	/^rtems_bsdnet_schednetisr (int n)$/;"	f
rtems_bsdnet_seconds_since_boot	rtems/rtems_bsdnet_internal.h	/^static inline unsigned long rtems_bsdnet_seconds_since_boot(void)$/;"	f
rtems_bsdnet_semaphore_obtain	rtems/rtems_glue.c	/^rtems_bsdnet_semaphore_obtain (void)$/;"	f
rtems_bsdnet_semaphore_obtain_recursive	rtems/rtems_glue.c	/^rtems_bsdnet_semaphore_obtain_recursive(uint32_t nest_count)$/;"	f
rtems_bsdnet_semaphore_release	rtems/rtems_glue.c	/^rtems_bsdnet_semaphore_release (void)$/;"	f
rtems_bsdnet_semaphore_release_recursive	rtems/rtems_glue.c	/^rtems_bsdnet_semaphore_release_recursive(void)$/;"	f
rtems_bsdnet_setup	rtems/rtems_glue.c	/^rtems_bsdnet_setup (void)$/;"	f	file:
rtems_bsdnet_setup_interface	rtems/rtems_glue.c	/^rtems_bsdnet_setup_interface($/;"	f	file:
rtems_bsdnet_show_icmp_stats	rtems/rtems_showicmpstat.c	/^rtems_bsdnet_show_icmp_stats (void)$/;"	f
rtems_bsdnet_show_if_stats	rtems/rtems_showifstat.c	/^rtems_bsdnet_show_if_stats (void)$/;"	f
rtems_bsdnet_show_inet_routes	rtems/rtems_showroute.c	/^rtems_bsdnet_show_inet_routes (void)$/;"	f
rtems_bsdnet_show_ip_stats	rtems/rtems_showipstat.c	/^rtems_bsdnet_show_ip_stats (void)$/;"	f
rtems_bsdnet_show_mbuf_stats	rtems/rtems_showmbuf.c	/^rtems_bsdnet_show_mbuf_stats (void)$/;"	f
rtems_bsdnet_show_tcp_stats	rtems/rtems_showtcpstat.c	/^rtems_bsdnet_show_tcp_stats (void)$/;"	f
rtems_bsdnet_show_udp_stats	rtems/rtems_showudpstat.c	/^rtems_bsdnet_show_udp_stats (void)$/;"	f
rtems_bsdnet_sleep	rtems/rtems_glue.c	/^rtems_bsdnet_sleep(rtems_event_set in, rtems_interval ticks)$/;"	f	file:
rtems_bsdnet_synchronize_ntp	lib/rtems_bsdnet_ntp.c	/^rtems_bsdnet_synchronize_ntp (int interval, rtems_task_priority priority)$/;"	f
rtems_bsdnet_ticks_per_second	rtems/rtems_glue.c	/^int			rtems_bsdnet_ticks_per_second;$/;"	v
rtems_bsdnet_timeoffset	rtems/rtems_glue.c	/^int32_t rtems_bsdnet_timeoffset = 0;$/;"	v
rtems_bsdnet_timeout	rtems/rtems_glue.c	/^rtems_bsdnet_timeout(void (*ftn)(void *), void *arg, int ticks)$/;"	f
rtems_bsdnet_write	rtems/rtems_syscall.c	/^rtems_bsdnet_write (rtems_libio_t *iop, const void *buffer, size_t count)$/;"	f	file:
rtems_create_root_fs	rtems/mkrootfs.c	/^rtems_create_root_fs (void)$/;"	f
rtems_dhcpd_nameserver	rtems/rtems_dhcp.c	/^static struct in_addr rtems_dhcpd_nameserver[NUM_NAMESERVERS];$/;"	v	typeref:struct:in_addr	file:
rtems_dhcpd_nameserver_count	rtems/rtems_dhcp.c	/^static int rtems_dhcpd_nameserver_count = 0;$/;"	v	file:
rtems_ftpfs_close	lib/ftpfs.c	/^static int rtems_ftpfs_close(rtems_libio_t *iop)$/;"	f	file:
rtems_ftpfs_close_data_connection	lib/ftpfs.c	/^static int rtems_ftpfs_close_data_connection($/;"	f	file:
rtems_ftpfs_create_address	lib/ftpfs.c	/^static socklen_t rtems_ftpfs_create_address($/;"	f	file:
rtems_ftpfs_do_ioctl	lib/ftpfs.c	/^static rtems_status_code rtems_ftpfs_do_ioctl($/;"	f	file:
rtems_ftpfs_entry	lib/ftpfs.c	/^} rtems_ftpfs_entry;$/;"	t	typeref:struct:__anon15	file:
rtems_ftpfs_eval_path	lib/ftpfs.c	/^static void rtems_ftpfs_eval_path($/;"	f	file:
rtems_ftpfs_free_node	lib/ftpfs.c	/^static void rtems_ftpfs_free_node(const rtems_filesystem_location_info_t *loc)$/;"	f	file:
rtems_ftpfs_fstat	lib/ftpfs.c	/^static int rtems_ftpfs_fstat($/;"	f	file:
rtems_ftpfs_ftruncate	lib/ftpfs.c	/^static int rtems_ftpfs_ftruncate(rtems_libio_t *iop, off_t count)$/;"	f	file:
rtems_ftpfs_get_file_size	lib/ftpfs.c	/^static void rtems_ftpfs_get_file_size(rtems_ftpfs_entry *e, bool verbose)$/;"	f	file:
rtems_ftpfs_get_reply	lib/ftpfs.c	/^static rtems_ftpfs_reply rtems_ftpfs_get_reply($/;"	f	file:
rtems_ftpfs_get_timeout	lib/ftpfs.c	/^rtems_status_code rtems_ftpfs_get_timeout($/;"	f
rtems_ftpfs_get_verbose	lib/ftpfs.c	/^rtems_status_code rtems_ftpfs_get_verbose(const char *mount_point, bool *verbose)$/;"	f
rtems_ftpfs_handlers	lib/ftpfs.c	/^static const rtems_filesystem_file_handlers_r rtems_ftpfs_handlers = {$/;"	v	file:
rtems_ftpfs_handlers	lib/ftpfs.c	/^static const rtems_filesystem_file_handlers_r rtems_ftpfs_handlers;$/;"	v	file:
rtems_ftpfs_initialize	lib/ftpfs.c	/^int rtems_ftpfs_initialize($/;"	f
rtems_ftpfs_ioctl	lib/ftpfs.c	/^static int rtems_ftpfs_ioctl($/;"	f	file:
rtems_ftpfs_ioctl_numbers	rtems/ftpfs.h	/^} rtems_ftpfs_ioctl_numbers;$/;"	t	typeref:enum:__anon24
rtems_ftpfs_is_reply_code_valid	lib/ftpfs.c	/^static bool rtems_ftpfs_is_reply_code_valid(unsigned char *reply)$/;"	f	file:
rtems_ftpfs_lock_or_unlock	lib/ftpfs.c	/^static void rtems_ftpfs_lock_or_unlock($/;"	f	file:
rtems_ftpfs_mount_entry	lib/ftpfs.c	/^} rtems_ftpfs_mount_entry;$/;"	t	typeref:struct:__anon16	file:
rtems_ftpfs_open	lib/ftpfs.c	/^static int rtems_ftpfs_open($/;"	f	file:
rtems_ftpfs_open_ctrl_connection	lib/ftpfs.c	/^static int rtems_ftpfs_open_ctrl_connection($/;"	f	file:
rtems_ftpfs_open_data_connection_active	lib/ftpfs.c	/^static int rtems_ftpfs_open_data_connection_active($/;"	f	file:
rtems_ftpfs_open_data_connection_passive	lib/ftpfs.c	/^static int rtems_ftpfs_open_data_connection_passive($/;"	f	file:
rtems_ftpfs_ops	lib/ftpfs.c	/^static const rtems_filesystem_operations_table rtems_ftpfs_ops = {$/;"	v	file:
rtems_ftpfs_ops	lib/ftpfs.c	/^static const rtems_filesystem_operations_table rtems_ftpfs_ops;$/;"	v	file:
rtems_ftpfs_pasv_entry	lib/ftpfs.c	/^} rtems_ftpfs_pasv_entry;$/;"	t	typeref:struct:__anon21	file:
rtems_ftpfs_pasv_parser	lib/ftpfs.c	/^static void rtems_ftpfs_pasv_parser($/;"	f	file:
rtems_ftpfs_pasv_state	lib/ftpfs.c	/^} rtems_ftpfs_pasv_state;$/;"	t	typeref:enum:__anon20	file:
rtems_ftpfs_read	lib/ftpfs.c	/^static ssize_t rtems_ftpfs_read($/;"	f	file:
rtems_ftpfs_reply	lib/ftpfs.c	/^} rtems_ftpfs_reply;$/;"	t	typeref:enum:__anon18	file:
rtems_ftpfs_reply_parser	lib/ftpfs.c	/^typedef void (*rtems_ftpfs_reply_parser)($/;"	t	file:
rtems_ftpfs_reply_state	lib/ftpfs.c	/^} rtems_ftpfs_reply_state;$/;"	t	typeref:enum:__anon17	file:
rtems_ftpfs_root_handlers	lib/ftpfs.c	/^static const rtems_filesystem_file_handlers_r rtems_ftpfs_root_handlers = {$/;"	v	file:
rtems_ftpfs_root_handlers	lib/ftpfs.c	/^static const rtems_filesystem_file_handlers_r rtems_ftpfs_root_handlers;$/;"	v	file:
rtems_ftpfs_send_command	lib/ftpfs.c	/^static rtems_ftpfs_reply rtems_ftpfs_send_command($/;"	f	file:
rtems_ftpfs_send_command_with_parser	lib/ftpfs.c	/^static rtems_ftpfs_reply rtems_ftpfs_send_command_with_parser($/;"	f	file:
rtems_ftpfs_set_connection_timeout	lib/ftpfs.c	/^static int rtems_ftpfs_set_connection_timeout($/;"	f	file:
rtems_ftpfs_set_timeout	lib/ftpfs.c	/^rtems_status_code rtems_ftpfs_set_timeout($/;"	f
rtems_ftpfs_set_verbose	lib/ftpfs.c	/^rtems_status_code rtems_ftpfs_set_verbose(const char *mount_point, bool verbose)$/;"	f
rtems_ftpfs_size_entry	lib/ftpfs.c	/^} rtems_ftpfs_size_entry;$/;"	t	typeref:struct:__anon23	file:
rtems_ftpfs_size_parser	lib/ftpfs.c	/^static void rtems_ftpfs_size_parser($/;"	f	file:
rtems_ftpfs_size_state	lib/ftpfs.c	/^} rtems_ftpfs_size_state;$/;"	t	typeref:enum:__anon22	file:
rtems_ftpfs_split_names	lib/ftpfs.c	/^static int rtems_ftpfs_split_names ($/;"	f	file:
rtems_ftpfs_unmount_me	lib/ftpfs.c	/^static void rtems_ftpfs_unmount_me($/;"	f	file:
rtems_ftpfs_use_timeout	lib/ftpfs.c	/^static bool rtems_ftpfs_use_timeout(const struct timeval *to)$/;"	f	file:
rtems_ftpfs_write	lib/ftpfs.c	/^static ssize_t rtems_ftpfs_write($/;"	f	file:
rtems_hostname	rtems/sghostname.c	/^static char *rtems_hostname;$/;"	v	file:
rtems_ifmedia2str	rtems/rtems_mii_ioctl.c	/^rtems_ifmedia2str (int media, char *buf, int bufsz)$/;"	f
rtems_mdio_info	rtems/rtems_mii_ioctl.h	/^struct rtems_mdio_info {$/;"	s
rtems_mdio_read_func	rtems/rtems_mii_ioctl.h	/^typedef int (*rtems_mdio_read_func) (int phy, void *uarg, unsigned reg,$/;"	t
rtems_mdio_write_func	rtems/rtems_mii_ioctl.h	/^typedef int (*rtems_mdio_write_func) (int phy, void *uarg, unsigned reg,$/;"	t
rtems_mii_ioctl	rtems/rtems_mii_ioctl_kern.c	/^rtems_mii_ioctl (struct rtems_mdio_info *info, void *uarg, uint32_t cmd,$/;"	f
rtems_ppp_driver_attach	net/if_ppp.c	/^int rtems_ppp_driver_attach(struct rtems_bsdnet_ifconfig *config, int attaching)$/;"	f
rtems_rootfs_append_host_rec	rtems/mkrootfs.c	/^rtems_rootfs_append_host_rec (in_addr_t cip,$/;"	f
rtems_rootfs_dir_table	rtems/mkrootfs.c	/^typedef struct rtems_rootfs_dir_table$/;"	s	file:
rtems_rootfs_dir_table	rtems/mkrootfs.c	/^} rtems_rootfs_dir_table;$/;"	t	typeref:struct:rtems_rootfs_dir_table	file:
rtems_rootfs_file_append	rtems/mkrootfs.c	/^rtems_rootfs_file_append (const char *file,$/;"	f
rtems_set_sb_efficiency	kern/uipc_socket2.c	/^  void rtems_set_sb_efficiency($/;"	f
rtems_set_tcp_buffer_sizes	netinet/tcp_usrreq.c	/^void rtems_set_tcp_buffer_sizes(u_long sendspace, u_long recvspace)$/;"	f
rtems_set_udp_buffer_sizes	netinet/udp_usrreq.c	/^void rtems_set_udp_buffer_sizes(u_long sendspace, u_long recvspace)$/;"	f
rtems_sockbuf_close_notify	kern/uipc_socket.c	/^rtems_sockbuf_close_notify(struct socket *so, struct sockbuf *sb)$/;"	f	file:
rtems_socket_close_notify	kern/uipc_socket.c	/^rtems_socket_close_notify(struct socket *so)$/;"	f	file:
rtems_str2ifmedia	rtems/rtems_mii_ioctl.c	/^rtems_str2ifmedia (const char *str, int phy)$/;"	f
rtems_tftp_are_nodes_equal	lib/tftpDriver.c	/^static bool rtems_tftp_are_nodes_equal($/;"	f	file:
rtems_tftp_clone	lib/tftpDriver.c	/^static int rtems_tftp_clone($/;"	f	file:
rtems_tftp_close	lib/tftpDriver.c	/^static int rtems_tftp_close($/;"	f	file:
rtems_tftp_driver_debug	lib/tftpDriver.c	/^int rtems_tftp_driver_debug = 1;$/;"	v
rtems_tftp_eval_path	lib/tftpDriver.c	/^static void rtems_tftp_eval_path(rtems_filesystem_eval_path_context_t *self)$/;"	f	file:
rtems_tftp_flush	lib/tftpDriver.c	/^static int rtems_tftp_flush (struct tftpStream *tp)$/;"	f	file:
rtems_tftp_free_node_info	lib/tftpDriver.c	/^static void rtems_tftp_free_node_info($/;"	f	file:
rtems_tftp_fstat	lib/tftpDriver.c	/^static int rtems_tftp_fstat($/;"	f	file:
rtems_tftp_ftruncate	lib/tftpDriver.c	/^static int rtems_tftp_ftruncate($/;"	f	file:
rtems_tftp_handlers	lib/tftpDriver.c	/^static const rtems_filesystem_file_handlers_r   rtems_tftp_handlers;$/;"	v	file:
rtems_tftp_handlers	lib/tftpDriver.c	/^static const rtems_filesystem_file_handlers_r rtems_tftp_handlers = {$/;"	v	file:
rtems_tftp_is_directory	lib/tftpDriver.c	/^static bool rtems_tftp_is_directory($/;"	f	file:
rtems_tftp_open	lib/tftpDriver.c	/^static int rtems_tftp_open($/;"	f	file:
rtems_tftp_open_worker	lib/tftpDriver.c	/^static int rtems_tftp_open_worker($/;"	f	file:
rtems_tftp_ops	lib/tftpDriver.c	/^static const rtems_filesystem_operations_table  rtems_tftp_ops = {$/;"	v	file:
rtems_tftp_ops	lib/tftpDriver.c	/^static const rtems_filesystem_operations_table  rtems_tftp_ops;$/;"	v	file:
rtems_tftp_read	lib/tftpDriver.c	/^static ssize_t rtems_tftp_read($/;"	f	file:
rtems_tftp_write	lib/tftpDriver.c	/^static ssize_t rtems_tftp_write($/;"	f	file:
rtems_tftpfs_initialize	lib/tftpDriver.c	/^int rtems_tftpfs_initialize($/;"	f
rtems_tftpfs_shutdown	lib/tftpDriver.c	/^rtems_tftpfs_shutdown (rtems_filesystem_mount_table_entry_t* mt_entry)$/;"	f	file:
rtentry	net/route.h	/^struct rtentry {$/;"	s
rtfc_arg	net/route.c	/^struct rtfc_arg {$/;"	s	file:
rtfcdebug	net/route.c	/^int rtfcdebug = 0;$/;"	v
rtfree	net/route.c	/^rtfree(struct rtentry *rt)$/;"	f
rti_addrs	net/route.h	/^	int	rti_addrs;$/;"	m	struct:rt_addrinfo
rti_ifp	netinet/in_var.h	/^	struct ifnet *rti_ifp;$/;"	m	struct:router_info	typeref:struct:router_info::ifnet
rti_info	net/route.h	/^	struct	sockaddr *rti_info[RTAX_MAX];$/;"	m	struct:rt_addrinfo	typeref:struct:rt_addrinfo::sockaddr
rti_next	netinet/in_var.h	/^	struct router_info *rti_next;$/;"	m	struct:router_info	typeref:struct:router_info::router_info
rti_time	netinet/in_var.h	/^	int    rti_time; \/* # of slow timeouts since last old query *\/$/;"	m	struct:router_info
rti_type	netinet/in_var.h	/^	int    rti_type; \/* type of router which is querier on this interface *\/$/;"	m	struct:router_info
rtinit	net/route.c	/^rtinit(struct ifaddr *ifa, int cmd, int flags)$/;"	f
rtioctl	net/route.c	/^rtioctl(int req, caddr_t data, struct proc *p)$/;"	f
rtm_addrs	net/route.h	/^	int	rtm_addrs;	\/* bitmask identifying sockaddrs in msg *\/$/;"	m	struct:rt_msghdr
rtm_errno	net/route.h	/^	int	rtm_errno;	\/* why failed *\/$/;"	m	struct:rt_msghdr
rtm_flags	net/route.h	/^	int	rtm_flags;	\/* flags, incl. kern & message, e.g. DONE *\/$/;"	m	struct:rt_msghdr
rtm_index	net/route.h	/^	u_short	rtm_index;	\/* index for associated ifp *\/$/;"	m	struct:rt_msghdr
rtm_inits	net/route.h	/^	u_long	rtm_inits;	\/* which metrics we are initializing *\/$/;"	m	struct:rt_msghdr
rtm_msglen	net/route.h	/^	u_short	rtm_msglen;	\/* to skip over non-understood messages *\/$/;"	m	struct:rt_msghdr
rtm_pid	net/route.h	/^	pid_t	rtm_pid;	\/* identify sender *\/$/;"	m	struct:rt_msghdr
rtm_rmx	net/route.h	/^	struct	rt_metrics rtm_rmx; \/* metrics themselves *\/$/;"	m	struct:rt_msghdr	typeref:struct:rt_msghdr::rt_metrics
rtm_seq	net/route.h	/^	int	rtm_seq;	\/* for sender to identify action *\/$/;"	m	struct:rt_msghdr
rtm_type	net/route.h	/^	u_char	rtm_type;	\/* message type *\/$/;"	m	struct:rt_msghdr
rtm_use	net/route.h	/^	int	rtm_use;	\/* from rtentry *\/$/;"	m	struct:rt_msghdr
rtm_version	net/route.h	/^	u_char	rtm_version;	\/* future binary compatibility *\/$/;"	m	struct:rt_msghdr
rtq_minreallyold	netinet/in_rmx.c	/^static int rtq_minreallyold = 10;$/;"	v	file:
rtq_reallyold	netinet/in_rmx.c	/^static int rtq_reallyold = 60*60;$/;"	v	file:
rtq_timeout	netinet/in_rmx.c	/^static int rtq_timeout = RTQ_TIMEOUT;$/;"	v	file:
rtq_toomany	netinet/in_rmx.c	/^static int rtq_toomany = 128;$/;"	v	file:
rtqk_arg	netinet/in_rmx.c	/^struct rtqk_arg {$/;"	s	file:
rtredirect	net/route.c	/^rtredirect(struct sockaddr *dst, struct sockaddr *gateway,$/;"	f
rtrequest	net/route.c	/^rtrequest(int req, struct sockaddr *dst, struct sockaddr *gateway,$/;"	f
rts_badredirect	net/route.h	/^	short	rts_badredirect;	\/* bogus redirect calls *\/$/;"	m	struct:rtstat
rts_dynamic	net/route.h	/^	short	rts_dynamic;		\/* routes created by redirects *\/$/;"	m	struct:rtstat
rts_newgateway	net/route.h	/^	short	rts_newgateway;		\/* routes modified by redirects *\/$/;"	m	struct:rtstat
rts_unreach	net/route.h	/^	short	rts_unreach;		\/* lookups which failed *\/$/;"	m	struct:rtstat
rts_wildcard	net/route.h	/^	short	rts_wildcard;		\/* lookups satisfied by a wildcard *\/$/;"	m	struct:rtstat
rtstat	net/route.c	/^static struct rtstat rtstat;$/;"	v	typeref:struct:rtstat	file:
rtstat	net/route.h	/^struct	rtstat {$/;"	s
rttrash	net/route.c	/^static int	rttrash;		\/* routes not in table but not freed *\/$/;"	v	file:
rule	netinet/ip_fw.h	/^        struct ip_fw    *rule;$/;"	m	struct:ip_fw_chain	typeref:struct:ip_fw_chain::ip_fw
ruserok	libc/rcmd.c	/^ruserok(rhost, superuser, ruser, luser)$/;"	f
s	libc/res_send.c	/^static int s = -1;		\/* socket used for communications *\/$/;"	v	file:
s_addr	arpa/inet.h	/^	in_addr_t s_addr;$/;"	m	struct:in_addr
s_addr	netinet/in.h	/^	in_addr_t s_addr;$/;"	m	struct:in_addr
s_aliases	netdb.h	/^	char	**s_aliases;	\/* alias list *\/$/;"	m	struct:servent
s_name	netdb.h	/^	char	*s_name;	\/* official service name *\/$/;"	m	struct:servent
s_port	netdb.h	/^	int	s_port;		\/* port # *\/$/;"	m	struct:servent
s_proto	netdb.h	/^	char	*s_proto;	\/* protocol to use *\/$/;"	m	struct:servent
sa	rtems/rtems_showroute.c	/^		struct sockaddr		sa;$/;"	m	union:rinfo::__anon25	typeref:struct:rinfo::__anon25::sockaddr	file:
sa_atime	nfs/nfsproto.h	/^	nfstime2	sa_atime;$/;"	m	struct:nfsv2_sattr
sa_atime	nfs/nfsproto.h	/^	nfstime3	sa_atime;$/;"	m	struct:nfsv3_sattr
sa_atimetype	nfs/nfsproto.h	/^	u_int32_t	sa_atimetype;$/;"	m	struct:nfsv3_sattr
sa_data	sys/socket.h	/^	char	sa_data[14];		\/* actually longer; address value *\/$/;"	m	struct:sockaddr
sa_data	sys/socket.h	/^	char	sa_data[14];		\/* up to 14 bytes of direct address *\/$/;"	m	struct:osockaddr
sa_equal	net/route.c	71;"	d	file:
sa_equal	net/rtsock.c	133;"	d	file:
sa_equal	net/rtsock.c	352;"	d	file:
sa_family	sys/socket.h	/^	sa_family_t	sa_family;		\/* address family *\/$/;"	m	struct:sockaddr
sa_family	sys/socket.h	/^	unsigned short	sa_family;		\/* address family *\/$/;"	m	struct:osockaddr
sa_family_t	netinet/in.h	/^typedef	__sa_family_t		sa_family_t;$/;"	t
sa_family_t	sys/socket.h	/^typedef	__sa_family_t	sa_family_t;$/;"	t
sa_family_t	sys/un.h	/^typedef	__sa_family_t	sa_family_t;$/;"	t
sa_gid	nfs/nfsproto.h	/^	u_int32_t	sa_gid;$/;"	m	struct:nfsv2_sattr
sa_gidfalse	nfs/nfsproto.h	/^	u_int32_t	sa_gidfalse;$/;"	m	struct:nfsv3_sattr
sa_len	sys/socket.h	/^	unsigned char	sa_len;			\/* total length *\/$/;"	m	struct:sockaddr
sa_mode	nfs/nfsproto.h	/^	u_int32_t	sa_mode;$/;"	m	struct:nfsv2_sattr
sa_mode	nfs/nfsproto.h	/^	u_int32_t	sa_mode;$/;"	m	struct:nfsv3_sattr
sa_modetrue	nfs/nfsproto.h	/^	u_int32_t	sa_modetrue;$/;"	m	struct:nfsv3_sattr
sa_mtime	nfs/nfsproto.h	/^	nfstime2	sa_mtime;$/;"	m	struct:nfsv2_sattr
sa_mtime	nfs/nfsproto.h	/^	nfstime3	sa_mtime;$/;"	m	struct:nfsv3_sattr
sa_mtimetype	nfs/nfsproto.h	/^	u_int32_t	sa_mtimetype;$/;"	m	struct:nfsv3_sattr
sa_size	nfs/nfsproto.h	/^	u_int32_t	sa_size;$/;"	m	struct:nfsv2_sattr
sa_sizefalse	nfs/nfsproto.h	/^	u_int32_t	sa_sizefalse;$/;"	m	struct:nfsv3_sattr
sa_uid	nfs/nfsproto.h	/^	u_int32_t	sa_uid;$/;"	m	struct:nfsv2_sattr
sa_uidfalse	nfs/nfsproto.h	/^	u_int32_t	sa_uidfalse;$/;"	m	struct:nfsv3_sattr
sa_zero	net/rtsock.c	/^static struct	sockaddr sa_zero   = { sizeof(sa_zero), AF_INET, { 0 } };$/;"	v	typeref:struct:sockaddr	file:
same	netinet/ip_mroute.c	184;"	d	file:
satosin	netinet/in_pcb.c	297;"	d	file:
satosin	netinet/in_rmx.c	116;"	d	file:
satosin	netinet/in_rmx.c	120;"	d	file:
satosin	netinet/ip_icmp.c	447;"	d	file:
satosin	netinet/ip_input.c	1353;"	d	file:
satosin	netinet/ip_input.c	401;"	d	file:
save_rte	netinet/ip_input.c	/^save_rte(u_char *option, struct in_addr dst)$/;"	f
sb_cc	sys/socketvar.h	/^		u_int	sb_cc;		\/* actual chars in buffer *\/$/;"	m	struct:socket::sockbuf
sb_efficiency	kern/uipc_socket2.c	/^static	u_long sb_efficiency = 8;	\/* parameter for sbreserve() *\/$/;"	v	file:
sb_efficiency	rtems/rtems_bsdnet.h	/^	unsigned long		sb_efficiency;$/;"	m	struct:rtems_bsdnet_config
sb_flags	sys/socketvar.h	/^		short	sb_flags;	\/* flags, see below *\/$/;"	m	struct:socket::sockbuf
sb_hiwat	sys/socketvar.h	/^		u_int	sb_hiwat;	\/* max actual char count *\/$/;"	m	struct:socket::sockbuf
sb_lock	rtems/rtems_glue.c	/^sb_lock(struct sockbuf *sb)$/;"	f
sb_lowat	sys/socketvar.h	/^		int	sb_lowat;	\/* low water mark *\/$/;"	m	struct:socket::sockbuf
sb_max	kern/uipc_socket2.c	/^u_long	sb_max = SB_MAX;		\/* XXX should be static *\/$/;"	v
sb_mb	sys/socketvar.h	/^		struct	mbuf *sb_mb;	\/* the mbuf chain *\/$/;"	m	struct:socket::sockbuf	typeref:struct:socket::sockbuf::mbuf
sb_mbcnt	sys/socketvar.h	/^		u_int	sb_mbcnt;	\/* chars of mbufs used *\/$/;"	m	struct:socket::sockbuf
sb_mbmax	sys/socketvar.h	/^		u_int	sb_mbmax;	\/* max chars of mbufs to use *\/$/;"	m	struct:socket::sockbuf
sb_sel	sys/socketvar.h	/^		struct	selinfo sb_sel;	\/* process selecting read\/write *\/$/;"	m	struct:socket::sockbuf	typeref:struct:socket::sockbuf::selinfo
sb_timeo	sys/socketvar.h	/^		int	sb_timeo;	\/* timeout for read\/write *\/$/;"	m	struct:socket::sockbuf
sb_wakeup	sys/socketvar.h	/^		void	(*sb_wakeup)(struct socket *, void *);$/;"	m	struct:socket::sockbuf
sb_wakeuparg	sys/socketvar.h	/^		void 	*sb_wakeuparg;	\/* arg for above *\/$/;"	m	struct:socket::sockbuf
sballoc	sys/socketvar.h	161;"	d
sbappend	kern/uipc_socket2.c	/^sbappend(struct sockbuf *sb, struct mbuf *m)$/;"	f
sbappendaddr	kern/uipc_socket2.c	/^sbappendaddr(struct sockbuf *sb, struct sockaddr *asa,$/;"	f
sbappendcontrol	kern/uipc_socket2.c	/^sbappendcontrol(struct sockbuf *sb, struct mbuf *m0,$/;"	f
sbappendrecord	kern/uipc_socket2.c	/^sbappendrecord(struct sockbuf *sb, struct mbuf *m0)$/;"	f
sbcheck	kern/uipc_socket2.c	/^sbcheck(struct sockbuf *sb)$/;"	f
sbcompress	kern/uipc_socket2.c	/^sbcompress(struct sockbuf *sb, struct mbuf *m, struct mbuf *n)$/;"	f
sbcreatecontrol	kern/uipc_socket2.c	/^sbcreatecontrol(caddr_t p, int size, int type, int level)$/;"	f
sbdrop	kern/uipc_socket2.c	/^sbdrop(struct sockbuf *sb, int len)$/;"	f
sbdroprecord	kern/uipc_socket2.c	/^sbdroprecord(struct sockbuf *sb)$/;"	f
sbflush	kern/uipc_socket2.c	/^sbflush(struct sockbuf *sb)$/;"	f
sbfree	sys/socketvar.h	169;"	d
sbinsertoob	kern/uipc_socket2.c	/^sbinsertoob(struct sockbuf *sb, struct mbuf *m0)$/;"	f
sblock	sys/socketvar.h	181;"	d
sbrelease	kern/uipc_socket2.c	/^sbrelease(struct sockbuf *sb)$/;"	f
sbreserve	kern/uipc_socket2.c	/^sbreserve(struct sockbuf *sb, u_long cc)$/;"	f
sbspace	sys/socketvar.h	138;"	d
sbunlock	sys/socketvar.h	186;"	d
sbwait	rtems/rtems_glue.c	/^sbwait(struct sockbuf *sb)$/;"	f
sc_active_filt	net/if_pppvar.h	/^	struct	bpf_program sc_active_filt; \/* filter for "non-idle" packets *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::bpf_program
sc_asyncmap	net/if_pppvar.h	/^	ext_accm sc_asyncmap;		\/* async control character map *\/$/;"	m	struct:ppp_softc
sc_bpf	net/if_pppvar.h	/^	caddr_t	sc_bpf;			\/* hook for BPF *\/$/;"	m	struct:ppp_softc
sc_comp	net/if_pppvar.h	/^	struct	vjcompress *sc_comp; 	\/* vjc control buffer *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::vjcompress
sc_ctlp	net/if_pppvar.h	/^	void	(*sc_ctlp)(struct ppp_softc *); \/* rcvd control pkt *\/$/;"	m	struct:ppp_softc
sc_devp	net/if_pppvar.h	/^	void	*sc_devp;		\/* pointer to device-dep structure *\/$/;"	m	struct:ppp_softc
sc_fastq	net/if_pppvar.h	/^	struct	ifqueue sc_fastq;	\/* interactive output packet q *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::ifqueue
sc_fcs	net/if_pppvar.h	/^	u_short	sc_fcs;			\/* FCS so far (input) *\/$/;"	m	struct:ppp_softc
sc_flags	net/if_pppvar.h	/^	u_int	sc_flags;		\/* control\/status bits; see if_ppp.h *\/$/;"	m	struct:ppp_softc
sc_freeq	net/if_pppvar.h	/^	struct	ifqueue sc_freeq;       \/* free packets *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::ifqueue
sc_if	net/if_pppvar.h	/^	struct	ifnet sc_if;		\/* network-visible interface *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::ifnet
sc_ilen	net/if_pppvar.h	/^	short	sc_ilen;		\/* length of input packet so far *\/$/;"	m	struct:ppp_softc
sc_inq	net/if_pppvar.h	/^	struct	ifqueue sc_inq;		\/* queue of input packets for daemon *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::ifqueue
sc_last_recv	net/if_pppvar.h	/^	time_t	sc_last_recv;		\/* time (secs) last NP pkt rcvd *\/$/;"	m	struct:ppp_softc
sc_last_sent	net/if_pppvar.h	/^	time_t	sc_last_sent;		\/* time (secs) last NP pkt sent *\/$/;"	m	struct:ppp_softc
sc_m	net/if_pppvar.h	/^	struct	mbuf *sc_m;		\/* pointer to input mbuf chain *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_mc	net/if_pppvar.h	/^	struct	mbuf *sc_mc;		\/* pointer to current input mbuf *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_mp	net/if_pppvar.h	/^	char	*sc_mp;			\/* ptr to next char in input mbuf *\/$/;"	m	struct:ppp_softc
sc_mru	net/if_pppvar.h	/^	short	sc_mru;			\/* max receive unit *\/$/;"	m	struct:ppp_softc
sc_npmode	net/if_pppvar.h	/^	enum	NPmode sc_npmode[NUM_NP]; \/* what to do with each NP *\/$/;"	m	struct:ppp_softc	typeref:enum:ppp_softc::NPmode
sc_npqtail	net/if_pppvar.h	/^	struct	mbuf **sc_npqtail;	\/* ptr to last next ptr in npqueue *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_npqueue	net/if_pppvar.h	/^	struct	mbuf *sc_npqueue;	\/* output packets not to be sent yet *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_outbuf	net/if_pppvar.h	/^	u_char *sc_outbuf;		\/* pointer to output data *\/$/;"	m	struct:ppp_softc
sc_outchar	net/if_pppvar.h	/^	u_char  sc_outchar;$/;"	m	struct:ppp_softc
sc_outfcs	net/if_pppvar.h	/^	u_short	sc_outfcs;		\/* FCS so far for output packet *\/$/;"	m	struct:ppp_softc
sc_outfcsbuf	net/if_pppvar.h	/^	u_char	sc_outfcsbuf[8];	\/* output packet fcs buffer *\/$/;"	m	struct:ppp_softc
sc_outfcslen	net/if_pppvar.h	/^	short	sc_outfcslen;		\/* length of output fcs data *\/$/;"	m	struct:ppp_softc
sc_outflag	net/if_pppvar.h	/^	short	sc_outflag;		\/* output status flag *\/$/;"	m	struct:ppp_softc
sc_outlen	net/if_pppvar.h	/^	short	sc_outlen;		\/* length of output packet *\/$/;"	m	struct:ppp_softc
sc_outm	net/if_pppvar.h	/^	struct	mbuf *sc_outm;		\/* mbuf chain currently being output *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_outmc	net/if_pppvar.h	/^	struct	mbuf *sc_outmc;		\/* mbuf currently being output *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::mbuf
sc_outoff	net/if_pppvar.h	/^	short	sc_outoff;		\/* output packet byte offset *\/$/;"	m	struct:ppp_softc
sc_pass_filt	net/if_pppvar.h	/^	struct	bpf_program sc_pass_filt;   \/* filter for packets to pass *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::bpf_program
sc_pppdtask	net/if_pppvar.h	/^	rtems_id sc_pppdtask;$/;"	m	struct:ppp_softc
sc_rasyncmap	net/if_pppvar.h	/^	u_long	sc_rasyncmap;		\/* receive async control char map *\/$/;"	m	struct:ppp_softc
sc_rawin	net/if_pppvar.h	/^	u_char	sc_rawin[16];		\/* chars as received *\/$/;"	m	struct:ppp_softc
sc_rawin_count	net/if_pppvar.h	/^	int	sc_rawin_count;		\/* # in sc_rawin *\/$/;"	m	struct:ppp_softc
sc_rawq	net/if_pppvar.h	/^	struct	ifqueue sc_rawq;	\/* received packets *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::ifqueue
sc_rc_state	net/if_pppvar.h	/^	void	*sc_rc_state;		\/* receive decompressor state *\/$/;"	m	struct:ppp_softc
sc_rcomp	net/if_pppvar.h	/^	struct	compressor *sc_rcomp;	\/* receive decompressor *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::compressor
sc_relinq	net/if_pppvar.h	/^	void	(*sc_relinq)(struct ppp_softc *); \/* relinquish ifunit *\/$/;"	m	struct:ppp_softc
sc_rxtask	net/if_pppvar.h	/^	rtems_id sc_rxtask;$/;"	m	struct:ppp_softc
sc_start	net/if_pppvar.h	/^	void	(*sc_start)(struct ppp_softc *);	\/* start output proc *\/$/;"	m	struct:ppp_softc
sc_stats	net/if_pppvar.h	/^	struct	pppstat sc_stats;	\/* count of bytes\/pkts sent\/rcvd *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::pppstat
sc_txtask	net/if_pppvar.h	/^	rtems_id sc_txtask;$/;"	m	struct:ppp_softc
sc_xc_state	net/if_pppvar.h	/^	void	*sc_xc_state;		\/* transmit compressor state *\/$/;"	m	struct:ppp_softc
sc_xcomp	net/if_pppvar.h	/^	struct	compressor *sc_xcomp;	\/* transmit compressor *\/$/;"	m	struct:ppp_softc	typeref:struct:ppp_softc::compressor
sc_xfer	net/if_pppvar.h	/^	pid_t	sc_xfer;		\/* used in transferring unit *\/$/;"	m	struct:ppp_softc
schednetisr	net/netisr.h	69;"	d
sdl	rtems/rtems_showroute.c	/^		struct sockaddr_dl	sdl;$/;"	m	union:rinfo::__anon25	typeref:struct:rinfo::__anon25::sockaddr_dl	file:
sdl_alen	net/if_dl.h	/^	u_char	sdl_alen;	\/* link level address length *\/$/;"	m	struct:sockaddr_dl
sdl_data	net/if_dl.h	/^	char	sdl_data[46];	\/* minimum work area, can be larger;$/;"	m	struct:sockaddr_dl
sdl_family	net/if_dl.h	/^	u_char	sdl_family;	\/* AF_LINK *\/$/;"	m	struct:sockaddr_dl
sdl_index	net/if_dl.h	/^	u_short	sdl_index;	\/* if != 0, system given index for interface *\/$/;"	m	struct:sockaddr_dl
sdl_len	net/if_dl.h	/^	u_char	sdl_len;	\/* Total length of sockaddr *\/$/;"	m	struct:sockaddr_dl
sdl_nlen	net/if_dl.h	/^	u_char	sdl_nlen;	\/* interface name length, no trailing 0 reqd. *\/$/;"	m	struct:sockaddr_dl
sdl_slen	net/if_dl.h	/^	u_char	sdl_slen;	\/* link layer selector length *\/$/;"	m	struct:sockaddr_dl
sdl_type	net/if_dl.h	/^	u_char	sdl_type;	\/* interface type *\/$/;"	m	struct:sockaddr_dl
secs	nfs/bootp_subr.c	/^  u_int16_t secs;$/;"	m	struct:bootp_packet	file:
secs	rtems/rtems_dhcp.c	/^  u_int16_t      secs;$/;"	m	struct:dhcp_packet	file:
securelevel	kern/kern_mib.c	/^int securelevel = -1;$/;"	v
securelevel_mtx	kern/kern_mib.c	/^struct mtx securelevel_mtx;$/;"	v	typeref:struct:mtx
seg_next	netinet/tcp_var.h	/^	struct	tcpiphdr *seg_next;	\/* sequencing queue *\/$/;"	m	struct:tcpcb	typeref:struct:tcpcb::tcpiphdr
seg_prev	netinet/tcp_var.h	/^	struct	tcpiphdr *seg_prev;$/;"	m	struct:tcpcb	typeref:struct:tcpcb::tcpiphdr
select	rtems/rtems_select.c	/^select (int nfds, fd_set *__restrict readfds, fd_set *__restrict writefds,$/;"	f
selinfo	sys/select.h	/^struct selinfo {$/;"	s
selscan	rtems/rtems_select.c	/^selscan (rtems_id tid, fd_mask **ibits, fd_mask **obits, int nfd, int *retval)$/;"	f	file:
send	libc/send.c	/^send($/;"	f
sendAck	lib/tftpDriver.c	/^sendAck (struct tftpStream *tp)$/;"	f	file:
sendStifle	lib/tftpDriver.c	/^sendStifle (struct tftpStream *tp, struct sockaddr_in *to)$/;"	f	file:
senderr	net/if_ethersubr.c	104;"	d	file:
senderr	net/route.c	415;"	d	file:
senderr	net/rtsock.c	143;"	d	file:
sendmsg	rtems/rtems_syscall.c	/^sendmsg (int s, const struct msghdr *mp, int flags)$/;"	f
sendto	rtems/rtems_syscall.c	/^sendto (int s, const void *buf, size_t buflen, int flags, const struct sockaddr *to, int tolen)$/;"	f
serv	libc/getservent.c	/^static struct servent serv;$/;"	v	typeref:struct:servent	file:
serv_aliases	libc/getservent.c	/^static char *serv_aliases[MAXALIASES];$/;"	v	file:
serv_stepping_yp	libc/getservent.c	/^static int serv_stepping_yp = 0;$/;"	v	file:
servent	netdb.h	/^struct	servent {$/;"	s
servf	libc/getservent.c	/^static FILE *servf = NULL;$/;"	v	file:
service_done	libc/gethostnamadr.c	/^static int service_done = 0;$/;"	v	file:
service_done	libc/getnetnamadr.c	/^static int service_done = 0;$/;"	v	file:
service_names	libc/gethostnamadr.c	/^} service_names[] = {$/;"	v	typeref:struct:__anon27	file:
service_names	libc/getnetnamadr.c	/^} service_names[] = {$/;"	v	typeref:struct:__anon32	file:
service_order	libc/gethostnamadr.c	/^static enum service_type service_order[SERVICE_MAX + 1];$/;"	v	typeref:enum:service_type	file:
service_order	libc/getnetnamadr.c	/^static enum service_type service_order[SERVICE_MAX + 1];$/;"	v	typeref:enum:service_type	file:
service_type	libc/gethostnamadr.c	/^enum service_type {$/;"	g	file:
service_type	libc/getnetnamadr.c	/^enum service_type {$/;"	g	file:
set_assert	netinet/ip_mroute.c	/^set_assert(int *i)$/;"	f	file:
set_static_address	rtems/rtems_dhcp_failsafe.c	/^set_static_address (struct rtems_bsdnet_ifconfig *ifp)$/;"	f	file:
setfs	nfs/bootp_subr.c	/^setfs(struct sockaddr_in *addr, char *path, char *p)$/;"	f	file:
sethostent	libc/gethostnamadr.c	/^sethostent(int stayopen)$/;"	f
sethostname	rtems/sghostname.c	/^sethostname (const char *name, size_t namelen)$/;"	f
setlogmask	lib/syslog.c	/^setlogmask (int pmask)$/;"	f
setnetent	libc/getnetnamadr.c	/^setnetent(int stayopen)$/;"	f
setprotoent	libc/getprotoent.c	/^setprotoent($/;"	f
setservent	libc/getservent.c	/^setservent($/;"	f
setsockopt	rtems/rtems_syscall.c	/^setsockopt (int s, int level, int name, const void *val, int len)$/;"	f
sf_abytes	nfs/nfsproto.h	395;"	d
sf_afiles	nfs/nfsproto.h	398;"	d
sf_bavail	nfs/nfsproto.h	392;"	d
sf_bfree	nfs/nfsproto.h	391;"	d
sf_blocks	nfs/nfsproto.h	390;"	d
sf_bsize	nfs/nfsproto.h	389;"	d
sf_fbytes	nfs/nfsproto.h	394;"	d
sf_ffiles	nfs/nfsproto.h	397;"	d
sf_invarsec	nfs/nfsproto.h	399;"	d
sf_nfsv2	nfs/nfsproto.h	/^		} sf_nfsv2;$/;"	m	union:nfs_statfs::__anon12	typeref:struct:nfs_statfs::__anon12::__anon13
sf_nfsv3	nfs/nfsproto.h	/^		} sf_nfsv3;$/;"	m	union:nfs_statfs::__anon12	typeref:struct:nfs_statfs::__anon12::__anon14
sf_tbytes	nfs/nfsproto.h	393;"	d
sf_tfiles	nfs/nfsproto.h	396;"	d
sf_tsize	nfs/nfsproto.h	388;"	d
sf_un	nfs/nfsproto.h	/^	} sf_un;$/;"	m	struct:nfs_statfs	typeref:union:nfs_statfs::__anon12
shared_media_strings	rtems/rtems_mii_ioctl.c	/^static struct ifmedia_description shared_media_strings[] =$/;"	v	typeref:struct:ifmedia_description	file:
shift	arpa/nameser.h	/^struct _ns_flagdata {  int mask, shift;  };$/;"	m	struct:_ns_flagdata
show_inet_route	rtems/rtems_showroute.c	/^show_inet_route ($/;"	f	file:
showaddress	rtems/rtems_showifstat.c	/^showaddress (char *name, struct sockaddr *a)$/;"	f	file:
showicmpstat	rtems/rtems_showicmpstat.c	/^showicmpstat (const char *name, unsigned long n)$/;"	f	file:
showipstat	rtems/rtems_showipstat.c	/^showipstat (const char *name, unsigned long n)$/;"	f	file:
showtcpstat	rtems/rtems_showtcpstat.c	/^showtcpstat (const char *name, unsigned long n)$/;"	f	file:
showudpstat	rtems/rtems_showudpstat.c	/^showudpstat (const char *name, unsigned long n)$/;"	f	file:
shutdown	rtems/rtems_syscall.c	/^shutdown (int s, int how)$/;"	f
si_flags	sys/select.h	/^	short	si_flags;	\/* see below *\/$/;"	m	struct:selinfo
si_pid	sys/select.h	/^	pid_t	si_pid;		\/* process to be notified *\/$/;"	m	struct:selinfo
siaddr	nfs/bootp_subr.c	/^  struct in_addr siaddr;$/;"	m	struct:bootp_packet	typeref:struct:bootp_packet::in_addr	file:
siaddr	rtems/rtems_dhcp.c	/^  struct in_addr siaddr;$/;"	m	struct:dhcp_packet	typeref:struct:dhcp_packet::in_addr	file:
sig_t	rtems/rtems_bsdnet_internal.h	/^typedef	__sighandler_t	*sig_t;	\/* type of pointer to a signal function *\/$/;"	t
sigacts	sys/signalvar.h	/^struct	sigacts {$/;"	s
sigaltstack	rtems/rtems_bsdnet_internal.h	/^struct sigaltstack {$/;"	s
sigcantmask	sys/signalvar.h	149;"	d
sigprop	sys/signalvar.h	/^static int sigprop[NSIG + 1] = {$/;"	v
sin	rtems/rtems_showroute.c	/^		struct sockaddr_in	sin;$/;"	m	union:rinfo::__anon25	typeref:struct:rinfo::__anon25::sockaddr_in	file:
sin_addr	netinet/if_ether.h	/^	struct	in_addr sin_addr;$/;"	m	struct:sockaddr_inarp	typeref:struct:sockaddr_inarp::in_addr
sin_addr	netinet/in.h	/^	struct	in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	netinet/if_ether.h	/^	u_char	sin_family;$/;"	m	struct:sockaddr_inarp
sin_family	netinet/in.h	/^	sa_family_t	sin_family;$/;"	m	struct:sockaddr_in
sin_len	netinet/if_ether.h	/^	u_char	sin_len;$/;"	m	struct:sockaddr_inarp
sin_len	netinet/in.h	/^	uint8_t	sin_len;$/;"	m	struct:sockaddr_in
sin_other	netinet/if_ether.h	/^	u_short	sin_other;$/;"	m	struct:sockaddr_inarp
sin_port	netinet/if_ether.h	/^	u_short sin_port;$/;"	m	struct:sockaddr_inarp
sin_port	netinet/in.h	/^	in_port_t	sin_port;$/;"	m	struct:sockaddr_in
sin_srcaddr	netinet/if_ether.h	/^	struct	in_addr sin_srcaddr;$/;"	m	struct:sockaddr_inarp	typeref:struct:sockaddr_inarp::in_addr
sin_tos	netinet/if_ether.h	/^	u_short	sin_tos;$/;"	m	struct:sockaddr_inarp
sin_zero	netinet/in.h	/^	char	sin_zero[8];$/;"	m	struct:sockaddr_in
sintosa	netinet/in_pcb.c	298;"	d	file:
sintosa	netinet/ip_output.c	156;"	d	file:
sioc_sg_req	netinet/ip_mroute.h	/^struct sioc_sg_req {$/;"	s
sioc_vif_req	netinet/ip_mroute.h	/^struct sioc_vif_req {$/;"	s
size	kern/kern_sysctl.c	/^	size_t	*size;$/;"	m	struct:getkerninfo_args	file:
size	lib/ftpfs.c	/^  off_t size;$/;"	m	struct:__anon23	file:
skiprr	libc/ns_parse.c	/^skiprr(const u_char *ptr, const u_char *eom, ns_sect section, int count) {$/;"	f	file:
sl_compress_init	net/slcompress.c	/^sl_compress_init(struct slcompress *comp, int max_state)$/;"	f
sl_compress_tcp	net/slcompress.c	/^sl_compress_tcp(struct mbuf *m, struct ip *ip, struct slcompress *comp,$/;"	f
sl_uncompress_tcp	net/slcompress.c	/^sl_uncompress_tcp(u_char **bufp, int len, u_int type, struct slcompress *comp)$/;"	f
sl_uncompress_tcp_core	net/slcompress.c	/^sl_uncompress_tcp_core(u_char *buf, int buflen, int total_len,$/;"	f
slcompress	net/slcompress.h	/^struct slcompress {$/;"	s
slcs_u	net/slcompress.h	/^	} slcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon39
sls_compressed	net/slcompress.h	/^	int sls_compressed;	\/* outbound compressed packets *\/$/;"	m	struct:slcompress
sls_compressedin	net/slcompress.h	/^	int sls_compressedin;	\/* inbound compressed packets *\/$/;"	m	struct:slcompress
sls_errorin	net/slcompress.h	/^	int sls_errorin;	\/* inbound unknown type packets *\/$/;"	m	struct:slcompress
sls_misses	net/slcompress.h	/^	int sls_misses;		\/* times couldn't find conn. state *\/$/;"	m	struct:slcompress
sls_packets	net/slcompress.h	/^	int sls_packets;	\/* outbound packets *\/$/;"	m	struct:slcompress
sls_searches	net/slcompress.h	/^	int sls_searches;	\/* searches for connection state *\/$/;"	m	struct:slcompress
sls_tossed	net/slcompress.h	/^	int sls_tossed;		\/* inbound packets tossed because of error *\/$/;"	m	struct:slcompress
sls_uncompressedin	net/slcompress.h	/^	int sls_uncompressedin;	\/* inbound uncompressed packets *\/$/;"	m	struct:slcompress
sname	nfs/bootp_subr.c	/^  char sname[64];$/;"	m	struct:bootp_packet	file:
sname	rtems/rtems_dhcp.c	/^  char           sname[64];$/;"	m	struct:dhcp_packet	file:
snd_cwnd	netinet/tcp_var.h	/^	u_long	snd_cwnd;		\/* congestion-controlled window *\/$/;"	m	struct:tcpcb
snd_max	netinet/tcp_var.h	/^	tcp_seq	snd_max;		\/* highest sequence number sent;$/;"	m	struct:tcpcb
snd_nxt	netinet/tcp_var.h	/^	tcp_seq	snd_nxt;		\/* send next *\/$/;"	m	struct:tcpcb
snd_scale	netinet/tcp_var.h	/^	u_char	snd_scale;		\/* window scaling for send window *\/$/;"	m	struct:tcpcb
snd_ssthresh	netinet/tcp_var.h	/^	u_long	snd_ssthresh;		\/* snd_cwnd size threshold for$/;"	m	struct:tcpcb
snd_una	netinet/tcp_var.h	/^	tcp_seq	snd_una;		\/* send unacknowledged *\/$/;"	m	struct:tcpcb
snd_up	netinet/tcp_var.h	/^	tcp_seq	snd_up;			\/* send urgent pointer *\/$/;"	m	struct:tcpcb
snd_wl1	netinet/tcp_var.h	/^	tcp_seq	snd_wl1;		\/* window update seg seq number *\/$/;"	m	struct:tcpcb
snd_wl2	netinet/tcp_var.h	/^	tcp_seq	snd_wl2;		\/* window update seg ack number *\/$/;"	m	struct:tcpcb
snd_wnd	netinet/tcp_var.h	/^	u_long	snd_wnd;		\/* send window *\/$/;"	m	struct:tcpcb
snderr	kern/uipc_socket.c	360;"	d	file:
so_comp	sys/socketvar.h	/^	TAILQ_HEAD(, socket) so_comp;	\/* queue of complete unaccepted connections *\/$/;"	m	struct:socket
so_error	sys/socketvar.h	/^	u_short	so_error;		\/* error affecting connection *\/$/;"	m	struct:socket
so_gen_t	sys/socketvar.h	/^typedef	u_quad_t so_gen_t;$/;"	t
so_head	sys/socketvar.h	/^	struct	socket *so_head;	\/* back pointer to accept socket *\/$/;"	m	struct:socket	typeref:struct:socket::socket
so_incomp	sys/socketvar.h	/^	TAILQ_HEAD(, socket) so_incomp;	\/* queue of partial unaccepted connections *\/$/;"	m	struct:socket
so_incqlen	sys/socketvar.h	/^	short	so_incqlen;		\/* number of unaccepted incomplete$/;"	m	struct:socket
so_ioctl	rtems/rtems_syscall.c	/^so_ioctl (rtems_libio_t *iop, struct socket *so, uint32_t   command, void *buffer)$/;"	f	file:
so_linger	sys/socketvar.h	/^	short	so_linger;		\/* time to linger while closing *\/$/;"	m	struct:socket
so_list	sys/socketvar.h	/^	TAILQ_ENTRY(socket) so_list;	\/* list of unaccepted connections *\/$/;"	m	struct:socket
so_oobmark	sys/socketvar.h	/^	u_long	so_oobmark;		\/* chars to oob mark *\/$/;"	m	struct:socket
so_options	sys/socketvar.h	/^	short	so_options;		\/* from socket call, see socket.h *\/$/;"	m	struct:socket
so_pcb	sys/socketvar.h	/^	void 	*so_pcb;		\/* protocol control block *\/$/;"	m	struct:socket
so_pgid	sys/socketvar.h	/^	pid_t	so_pgid;		\/* pgid for signals *\/$/;"	m	struct:socket
so_proto	sys/socketvar.h	/^	struct	protosw *so_proto;	\/* protocol handle *\/$/;"	m	struct:socket	typeref:struct:socket::protosw
so_qlen	sys/socketvar.h	/^	short	so_qlen;		\/* number of unaccepted connections *\/$/;"	m	struct:socket
so_qlimit	sys/socketvar.h	/^	short	so_qlimit;		\/* max number queued connections *\/$/;"	m	struct:socket
so_rcv	sys/socketvar.h	/^	} so_rcv, so_snd;$/;"	m	struct:socket	typeref:struct:socket::sockbuf
so_snd	sys/socketvar.h	/^	} so_rcv, so_snd;$/;"	m	struct:socket	typeref:struct:socket::sockbuf
so_state	sys/socketvar.h	/^	short	so_state;		\/* internal state flags SS_*, below *\/$/;"	m	struct:socket
so_timeo	sys/socketvar.h	/^	short	so_timeo;		\/* connection timeout *\/$/;"	m	struct:socket
so_tpcb	sys/socketvar.h	/^	caddr_t	so_tpcb;		\/* Wisc. protocol control block XXX *\/$/;"	m	struct:socket
so_type	sys/socketvar.h	/^	short	so_type;		\/* generic type, see socket.h *\/$/;"	m	struct:socket
so_upcall	sys/socketvar.h	/^	void	(*so_upcall)(struct socket *, void *arg, int);$/;"	m	struct:socket
so_upcallarg	sys/socketvar.h	/^	void 	*so_upcallarg;		\/* Arg for above *\/$/;"	m	struct:socket
soabort	kern/uipc_socket.c	/^soabort(struct socket *so)$/;"	f
soaccept	kern/uipc_socket.c	/^soaccept(struct socket *so, struct mbuf *nam)$/;"	f
sobind	kern/uipc_socket.c	/^sobind(struct socket *so, struct mbuf *nam)$/;"	f
socantrcvmore	kern/uipc_socket2.c	/^socantrcvmore(struct socket *so)$/;"	f
socantsendmore	kern/uipc_socket2.c	/^socantsendmore(struct socket *so)$/;"	f
sockaddr	sys/socket.h	/^struct sockaddr {$/;"	s
sockaddr_dl	net/if_dl.h	/^struct sockaddr_dl {$/;"	s
sockaddr_in	netinet/in.h	/^struct sockaddr_in {$/;"	s
sockaddr_inarp	netinet/if_ether.h	/^struct sockaddr_inarp {$/;"	s
sockaddr_un	sys/un.h	/^struct	sockaddr_un {$/;"	s
sockargstombuf	rtems/rtems_syscall.c	/^sockargstombuf (struct mbuf **mp, const void *buf, int buflen, int type)$/;"	f	file:
sockbuf	sys/socketvar.h	/^	struct sockbuf {$/;"	s	struct:socket
socket	lib/tftpDriver.c	/^    int                 socket;$/;"	m	struct:tftpStream	file:
socket	rtems/rtems_syscall.c	/^socket (int domain, int type, int protocol)$/;"	f
socket	sys/socketvar.h	/^struct socket {$/;"	s
socket_handlers	rtems/rtems_syscall.c	/^static const rtems_filesystem_file_handlers_r socket_handlers = {$/;"	v	file:
socket_handlers	rtems/rtems_syscall.c	/^static const rtems_filesystem_file_handlers_r socket_handlers;$/;"	v	file:
socket_select	rtems/rtems_select.c	/^socket_select (struct socket *so, int which, rtems_id tid)$/;"	f	file:
socket_send	netinet/ip_mroute.c	/^socket_send(struct socket *s, struct mbuf *mm, struct sockaddr_in *src)$/;"	f	file:
socketpair	rtems/rtems_socketpair.c	/^int socketpair (int domain, int type, int protocol, int *rsv)$/;"	f
socklen_t	arpa/inet.h	/^typedef	__socklen_t	socklen_t;$/;"	t
socklen_t	netdb.h	/^typedef	__socklen_t	socklen_t;$/;"	t
socklen_t	sys/socket.h	/^typedef	int	socklen_t;\/\/typedef	__socklen_t	socklen_t;$/;"	t
sockproto	sys/socket.h	/^struct sockproto {$/;"	s
sockwakeup	sys/socket.h	/^struct	sockwakeup {$/;"	s
soclose	kern/uipc_socket.c	/^soclose(struct socket *so)$/;"	f
soconnect	kern/uipc_socket.c	/^soconnect(struct socket *so, struct mbuf *nam)$/;"	f
soconnect2	kern/uipc_socket.c	/^soconnect2(struct socket *so1,struct socket *so2)$/;"	f
soconnsleep	rtems/rtems_glue.c	/^soconnsleep (struct socket *so)$/;"	f
soconnwakeup	rtems/rtems_glue.c	/^soconnwakeup (struct socket *so)$/;"	f
socreate	kern/uipc_socket.c	/^socreate(int dom, struct socket **aso, int type, int proto,$/;"	f
sodisconnect	kern/uipc_socket.c	/^sodisconnect(struct socket *so)$/;"	f
sodropablereq	kern/uipc_socket2.c	/^sodropablereq(struct socket *head)$/;"	f
sofree	kern/uipc_socket.c	/^sofree(struct socket *so)$/;"	f
sogetopt	kern/uipc_socket.c	/^sogetopt(struct socket *so, int level, int optname, struct mbuf **mp)$/;"	f
sohasoutofband	kern/uipc_socket.c	/^sohasoutofband(struct socket *so)$/;"	f
soisconnected	kern/uipc_socket2.c	/^soisconnected(struct socket *so)$/;"	f
soisconnecting	kern/uipc_socket2.c	/^soisconnecting(struct socket *so)$/;"	f
soisdisconnected	kern/uipc_socket2.c	/^soisdisconnected(struct socket *so)$/;"	f
soisdisconnecting	kern/uipc_socket2.c	/^soisdisconnecting(struct socket *so)$/;"	f
solisten	kern/uipc_socket.c	/^solisten(struct socket *so, int backlog)$/;"	f
somaxconn	kern/uipc_socket.c	/^static int somaxconn = SOMAXCONN;$/;"	v	file:
sonewconn	sys/socketvar.h	205;"	d
sonewconn1	kern/uipc_socket2.c	/^sonewconn1(struct socket *head, int connstatus)$/;"	f
soreadable	sys/socketvar.h	147;"	d
soreceive	kern/uipc_socket.c	/^soreceive(struct socket *so, struct mbuf **paddr, struct uio *uio,$/;"	f
soreserve	kern/uipc_socket2.c	/^soreserve(struct socket *so, u_long sndcc, u_long rcvcc)$/;"	f
sorflush	kern/uipc_socket.c	/^sorflush(struct socket *so)$/;"	f
sort_list	resolv.h	/^	} sort_list[MAXRESOLVSORT];$/;"	m	struct:__res_state	typeref:struct:__res_state::__anon7
sort_mask	libc/res_init.c	/^static const char sort_mask[] = "\/&";$/;"	v	file:
sorwakeup	sys/socketvar.h	194;"	d
sosend	kern/uipc_socket.c	/^sosend(struct socket *so, struct mbuf *addr, struct uio *uio,$/;"	f
sosendallatonce	sys/socketvar.h	143;"	d
sosetopt	kern/uipc_socket.c	/^sosetopt(struct socket *so, int level, int optname, struct mbuf *m0)$/;"	f
soshutdown	kern/uipc_socket.c	/^soshutdown(struct socket *so, int how )$/;"	f
sotoinpcb	netinet/in_pcb.h	128;"	d
sotorawcb	net/raw_cb.h	53;"	d
sototcpcb	netinet/tcp_var.h	191;"	d
sotype	nfsclient/nfsargs.h	/^	int		sotype;		\/* Socket type *\/$/;"	m	struct:nfs_args
sowakeup	rtems/rtems_glue.c	/^sowakeup($/;"	f
sowriteable	sys/socketvar.h	153;"	d
sowwakeup	sys/socketvar.h	199;"	d
sp_family	sys/socket.h	/^	unsigned short	sp_family;		\/* address family *\/$/;"	m	struct:sockproto
sp_protocol	sys/socket.h	/^	unsigned short	sp_protocol;		\/* protocol *\/$/;"	m	struct:sockproto
specdata1	nfs/nfsproto.h	/^	u_int32_t	specdata1;$/;"	m	struct:nfsv3_spec
specdata2	nfs/nfsproto.h	/^	u_int32_t	specdata2;$/;"	m	struct:nfsv3_spec
special	libc/ns_name.c	/^special(int ch) {$/;"	f	file:
splimp	rtems/rtems_bsdnet_internal.h	50;"	d
split_state	lib/ftpfs.c	/^} split_state;$/;"	t	typeref:enum:__anon19	file:
splnet	rtems/rtems_bsdnet_internal.h	49;"	d
splsoftnet	net/if_ppp.c	131;"	d	file:
splx	rtems/rtems_bsdnet_internal.h	51;"	d
src	netinet/ip_mroute.h	/^    struct in_addr src;$/;"	m	struct:sioc_sg_req	typeref:struct:sioc_sg_req::in_addr
srcopt	netinet/ip_input.c	/^	char	srcopt[IPOPT_OFFSET + 1];	\/* OPTVAL, OLEN and OFFSET *\/$/;"	m	struct:ip_srcrt	file:
ss_flags	rtems/rtems_bsdnet_internal.h	/^       int     ss_flags;               \/* SS_DISABLE and\/or SS_ONSTACK *\/$/;"	m	struct:sigaltstack
ss_size	rtems/rtems_bsdnet_internal.h	/^       int     ss_size;                \/* signal stack length *\/$/;"	m	struct:sigaltstack
ss_sp	rtems/rtems_bsdnet_internal.h	/^       char    *ss_sp;                 \/* signal stack base *\/$/;"	m	struct:sigaltstack
state	lib/ftpfs.c	/^  rtems_ftpfs_pasv_state state;$/;"	m	struct:__anon21	file:
state	lib/ftpfs.c	/^  rtems_ftpfs_size_state state;$/;"	m	struct:__anon23	file:
stats	net/if_ppp.h	/^    struct ppp_comp_stats stats;$/;"	m	struct:ifpppcstatsreq	typeref:struct:ifpppcstatsreq::ppp_comp_stats
stats	net/if_ppp.h	/^    struct ppp_stats stats;$/;"	m	struct:ifpppstatsreq	typeref:struct:ifpppstatsreq::ppp_stats
stayopen	libc/gethostbyht.c	/^static int stayopen = 0;$/;"	v	file:
stopsigmask	sys/signalvar.h	144;"	d
stratum	rtems/rtems_bsdnet.h	/^	uint8_t		stratum;$/;"	m	struct:ntpPacketSmall
strsep	libc/strsep.c	/^strsep(stringp, delim)$/;"	f
strunames	arpa/ftp.h	/^char *strunames[] =  {"0", "File", "Record", "Page" };$/;"	v
subnetsarelocal	netinet/in.c	/^static int subnetsarelocal = 0;$/;"	v	file:
subsystem	sys/kernel.h	/^	unsigned int	subsystem;		\/* subsystem identifier*\/$/;"	m	struct:sysinit
sun_family	sys/un.h	/^	sa_family_t	sun_family;		\/* AF_UNIX *\/$/;"	m	struct:sockaddr_un
sun_len	sys/un.h	/^	unsigned char	sun_len;		\/* sockaddr len including null *\/$/;"	m	struct:sockaddr_un
sun_path	sys/un.h	/^	char	sun_path[104];		\/* path name (gag) *\/$/;"	m	struct:sockaddr_un
suser	rtems/rtems_bsdnet_internal.h	63;"	d
sw_arg	sys/socket.h	/^	void	*sw_arg;$/;"	m	struct:sockwakeup
sw_pfn	sys/socket.h	/^	void	(*sw_pfn)(struct socket *, void *);$/;"	m	struct:sockwakeup
swap_args	nfsclient/nfsdiskless.h	/^	struct nfs_args	swap_args;		\/* Mount args for swap file *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::nfs_args
swap_args	nfsclient/nfsdiskless.h	/^	struct nfs_args	swap_args;		\/* Mount args for swap file *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::nfs_args
swap_fh	nfsclient/nfsdiskless.h	/^	u_char		swap_fh[NFSX_V2FH];	\/* Swap file's file handle *\/$/;"	m	struct:nfs_diskless
swap_fh	nfsclient/nfsdiskless.h	/^	u_char		swap_fh[NFSX_V3FHMAX];	\/* Swap file's file handle *\/$/;"	m	struct:nfsv3_diskless
swap_fhsize	nfsclient/nfsdiskless.h	/^	int		swap_fhsize;		\/* Size of file handle *\/$/;"	m	struct:nfsv3_diskless
swap_hostnam	nfsclient/nfsdiskless.h	/^	char		swap_hostnam[MNAMELEN];	\/* Host name for mount pt *\/$/;"	m	struct:nfs_diskless
swap_hostnam	nfsclient/nfsdiskless.h	/^	char		swap_hostnam[MNAMELEN];	\/* Host name for mount pt *\/$/;"	m	struct:nfsv3_diskless
swap_nblks	nfsclient/nfsdiskless.h	/^	int		swap_nblks;		\/* Size of server swap file *\/$/;"	m	struct:nfs_diskless
swap_nblks	nfsclient/nfsdiskless.h	/^	int		swap_nblks;		\/* Size of server swap file *\/$/;"	m	struct:nfsv3_diskless
swap_saddr	nfsclient/nfsdiskless.h	/^	struct sockaddr_in swap_saddr;		\/* Address of swap server *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::sockaddr_in
swap_saddr	nfsclient/nfsdiskless.h	/^	struct sockaddr_in swap_saddr;		\/* Address of swap server *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::sockaddr_in
swap_ucred	nfsclient/nfsdiskless.h	/^	struct ucred	swap_ucred;		\/* Swap credentials *\/$/;"	m	struct:nfs_diskless	typeref:struct:nfs_diskless::ucred
swap_ucred	nfsclient/nfsdiskless.h	/^	struct ucred	swap_ucred;		\/* Swap credentials *\/$/;"	m	struct:nfsv3_diskless	typeref:struct:nfsv3_diskless::ucred
sym_ntop	libc/res_debug.c	/^sym_ntop(const struct res_sym *syms, int number, int *success) {$/;"	f
sym_ntop	resolv.h	256;"	d
sym_ntos	libc/res_debug.c	/^sym_ntos(const struct res_sym *syms, int number, int *success) {$/;"	f
sym_ntos	resolv.h	257;"	d
sym_ston	libc/res_debug.c	/^sym_ston(const struct res_sym *syms, const char *name, int *success) {$/;"	f
sym_ston	resolv.h	258;"	d
sysctl	rtems/rtems_syscall.c	/^sysctl(int *name, u_int namelen, void *oldp,$/;"	f
sysctl__children	kern/kern_sysctl.c	/^struct sysctl_oid_list sysctl__children; \/* root list *\/$/;"	v	typeref:struct:sysctl_oid_list
sysctl_add_oid	kern/kern_sysctl.c	/^sysctl_add_oid(struct sysctl_ctx_list *clist, struct sysctl_oid_list *parent,$/;"	f
sysctl_args	kern/kern_sysctl.c	/^struct sysctl_args {$/;"	s	file:
sysctl_ctx_entry	sys/sysctl.h	/^struct sysctl_ctx_entry {$/;"	s
sysctl_ctx_entry_add	kern/kern_sysctl.c	/^sysctl_ctx_entry_add(struct sysctl_ctx_list *clist, struct sysctl_oid *oidp)$/;"	f
sysctl_ctx_entry_del	kern/kern_sysctl.c	/^sysctl_ctx_entry_del(struct sysctl_ctx_list *clist, struct sysctl_oid *oidp)$/;"	f
sysctl_ctx_entry_find	kern/kern_sysctl.c	/^sysctl_ctx_entry_find(struct sysctl_ctx_list *clist, struct sysctl_oid *oidp)$/;"	f
sysctl_ctx_free	kern/kern_sysctl.c	/^sysctl_ctx_free(struct sysctl_ctx_list *clist)$/;"	f
sysctl_ctx_init	kern/kern_sysctl.c	/^sysctl_ctx_init(struct sysctl_ctx_list *c)$/;"	f
sysctl_dumpentry	net/rtsock.c	/^sysctl_dumpentry(struct radix_node *rn, void *vw)$/;"	f
sysctl_find_oid	kern/kern_sysctl.c	/^sysctl_find_oid(int *name, u_int namelen, struct sysctl_oid **noid,$/;"	f
sysctl_find_oidname	kern/kern_sysctl.c	/^sysctl_find_oidname(const char *name, struct sysctl_oid_list *list)$/;"	f	file:
sysctl_handle_int	kern/kern_sysctl.c	/^sysctl_handle_int(SYSCTL_HANDLER_ARGS)$/;"	f
sysctl_handle_long	kern/kern_sysctl.c	/^sysctl_handle_long(SYSCTL_HANDLER_ARGS)$/;"	f
sysctl_handle_opaque	kern/kern_sysctl.c	/^sysctl_handle_opaque(SYSCTL_HANDLER_ARGS)$/;"	f
sysctl_handle_string	kern/kern_sysctl.c	/^sysctl_handle_string(SYSCTL_HANDLER_ARGS)$/;"	f
sysctl_hostname	kern/kern_mib.c	/^sysctl_hostname(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_hw_physmem	kern/kern_mib.c	/^sysctl_hw_physmem(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_hw_usermem	kern/kern_mib.c	/^sysctl_hw_usermem(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_iflist	net/rtsock.c	/^sysctl_iflist(int af, struct walkarg *w)$/;"	f
sysctl_kern_securelvl	kern/kern_mib.c	/^sysctl_kern_securelvl(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_net_ipport_check	netinet/in_pcb.c	/^sysctl_net_ipport_check(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_new_kernel	kern/kern_sysctl.c	/^sysctl_new_kernel(struct sysctl_req *req, void *p, size_t l)$/;"	f	file:
sysctl_new_user	kern/kern_sysctl.c	/^sysctl_new_user(struct sysctl_req *req, void *p, size_t l)$/;"	f	file:
sysctl_oid	sys/sysctl.h	/^struct sysctl_oid {$/;"	s
sysctl_old_kernel	kern/kern_sysctl.c	/^sysctl_old_kernel(struct sysctl_req *req, const void *p, size_t l)$/;"	f	file:
sysctl_old_user	kern/kern_sysctl.c	/^sysctl_old_user(struct sysctl_req *req, const void *p, size_t l)$/;"	f	file:
sysctl_register_all	kern/kern_sysctl.c	/^sysctl_register_all(void *arg)$/;"	f
sysctl_register_oid	kern/kern_sysctl.c	/^sysctl_register_oid(struct sysctl_oid *oidp)$/;"	f
sysctl_remove_oid	kern/kern_sysctl.c	/^sysctl_remove_oid(struct sysctl_oid *oidp, int del, int recurse)$/;"	f
sysctl_req	sys/sysctl.h	/^struct sysctl_req {$/;"	s
sysctl_root	kern/kern_sysctl.c	/^sysctl_root(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_rtsock	net/rtsock.c	/^sysctl_rtsock(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_debug	kern/kern_sysctl.c	/^sysctl_sysctl_debug(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_debug_dump_node	kern/kern_sysctl.c	/^sysctl_sysctl_debug_dump_node(struct sysctl_oid_list *l, int i)$/;"	f	file:
sysctl_sysctl_name	kern/kern_sysctl.c	/^sysctl_sysctl_name(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_name2oid	kern/kern_sysctl.c	/^sysctl_sysctl_name2oid(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_next	kern/kern_sysctl.c	/^sysctl_sysctl_next(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_next_ls	kern/kern_sysctl.c	/^sysctl_sysctl_next_ls(struct sysctl_oid_list *lsp, int *name, u_int namelen,$/;"	f	file:
sysctl_sysctl_oiddescr	kern/kern_sysctl.c	/^sysctl_sysctl_oiddescr(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_sysctl_oidfmt	kern/kern_sysctl.c	/^sysctl_sysctl_oidfmt(SYSCTL_HANDLER_ARGS)$/;"	f	file:
sysctl_unregister_oid	kern/kern_sysctl.c	/^sysctl_unregister_oid(struct sysctl_oid *oidp)$/;"	f
sysctl_wire_old_buffer	kern/kern_sysctl.c	/^sysctl_wire_old_buffer(struct sysctl_req *req, size_t len)$/;"	f
sysctllock	kern/kern_sysctl.c	/^static struct sx sysctllock;$/;"	v	typeref:struct:sx	file:
sysinit	sys/kernel.h	/^struct sysinit {$/;"	s
sysinit_elem_order	sys/kernel.h	/^enum sysinit_elem_order {$/;"	g
sysinit_sub_id	sys/kernel.h	/^enum sysinit_sub_id {$/;"	g
syslog	lib/syslog.c	/^syslog (int pri, const char *fmt, ...)$/;"	f
t	netinet/ip_mroute.h	/^    struct timeval	t;		\/* Timestamp *\/$/;"	m	struct:rtdetq	typeref:struct:rtdetq::timeval
t_dupacks	netinet/tcp_var.h	/^	int	t_dupacks;		\/* consecutive dup acks recd *\/$/;"	m	struct:tcpcb
t_duration	netinet/tcp_var.h	/^	u_long	t_duration;		\/* connection duration *\/$/;"	m	struct:tcpcb
t_flags	netinet/tcp_var.h	/^	u_int	t_flags;$/;"	m	struct:tcpcb
t_force	netinet/tcp_var.h	/^	int	t_force;		\/* 1 if forcing out a byte *\/$/;"	m	struct:tcpcb
t_idle	netinet/tcp_var.h	/^	u_int	t_idle;			\/* inactivity time *\/$/;"	m	struct:tcpcb
t_inpcb	netinet/tcp_var.h	/^	struct	inpcb *t_inpcb;		\/* back pointer to internet pcb *\/$/;"	m	struct:tcpcb	typeref:struct:tcpcb::inpcb
t_iobc	netinet/tcp_var.h	/^	char	t_iobc;			\/* input character *\/$/;"	m	struct:tcpcb
t_maxopd	netinet/tcp_var.h	/^	u_int	t_maxopd;		\/* mss plus options *\/$/;"	m	struct:tcpcb
t_maxseg	netinet/tcp_var.h	/^	u_int	t_maxseg;		\/* maximum segment size *\/$/;"	m	struct:tcpcb
t_oobflags	netinet/tcp_var.h	/^	char	t_oobflags;		\/* have some *\/$/;"	m	struct:tcpcb
t_rtseq	netinet/tcp_var.h	/^	tcp_seq	t_rtseq;		\/* sequence number being timed *\/$/;"	m	struct:tcpcb
t_rtt	netinet/tcp_var.h	/^	int	t_rtt;			\/* round trip time *\/$/;"	m	struct:tcpcb
t_rttmin	netinet/tcp_var.h	/^	u_int	t_rttmin;		\/* minimum rtt allowed *\/$/;"	m	struct:tcpcb
t_rttupdated	netinet/tcp_var.h	/^	u_long	t_rttupdated;		\/* number of times rtt sampled *\/$/;"	m	struct:tcpcb
t_rttvar	netinet/tcp_var.h	/^	int	t_rttvar;		\/* variance in round-trip time *\/$/;"	m	struct:tcpcb
t_rxtcur	netinet/tcp_var.h	/^	int	t_rxtcur;		\/* current retransmit value *\/$/;"	m	struct:tcpcb
t_rxtshift	netinet/tcp_var.h	/^	int	t_rxtshift;		\/* log(2) of rexmt exp. backoff *\/$/;"	m	struct:tcpcb
t_softerror	netinet/tcp_var.h	/^	int	t_softerror;		\/* possible error not yet reported *\/$/;"	m	struct:tcpcb
t_srtt	netinet/tcp_var.h	/^	int	t_srtt;			\/* smoothed round-trip time *\/$/;"	m	struct:tcpcb
t_state	netinet/tcp_var.h	/^	int	t_state;		\/* state of this connection *\/$/;"	m	struct:tcpcb
t_template	netinet/tcp_var.h	/^	struct	tcpiphdr *t_template;	\/* skeletal packet for transmit *\/$/;"	m	struct:tcpcb	typeref:struct:tcpcb::tcpiphdr
t_timer	netinet/tcp_var.h	/^	int	t_timer[TCPT_NTIMERS];	\/* tcp timers *\/$/;"	m	struct:tcpcb
t_tuba_pcb	netinet/tcp_var.h	/^	caddr_t	t_tuba_pcb;		\/* next level down pcb for TCP over z *\/$/;"	m	struct:tcpcb
tanames	netinet/tcp_debug.h	/^static const char	*tanames[] =$/;"	v
tao_cc	netinet/tcp_var.h	/^	tcp_cc	tao_cc;			\/* latest CC in valid SYN *\/$/;"	m	struct:rmxp_tao
tao_ccsent	netinet/tcp_var.h	/^	tcp_cc	tao_ccsent;		\/* latest CC sent to peer *\/$/;"	m	struct:rmxp_tao
tao_mssopt	netinet/tcp_var.h	/^	u_short	tao_mssopt;		\/* peer's cached MSS *\/$/;"	m	struct:rmxp_tao
taskEntry	rtems/rtems_glue.c	/^taskEntry (rtems_task_argument arg)$/;"	f	file:
tbf	netinet/ip_mroute.h	/^struct tbf$/;"	s
tbf_control	netinet/ip_mroute.c	/^tbf_control(struct vif *vifp, struct mbuf *m, struct ip *ip, u_long p_len)$/;"	f	file:
tbf_dq_sel	netinet/ip_mroute.c	/^tbf_dq_sel(struct vif *vifp, struct ip *ip)$/;"	f	file:
tbf_last_pkt_t	netinet/ip_mroute.h	/^    struct timeval tbf_last_pkt_t; \/* arr. time of last pkt 	*\/$/;"	m	struct:tbf	typeref:struct:tbf::timeval
tbf_max_q_len	netinet/ip_mroute.h	/^    u_long tbf_max_q_len;	\/* max. queue length		*\/$/;"	m	struct:tbf
tbf_n_tok	netinet/ip_mroute.h	/^    u_long tbf_n_tok;      	\/* no of tokens in bucket 	*\/$/;"	m	struct:tbf
tbf_process_q	netinet/ip_mroute.c	/^tbf_process_q(struct vif *vifp)$/;"	f	file:
tbf_q	netinet/ip_mroute.h	/^    struct mbuf *tbf_q;		\/* Packet queue			*\/$/;"	m	struct:tbf	typeref:struct:tbf::mbuf
tbf_q_len	netinet/ip_mroute.h	/^    u_long tbf_q_len;    	\/* length of queue at this vif	*\/$/;"	m	struct:tbf
tbf_queue	netinet/ip_mroute.c	/^tbf_queue(struct vif *vifp, struct mbuf *m)$/;"	f	file:
tbf_reprocess_q	netinet/ip_mroute.c	/^tbf_reprocess_q(void *xvifp)$/;"	f	file:
tbf_send_packet	netinet/ip_mroute.c	/^tbf_send_packet(struct vif *vifp, struct mbuf *m)$/;"	f	file:
tbf_t	netinet/ip_mroute.h	/^    struct mbuf *tbf_t;		\/* tail-insertion pointer	*\/$/;"	m	struct:tbf	typeref:struct:tbf::mbuf
tbf_update_tokens	netinet/ip_mroute.c	/^tbf_update_tokens(struct vif *vifp)$/;"	f	file:
tbfdebug	netinet/ip_mroute.c	/^static u_int  	tbfdebug = 0;     \/* tbf debug level 	*\/$/;"	v	file:
tbftable	netinet/ip_mroute.c	/^static struct tbf tbftable[MAXVIFS];$/;"	v	typeref:struct:tbf	file:
tc	arpa/nameser_compat.h	/^	unsigned	tc :1;		\/* truncated message *\/$/;"	m	struct:__anon47
tc	arpa/nameser_compat.h	/^	unsigned	tc: 1;		\/* truncated message *\/$/;"	m	struct:__anon47
tcb	netinet/tcp_input.c	/^struct inpcbhead tcb;$/;"	v	typeref:struct:inpcbhead
tcbinfo	netinet/tcp_input.c	/^struct inpcbinfo tcbinfo;$/;"	v	typeref:struct:inpcbinfo
tcp6_seq	netinet/tcp.h	44;"	d
tcp6hdr	netinet/tcp.h	45;"	d
tcp_acounts	netinet/tcp_fsm.h	/^int	tcp_acounts[TCP_NSTATES][PRU_NREQ];$/;"	v
tcp_attach	netinet/tcp_usrreq.c	/^tcp_attach(struct socket *so)$/;"	f	file:
tcp_backoff	netinet/tcp_timer.c	/^int	tcp_backoff[TCP_MAXRXTSHIFT + 1] =$/;"	v
tcp_canceltimers	netinet/tcp_timer.c	/^tcp_canceltimers(struct tcpcb *tp)$/;"	f
tcp_cc	netinet/tcp.h	/^typedef u_long	tcp_cc;			\/* connection count per rfc1644 *\/$/;"	t
tcp_ccgen	netinet/tcp_input.c	/^tcp_cc	tcp_ccgen;$/;"	v
tcp_close	netinet/tcp_subr.c	/^tcp_close(struct tcpcb *tp)$/;"	f
tcp_connect	netinet/tcp_usrreq.c	/^tcp_connect(struct tcpcb *tp, struct mbuf *nam)$/;"	f	file:
tcp_ctlinput	netinet/tcp_subr.c	/^tcp_ctlinput(int cmd, struct sockaddr *sa, void *vip)$/;"	f
tcp_ctloutput	netinet/tcp_usrreq.c	/^tcp_ctloutput(int op, struct socket *so, int level, int optname,$/;"	f
tcp_debug	netinet/tcp_debug.c	/^static struct tcp_debug	tcp_debug[TCP_NDEBUG];$/;"	v	typeref:struct:tcp_debug	file:
tcp_debug	netinet/tcp_debug.h	/^struct	tcp_debug tcp_debug[TCP_NDEBUG];$/;"	v	typeref:struct:tcp_debug
tcp_debug	netinet/tcp_debug.h	/^struct	tcp_debug {$/;"	s
tcp_debx	netinet/tcp_debug.c	/^static int		tcp_debx;$/;"	v	file:
tcp_debx	netinet/tcp_debug.h	/^int	tcp_debx;$/;"	v
tcp_disconnect	netinet/tcp_usrreq.c	/^tcp_disconnect(struct tcpcb *tp)$/;"	f	file:
tcp_do_rfc1323	netinet/tcp_subr.c	/^static int	tcp_do_rfc1323 = 1;$/;"	v	file:
tcp_dooptions	netinet/tcp_input.c	/^tcp_dooptions(struct tcpcb *tp, u_char *cp, int cnt, struct tcpiphdr *ti,$/;"	f	file:
tcp_drain	netinet/tcp_subr.c	/^tcp_drain(void)$/;"	f
tcp_drop	netinet/tcp_subr.c	/^tcp_drop(struct tcpcb *tp, int errnum)$/;"	f
tcp_fasttimo	netinet/tcp_timer.c	/^tcp_fasttimo(void)$/;"	f
tcp_gettaocache	netinet/tcp_subr.c	/^tcp_gettaocache(struct inpcb *inp)$/;"	f
tcp_init	netinet/tcp_subr.c	/^tcp_init(void)$/;"	f
tcp_input	netinet/tcp_input.c	/^tcp_input(struct mbuf *m, int iphlen)$/;"	f
tcp_iss	netinet/tcp_input.c	/^tcp_seq	tcp_iss;$/;"	v
tcp_keepcnt	netinet/tcp_timer.c	/^static int	tcp_keepcnt = TCPTV_KEEPCNT;$/;"	v	file:
tcp_keepidle	netinet/tcp_timer.c	/^int	tcp_keepidle = TCPTV_KEEP_IDLE;$/;"	v
tcp_keepinit	netinet/tcp_timer.c	/^int	tcp_keepinit = TCPTV_KEEP_INIT;$/;"	v
tcp_keepintvl	netinet/tcp_timer.c	/^static int	tcp_keepintvl = TCPTV_KEEPINTVL;$/;"	v	file:
tcp_maxidle	netinet/tcp_timer.c	/^int	tcp_maxidle;$/;"	v
tcp_maxpersistidle	netinet/tcp_timer.c	/^static	int tcp_maxpersistidle;$/;"	v	file:
tcp_maxpersistidle	netinet/tcp_timer.c	/^static int	tcp_maxpersistidle = TCPTV_KEEP_IDLE;$/;"	v	file:
tcp_mss	netinet/tcp_input.c	/^tcp_mss(struct tcpcb *tp, int offer)$/;"	f
tcp_mssdflt	netinet/tcp_subr.c	/^int	tcp_mssdflt = TCP_MSS;$/;"	v
tcp_mssopt	netinet/tcp_input.c	/^tcp_mssopt(struct tcpcb *tp)$/;"	f
tcp_mtudisc	netinet/tcp_subr.c	/^tcp_mtudisc(struct inpcb *inp, int errnum)$/;"	f
tcp_newtcpcb	netinet/tcp_subr.c	/^tcp_newtcpcb(struct inpcb *inp)$/;"	f
tcp_notify	netinet/tcp_subr.c	/^tcp_notify(struct inpcb *inp, int error)$/;"	f	file:
tcp_now	netinet/tcp_input.c	/^u_long	tcp_now;$/;"	v
tcp_outflags	netinet/tcp_fsm.h	/^static u_char	tcp_outflags[TCP_NSTATES] = {$/;"	v
tcp_output	netinet/tcp_output.c	/^tcp_output($/;"	f
tcp_pcblist	netinet/tcp_subr.c	/^tcp_pcblist(SYSCTL_HANDLER_ARGS)$/;"	f	file:
tcp_pulloutofband	netinet/tcp_input.c	/^tcp_pulloutofband(struct socket *so, struct tcpiphdr *ti, struct mbuf *m)$/;"	f	file:
tcp_quench	netinet/tcp_subr.c	/^tcp_quench( struct inpcb *inp, int errnum)$/;"	f
tcp_random18	netinet/tcp_seq.h	91;"	d
tcp_rcvseqinit	netinet/tcp_seq.h	68;"	d
tcp_reass	netinet/tcp_input.c	/^tcp_reass(struct tcpcb *tp, struct tcpiphdr *ti, struct mbuf *m)$/;"	f	file:
tcp_recvspace	netinet/tcp_usrreq.c	/^u_long	tcp_recvspace = 1024*16;$/;"	v
tcp_respond	netinet/tcp_subr.c	/^tcp_respond(struct tcpcb *tp, struct tcpiphdr *ti, struct mbuf *m,$/;"	f
tcp_rtlookup	netinet/tcp_subr.c	/^tcp_rtlookup(struct inpcb *inp)$/;"	f
tcp_rttdflt	netinet/tcp_subr.c	/^static int 	tcp_rttdflt = TCPTV_SRTTDFLT \/ PR_SLOWHZ;$/;"	v	file:
tcp_rx_buf_size	rtems/rtems_bsdnet.h	/^	unsigned long		tcp_rx_buf_size;$/;"	m	struct:rtems_bsdnet_config
tcp_saveti	netinet/tcp_input.c	/^static struct	tcpiphdr tcp_saveti;$/;"	v	typeref:struct:tcpiphdr	file:
tcp_sendseqinit	netinet/tcp_seq.h	71;"	d
tcp_sendspace	netinet/tcp_usrreq.c	/^u_long	tcp_sendspace = 1024*16;$/;"	v
tcp_seq	netinet/tcp.h	/^typedef	u_int32_t tcp_seq;$/;"	t
tcp_setpersist	netinet/tcp_output.c	/^tcp_setpersist($/;"	f
tcp_slowtimo	netinet/tcp_timer.c	/^tcp_slowtimo(void)$/;"	f
tcp_template	netinet/tcp_subr.c	/^tcp_template(struct tcpcb *tp)$/;"	f
tcp_timers	netinet/tcp_timer.c	/^tcp_timers(struct tcpcb *tp, int timer)$/;"	f
tcp_totbackoff	netinet/tcp_timer.c	/^static int tcp_totbackoff = 511;	\/* sum of tcp_backoff[] *\/$/;"	v	file:
tcp_trace	netinet/tcp_debug.c	/^tcp_trace(short act, short ostate, struct tcpcb *tp, struct tcpiphdr *ti,$/;"	f
tcp_tx_buf_size	rtems/rtems_bsdnet.h	/^	unsigned long		tcp_tx_buf_size;$/;"	m	struct:rtems_bsdnet_config
tcp_usr_abort	netinet/tcp_usrreq.c	/^tcp_usr_abort(struct socket *so)$/;"	f	file:
tcp_usr_accept	netinet/tcp_usrreq.c	/^tcp_usr_accept(struct socket *so, struct mbuf *nam)$/;"	f	file:
tcp_usr_attach	netinet/tcp_usrreq.c	/^tcp_usr_attach(struct socket *so, intptr_t proto)$/;"	f	file:
tcp_usr_bind	netinet/tcp_usrreq.c	/^tcp_usr_bind(struct socket *so, struct mbuf *nam)$/;"	f	file:
tcp_usr_connect	netinet/tcp_usrreq.c	/^tcp_usr_connect(struct socket *so, struct mbuf *nam)$/;"	f	file:
tcp_usr_control	netinet/tcp_usrreq.c	/^tcp_usr_control(struct socket *so, intptr_t cmd, caddr_t arg, struct ifnet *ifp)$/;"	f	file:
tcp_usr_detach	netinet/tcp_usrreq.c	/^tcp_usr_detach(struct socket *so)$/;"	f	file:
tcp_usr_disconnect	netinet/tcp_usrreq.c	/^tcp_usr_disconnect(struct socket *so)$/;"	f	file:
tcp_usr_listen	netinet/tcp_usrreq.c	/^tcp_usr_listen(struct socket *so)$/;"	f	file:
tcp_usr_peeraddr	netinet/tcp_usrreq.c	/^tcp_usr_peeraddr(struct socket *so, struct mbuf *nam)$/;"	f	file:
tcp_usr_rcvd	netinet/tcp_usrreq.c	/^tcp_usr_rcvd(struct socket *so, intptr_t flags)$/;"	f	file:
tcp_usr_rcvoob	netinet/tcp_usrreq.c	/^tcp_usr_rcvoob(struct socket *so, struct mbuf *m, intptr_t flags)$/;"	f	file:
tcp_usr_send	netinet/tcp_usrreq.c	/^tcp_usr_send(struct socket *so, int flags, struct mbuf *m, struct mbuf *nam,$/;"	f	file:
tcp_usr_sense	netinet/tcp_usrreq.c	/^tcp_usr_sense(struct socket *so, struct stat *sb)$/;"	f	file:
tcp_usr_shutdown	netinet/tcp_usrreq.c	/^tcp_usr_shutdown(struct socket *so)$/;"	f	file:
tcp_usr_sockaddr	netinet/tcp_usrreq.c	/^tcp_usr_sockaddr(struct socket *so, struct mbuf *nam)$/;"	f	file:
tcp_usrclosed	netinet/tcp_usrreq.c	/^tcp_usrclosed(struct tcpcb *tp)$/;"	f	file:
tcp_usrreqs	netinet/tcp_usrreq.c	/^struct pr_usrreqs tcp_usrreqs = {$/;"	v	typeref:struct:pr_usrreqs
tcp_xmit_timer	netinet/tcp_input.c	/^tcp_xmit_timer(struct tcpcb *tp, int rtt)$/;"	f	file:
tcpcb	netinet/tcp_var.h	/^struct tcpcb {$/;"	s
tcpconsdebug	netinet/tcp_debug.c	/^static int		tcpconsdebug = 0;$/;"	v	file:
tcpflg_match	netinet/ip_fw.c	/^tcpflg_match(struct tcphdr *tcp, struct ip_fw *f)$/;"	f	file:
tcphdr	netinet/tcp.h	/^struct tcphdr {$/;"	s
tcpiphdr	netinet/tcpip.h	/^struct tcpiphdr {$/;"	s
tcpopt	netinet/tcp_var.h	/^struct tcpopt {$/;"	s
tcprexmtthresh	netinet/tcp_input.c	/^static int	tcprexmtthresh = 3;$/;"	v	file:
tcps_accepts	netinet/tcp_var.h	/^	u_long	tcps_accepts;		\/* connections accepted *\/$/;"	m	struct:tcpstat
tcps_badsyn	netinet/tcp_var.h	/^	u_long	tcps_badsyn;		\/* bogus SYN, e.g. premature ACK *\/$/;"	m	struct:tcpstat
tcps_cachedrtt	netinet/tcp_var.h	/^	u_long	tcps_cachedrtt;		\/* times cached RTT in route updated *\/$/;"	m	struct:tcpstat
tcps_cachedrttvar	netinet/tcp_var.h	/^	u_long	tcps_cachedrttvar;	\/* times cached rttvar updated *\/$/;"	m	struct:tcpstat
tcps_cachedssthresh	netinet/tcp_var.h	/^	u_long	tcps_cachedssthresh;	\/* times cached ssthresh updated *\/$/;"	m	struct:tcpstat
tcps_closed	netinet/tcp_var.h	/^	u_long	tcps_closed;		\/* conn. closed (includes drops) *\/$/;"	m	struct:tcpstat
tcps_connattempt	netinet/tcp_var.h	/^	u_long	tcps_connattempt;	\/* connections initiated *\/$/;"	m	struct:tcpstat
tcps_conndrops	netinet/tcp_var.h	/^	u_long	tcps_conndrops;		\/* embryonic connections dropped *\/$/;"	m	struct:tcpstat
tcps_connects	netinet/tcp_var.h	/^	u_long	tcps_connects;		\/* connections established *\/$/;"	m	struct:tcpstat
tcps_delack	netinet/tcp_var.h	/^	u_long	tcps_delack;		\/* delayed acks sent *\/$/;"	m	struct:tcpstat
tcps_drops	netinet/tcp_var.h	/^	u_long	tcps_drops;		\/* connections dropped *\/$/;"	m	struct:tcpstat
tcps_keepdrops	netinet/tcp_var.h	/^	u_long	tcps_keepdrops;		\/* connections dropped in keepalive *\/$/;"	m	struct:tcpstat
tcps_keepprobe	netinet/tcp_var.h	/^	u_long	tcps_keepprobe;		\/* keepalive probes sent *\/$/;"	m	struct:tcpstat
tcps_keeptimeo	netinet/tcp_var.h	/^	u_long	tcps_keeptimeo;		\/* keepalive timeouts *\/$/;"	m	struct:tcpstat
tcps_listendrop	netinet/tcp_var.h	/^	u_long	tcps_listendrop;	\/* listen queue overflows *\/$/;"	m	struct:tcpstat
tcps_mturesent	netinet/tcp_var.h	/^	u_long	tcps_mturesent;		\/* resends due to MTU discovery *\/$/;"	m	struct:tcpstat
tcps_pawsdrop	netinet/tcp_var.h	/^	u_long	tcps_pawsdrop;		\/* segments dropped due to PAWS *\/$/;"	m	struct:tcpstat
tcps_pcbcachemiss	netinet/tcp_var.h	/^	u_long	tcps_pcbcachemiss;$/;"	m	struct:tcpstat
tcps_persistdrop	netinet/tcp_var.h	/^	u_long	tcps_persistdrop;	\/* timeout in persist state *\/$/;"	m	struct:tcpstat
tcps_persisttimeo	netinet/tcp_var.h	/^	u_long	tcps_persisttimeo;	\/* persist timeouts *\/$/;"	m	struct:tcpstat
tcps_predack	netinet/tcp_var.h	/^	u_long	tcps_predack;		\/* times hdr predict ok for acks *\/$/;"	m	struct:tcpstat
tcps_preddat	netinet/tcp_var.h	/^	u_long	tcps_preddat;		\/* times hdr predict ok for data pkts *\/$/;"	m	struct:tcpstat
tcps_rcvackbyte	netinet/tcp_var.h	/^	u_long	tcps_rcvackbyte;	\/* bytes acked by rcvd acks *\/$/;"	m	struct:tcpstat
tcps_rcvackpack	netinet/tcp_var.h	/^	u_long	tcps_rcvackpack;	\/* rcvd ack packets *\/$/;"	m	struct:tcpstat
tcps_rcvacktoomuch	netinet/tcp_var.h	/^	u_long	tcps_rcvacktoomuch;	\/* rcvd acks for unsent data *\/$/;"	m	struct:tcpstat
tcps_rcvafterclose	netinet/tcp_var.h	/^	u_long	tcps_rcvafterclose;	\/* packets rcvd after "close" *\/$/;"	m	struct:tcpstat
tcps_rcvbadoff	netinet/tcp_var.h	/^	u_long	tcps_rcvbadoff;		\/* packets received with bad offset *\/$/;"	m	struct:tcpstat
tcps_rcvbadsum	netinet/tcp_var.h	/^	u_long	tcps_rcvbadsum;		\/* packets received with ccksum errs *\/$/;"	m	struct:tcpstat
tcps_rcvbyte	netinet/tcp_var.h	/^	u_long	tcps_rcvbyte;		\/* bytes received in sequence *\/$/;"	m	struct:tcpstat
tcps_rcvbyteafterwin	netinet/tcp_var.h	/^	u_long	tcps_rcvbyteafterwin;	\/* bytes rcvd after window *\/$/;"	m	struct:tcpstat
tcps_rcvdupack	netinet/tcp_var.h	/^	u_long	tcps_rcvdupack;		\/* rcvd duplicate acks *\/$/;"	m	struct:tcpstat
tcps_rcvdupbyte	netinet/tcp_var.h	/^	u_long	tcps_rcvdupbyte;	\/* duplicate-only bytes received *\/$/;"	m	struct:tcpstat
tcps_rcvduppack	netinet/tcp_var.h	/^	u_long	tcps_rcvduppack;	\/* duplicate-only packets received *\/$/;"	m	struct:tcpstat
tcps_rcvoobyte	netinet/tcp_var.h	/^	u_long	tcps_rcvoobyte;		\/* out-of-order bytes received *\/$/;"	m	struct:tcpstat
tcps_rcvoopack	netinet/tcp_var.h	/^	u_long	tcps_rcvoopack;		\/* out-of-order packets received *\/$/;"	m	struct:tcpstat
tcps_rcvpack	netinet/tcp_var.h	/^	u_long	tcps_rcvpack;		\/* packets received in sequence *\/$/;"	m	struct:tcpstat
tcps_rcvpackafterwin	netinet/tcp_var.h	/^	u_long	tcps_rcvpackafterwin;	\/* packets with data after window *\/$/;"	m	struct:tcpstat
tcps_rcvpartdupbyte	netinet/tcp_var.h	/^	u_long	tcps_rcvpartdupbyte;	\/* dup. bytes in part-dup. packets *\/$/;"	m	struct:tcpstat
tcps_rcvpartduppack	netinet/tcp_var.h	/^	u_long	tcps_rcvpartduppack;	\/* packets with some duplicate data *\/$/;"	m	struct:tcpstat
tcps_rcvshort	netinet/tcp_var.h	/^	u_long	tcps_rcvshort;		\/* packets received too short *\/$/;"	m	struct:tcpstat
tcps_rcvtotal	netinet/tcp_var.h	/^	u_long	tcps_rcvtotal;		\/* total packets received *\/$/;"	m	struct:tcpstat
tcps_rcvwinprobe	netinet/tcp_var.h	/^	u_long	tcps_rcvwinprobe;	\/* rcvd window probe packets *\/$/;"	m	struct:tcpstat
tcps_rcvwinupd	netinet/tcp_var.h	/^	u_long	tcps_rcvwinupd;		\/* rcvd window update packets *\/$/;"	m	struct:tcpstat
tcps_rexmttimeo	netinet/tcp_var.h	/^	u_long	tcps_rexmttimeo;	\/* retransmit timeouts *\/$/;"	m	struct:tcpstat
tcps_rttupdated	netinet/tcp_var.h	/^	u_long	tcps_rttupdated;	\/* times we succeeded *\/$/;"	m	struct:tcpstat
tcps_segstimed	netinet/tcp_var.h	/^	u_long	tcps_segstimed;		\/* segs where we tried to get rtt *\/$/;"	m	struct:tcpstat
tcps_sndacks	netinet/tcp_var.h	/^	u_long	tcps_sndacks;		\/* ack-only packets sent *\/$/;"	m	struct:tcpstat
tcps_sndbyte	netinet/tcp_var.h	/^	u_long	tcps_sndbyte;		\/* data bytes sent *\/$/;"	m	struct:tcpstat
tcps_sndctrl	netinet/tcp_var.h	/^	u_long	tcps_sndctrl;		\/* control (SYN|FIN|RST) packets sent *\/$/;"	m	struct:tcpstat
tcps_sndpack	netinet/tcp_var.h	/^	u_long	tcps_sndpack;		\/* data packets sent *\/$/;"	m	struct:tcpstat
tcps_sndprobe	netinet/tcp_var.h	/^	u_long	tcps_sndprobe;		\/* window probes sent *\/$/;"	m	struct:tcpstat
tcps_sndrexmitbyte	netinet/tcp_var.h	/^	u_long	tcps_sndrexmitbyte;	\/* data bytes retransmitted *\/$/;"	m	struct:tcpstat
tcps_sndrexmitpack	netinet/tcp_var.h	/^	u_long	tcps_sndrexmitpack;	\/* data packets retransmitted *\/$/;"	m	struct:tcpstat
tcps_sndtotal	netinet/tcp_var.h	/^	u_long	tcps_sndtotal;		\/* total packets sent *\/$/;"	m	struct:tcpstat
tcps_sndurg	netinet/tcp_var.h	/^	u_long	tcps_sndurg;		\/* packets sent with URG only *\/$/;"	m	struct:tcpstat
tcps_sndwinup	netinet/tcp_var.h	/^	u_long	tcps_sndwinup;		\/* window update-only packets sent *\/$/;"	m	struct:tcpstat
tcps_timeoutdrop	netinet/tcp_var.h	/^	u_long	tcps_timeoutdrop;	\/* conn. dropped in rxmt timeout *\/$/;"	m	struct:tcpstat
tcps_usedrtt	netinet/tcp_var.h	/^	u_long	tcps_usedrtt;		\/* times RTT initialized from route *\/$/;"	m	struct:tcpstat
tcps_usedrttvar	netinet/tcp_var.h	/^	u_long	tcps_usedrttvar;	\/* times RTTVAR initialized from rt *\/$/;"	m	struct:tcpstat
tcps_usedssthresh	netinet/tcp_var.h	/^	u_long	tcps_usedssthresh;	\/* times ssthresh initialized from rt*\/$/;"	m	struct:tcpstat
tcpstat	netinet/tcp_input.c	/^struct	tcpstat tcpstat;$/;"	v	typeref:struct:tcpstat
tcpstat	netinet/tcp_var.h	/^struct	tcpstat {$/;"	s
tcpstates	netinet/tcp_fsm.h	/^char *tcpstates[] = {$/;"	v
tcptimers	netinet/tcp_timer.h	/^static char *tcptimers[] =$/;"	v
td	sys/sysctl.h	/^	struct thread	*td;		\/* used for access checking *\/$/;"	m	struct:sysctl_req	typeref:struct:sysctl_req::thread
td_act	netinet/tcp_debug.h	/^	short	td_act;$/;"	m	struct:tcp_debug
td_cb	netinet/tcp_debug.h	/^	struct	tcpcb td_cb;$/;"	m	struct:tcp_debug	typeref:struct:tcp_debug::tcpcb
td_ostate	netinet/tcp_debug.h	/^	short	td_ostate;$/;"	m	struct:tcp_debug
td_req	netinet/tcp_debug.h	/^	short	td_req;$/;"	m	struct:tcp_debug
td_tcb	netinet/tcp_debug.h	/^	caddr_t	td_tcb;$/;"	m	struct:tcp_debug
td_ti	netinet/tcp_debug.h	/^	struct	tcpiphdr td_ti;$/;"	m	struct:tcp_debug	typeref:struct:tcp_debug::tcpiphdr
td_time	netinet/tcp_debug.h	/^	uint32_t	td_time;	\/* network format *\/$/;"	m	struct:tcp_debug
tftpACK	lib/tftpDriver.c	/^    struct tftpACK {$/;"	s	union:tftpPacket	file:
tftpACK	lib/tftpDriver.c	/^    } tftpACK;$/;"	m	union:tftpPacket	typeref:struct:tftpPacket::tftpACK	file:
tftpDATA	lib/tftpDriver.c	/^    struct tftpDATA {$/;"	s	union:tftpPacket	file:
tftpDATA	lib/tftpDriver.c	/^    } tftpDATA;$/;"	m	union:tftpPacket	typeref:struct:tftpPacket::tftpDATA	file:
tftpERROR	lib/tftpDriver.c	/^    struct tftpERROR {$/;"	s	union:tftpPacket	file:
tftpERROR	lib/tftpDriver.c	/^    } tftpERROR;$/;"	m	union:tftpPacket	typeref:struct:tftpPacket::tftpERROR	file:
tftpErrno	lib/tftpDriver.c	/^tftpErrno (struct tftpStream *tp)$/;"	f	file:
tftpPacket	lib/tftpDriver.c	/^union tftpPacket {$/;"	u	file:
tftpRWRQ	lib/tftpDriver.c	/^    struct tftpRWRQ {$/;"	s	union:tftpPacket	file:
tftpRWRQ	lib/tftpDriver.c	/^    } tftpRWRQ;$/;"	m	union:tftpPacket	typeref:struct:tftpPacket::tftpRWRQ	file:
tftpStream	lib/tftpDriver.c	/^struct tftpStream {$/;"	s	file:
tftpStreams	lib/tftpDriver.c	/^  struct tftpStream ** volatile tftpStreams;$/;"	m	struct:tftpfs_info_s	file:
tftp_mutex	lib/tftpDriver.c	/^  rtems_id tftp_mutex;$/;"	m	struct:tftpfs_info_s	file:
tftpfs_info_iop	lib/tftpDriver.c	161;"	d	file:
tftpfs_info_mount_table	lib/tftpDriver.c	159;"	d	file:
tftpfs_info_pathloc	lib/tftpDriver.c	160;"	d	file:
tftpfs_info_s	lib/tftpDriver.c	/^typedef struct tftpfs_info_s {$/;"	s	file:
tftpfs_info_t	lib/tftpDriver.c	/^} tftpfs_info_t;$/;"	t	typeref:struct:tftpfs_info_s	file:
th_ack	netinet/tcp.h	/^	tcp_seq	th_ack;			\/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	netinet/tcp.h	/^	u_short	th_dport;		\/* destination port *\/$/;"	m	struct:tcphdr
th_flags	netinet/tcp.h	/^	u_char	th_flags;$/;"	m	struct:tcphdr
th_off	netinet/tcp.h	/^		th_off:4;		\/* data offset *\/$/;"	m	struct:tcphdr
th_off	netinet/tcp.h	/^	u_int	th_off:4,		\/* data offset *\/$/;"	m	struct:tcphdr
th_seq	netinet/tcp.h	/^	tcp_seq	th_seq;			\/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	netinet/tcp.h	/^	u_short	th_sport;		\/* source port *\/$/;"	m	struct:tcphdr
th_sum	netinet/tcp.h	/^	u_short	th_sum;			\/* checksum *\/$/;"	m	struct:tcphdr
th_urp	netinet/tcp.h	/^	u_short	th_urp;			\/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	netinet/tcp.h	/^	u_short	th_win;			\/* window *\/$/;"	m	struct:tcphdr
th_x2	netinet/tcp.h	/^		th_x2:4;		\/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	netinet/tcp.h	/^	u_int	th_x2:4,		\/* (unused) *\/$/;"	m	struct:tcphdr
the_networkSemaphore	rtems/rtems_glue.c	/^Semaphore_Control   *the_networkSemaphore;$/;"	v
this_should_never_be_referenced	sys/proc.h	/^	int	this_should_never_be_referenced;$/;"	m	struct:proc
ti_ack	netinet/tcpip.h	58;"	d
ti_dport	netinet/tcpip.h	56;"	d
ti_dst	netinet/tcpip.h	54;"	d
ti_flags	netinet/tcpip.h	61;"	d
ti_i	netinet/tcpip.h	/^	struct	ipovly ti_i;		\/* overlaid ip structure *\/$/;"	m	struct:tcpiphdr	typeref:struct:tcpiphdr::ipovly
ti_len	netinet/tcpip.h	52;"	d
ti_next	netinet/tcpip.h	48;"	d
ti_off	netinet/tcpip.h	60;"	d
ti_pr	netinet/tcpip.h	51;"	d
ti_prev	netinet/tcpip.h	49;"	d
ti_seq	netinet/tcpip.h	57;"	d
ti_sport	netinet/tcpip.h	55;"	d
ti_src	netinet/tcpip.h	53;"	d
ti_sum	netinet/tcpip.h	63;"	d
ti_t	netinet/tcpip.h	/^	struct	tcphdr ti_t;		\/* tcp header *\/$/;"	m	struct:tcpiphdr	typeref:struct:tcpiphdr::tcphdr
ti_urp	netinet/tcpip.h	64;"	d
ti_win	netinet/tcpip.h	62;"	d
ti_x1	netinet/tcpip.h	50;"	d
ti_x2	netinet/tcpip.h	59;"	d
tick	rtems/rtems_bsdnet_internal.h	68;"	d
ticksWhenCalloutsLastChecked	rtems/rtems_glue.c	/^static rtems_interval	ticksWhenCalloutsLastChecked;$/;"	v	file:
timeo	nfsclient/nfsargs.h	/^	int		timeo;		\/* initial timeout in .1 secs *\/$/;"	m	struct:nfs_args
timeout	lib/ftpfs.c	/^  struct timeval timeout;$/;"	m	struct:__anon16	typeref:struct:__anon16::timeval	file:
timeout	rtems/rtems_bsdnet_internal.h	131;"	d
timeout_func_t	sys/systm.h	/^typedef timeout_t *timeout_func_t; \/* a pointer to this type *\/$/;"	t
timeout_t	sys/systm.h	/^typedef void (timeout_t)(void *); \/* actual timeout function type *\/$/;"	t
timestamp	netinet/ip_fw.h	/^    long timestamp;			\/* timestamp (tv_sec) of last match *\/$/;"	m	struct:ip_fw
timestamp	rtems/rtems_bsdnet.h	/^struct timestamp {$/;"	s
to_cc	netinet/tcp_var.h	/^	tcp_cc	to_cc;		\/* holds CC or CCnew *\/$/;"	m	struct:tcpopt
to_ccecho	netinet/tcp_var.h	/^	tcp_cc	to_ccecho;$/;"	m	struct:tcpopt
to_flags	netinet/tcp_var.h	/^	u_long		to_flags;	\/* which options are present *\/$/;"	m	struct:tcpopt
to_tsecr	netinet/tcp_var.h	/^	u_int32_t	to_tsecr;$/;"	m	struct:tcpopt
to_tsval	netinet/tcp_var.h	/^	u_int32_t	to_tsval;$/;"	m	struct:tcpopt
transmit	net/if_ppp.h	/^	int	transmit;$/;"	m	struct:ppp_option_data
transmit_timestamp	rtems/rtems_bsdnet.h	/^	struct timestamp	transmit_timestamp;$/;"	m	struct:ntpPacketSmall	typeref:struct:ntpPacketSmall::timestamp
tryServer	lib/rtems_bsdnet_ntp.c	/^tryServer (int i, int s, rtems_bsdnet_ntp_callback_t callback, void *usr_data)$/;"	f	file:
ts_recent	netinet/tcp_var.h	/^	u_long	ts_recent;		\/* timestamp echo data *\/$/;"	m	struct:tcpcb
ts_recent_age	netinet/tcp_var.h	/^	u_long	ts_recent_age;		\/* when last updated *\/$/;"	m	struct:tcpcb
tstate	net/slcompress.h	/^	struct cstate tstate[MAX_STATES];	\/* xmit connection states *\/$/;"	m	struct:slcompress	typeref:struct:slcompress::cstate
ttl	arpa/nameser.h	/^	u_int32_t	ttl;$/;"	m	struct:__ns_rr
ttydefchars	sys/ttydefaults.h	/^static cc_t	ttydefchars[NCCS] = {$/;"	v
txdr_hyper	nfs/xdr_subs.h	81;"	d
txdr_nfsv2time	nfs/xdr_subs.h	61;"	d
txdr_nfsv3time	nfs/xdr_subs.h	73;"	d
txdr_unsigned	nfs/xdr_subs.h	52;"	d
type	arpa/nameser.h	/^	u_int16_t	type;$/;"	m	struct:__ns_rr
type	libc/gethostnamadr.c	/^  enum service_type type;$/;"	m	struct:__anon27	typeref:enum:__anon27::service_type	file:
type	libc/getnetnamadr.c	/^  enum service_type type;$/;"	m	struct:__anon32	typeref:enum:__anon32::service_type	file:
type_frmr	net/if_llc.h	/^	    } __packed type_frmr;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon44
type_i	net/if_llc.h	/^	    } __packed type_i;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon42
type_raw	net/if_llc.h	/^	    } __packed type_raw;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon46
type_s	net/if_llc.h	/^	    } __packed type_s;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon43
type_snap	net/if_llc.h	/^	    } __packed type_snap;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon45
type_u	net/if_llc.h	/^	    } __packed type_u;$/;"	m	union:llc::__anon40	typeref:struct:llc::__anon40::__anon41
typenames	arpa/ftp.h	/^char *typenames[] =  {"0", "ASCII", "EBCDIC", "Image", "Local" };$/;"	v
u_quad_t	rtems/rtems_bsdnet_internal.h	/^typedef	u_int64_t	u_quad_t;	\/* quads *\/$/;"	t
ucred	sys/ucred.h	/^struct ucred {$/;"	s
udata	sys/kernel.h	/^	void		*udata;			\/* multiplexer\/argument *\/$/;"	m	struct:sysinit
udb	netinet/udp_usrreq.c	/^struct	inpcbhead udb;		\/* from udp_var.h *\/$/;"	v	typeref:struct:inpcbhead
udbinfo	netinet/udp_usrreq.c	/^struct	inpcbinfo udbinfo;$/;"	v	typeref:struct:inpcbinfo
udp_ctlinput	netinet/udp_usrreq.c	/^udp_ctlinput(int cmd, struct sockaddr *sa, void *vip)$/;"	f
udp_detach	netinet/udp_usrreq.c	/^udp_detach(struct inpcb *inp)$/;"	f	file:
udp_in	netinet/udp_usrreq.c	/^static struct	sockaddr_in udp_in = { sizeof(udp_in), AF_INET, 0, {0}, {0} };$/;"	v	typeref:struct:sockaddr_in	file:
udp_init	netinet/udp_usrreq.c	/^udp_init(void)$/;"	f
udp_input	netinet/udp_usrreq.c	/^udp_input(struct mbuf *m, int iphlen)$/;"	f
udp_notify	netinet/udp_usrreq.c	/^udp_notify(struct inpcb *inp, int errnum)$/;"	f	file:
udp_output	netinet/udp_usrreq.c	/^udp_output(struct inpcb *inp, struct mbuf *m, struct mbuf *addr,$/;"	f	file:
udp_pcblist	netinet/udp_usrreq.c	/^udp_pcblist(SYSCTL_HANDLER_ARGS)$/;"	f	file:
udp_recvspace	netinet/udp_usrreq.c	/^static u_long	udp_recvspace = 40 * (1024 + sizeof(struct sockaddr_in));$/;"	v	file:
udp_rx_buf_size	rtems/rtems_bsdnet.h	/^	unsigned long		udp_rx_buf_size;$/;"	m	struct:rtems_bsdnet_config
udp_sendspace	netinet/udp_usrreq.c	/^static u_long	udp_sendspace = 9216;		\/* really max datagram size *\/$/;"	v	file:
udp_tx_buf_size	rtems/rtems_bsdnet.h	/^	unsigned long		udp_tx_buf_size;$/;"	m	struct:rtems_bsdnet_config
udp_usrreq	netinet/udp_usrreq.c	/^udp_usrreq(struct socket *so, int req, struct mbuf *m, struct mbuf *addr,$/;"	f
udpcksum	netinet/udp_usrreq.c	/^static int	udpcksum = 0;		\/* XXX *\/$/;"	v	file:
udpcksum	netinet/udp_usrreq.c	/^static int	udpcksum = 1;$/;"	v	file:
udphdr	netinet/udp.h	/^struct udphdr {$/;"	s
udpiphdr	netinet/udp_var.h	/^struct	udpiphdr {$/;"	s
udpps_pcbcachemiss	netinet/udp_var.h	/^	u_long	udpps_pcbcachemiss;	\/* input packets missing pcb cache *\/$/;"	m	struct:udpstat
udpps_pcbhashmiss	netinet/udp_var.h	/^	u_long	udpps_pcbhashmiss;	\/* input packets not for hashed pcb *\/$/;"	m	struct:udpstat
udps_badlen	netinet/udp_var.h	/^	u_long	udps_badlen;		\/* data length larger than packet *\/$/;"	m	struct:udpstat
udps_badsum	netinet/udp_var.h	/^	u_long	udps_badsum;		\/* checksum error *\/$/;"	m	struct:udpstat
udps_fullsock	netinet/udp_var.h	/^	u_long	udps_fullsock;		\/* not delivered, input socket full *\/$/;"	m	struct:udpstat
udps_hdrops	netinet/udp_var.h	/^	u_long	udps_hdrops;		\/* packet shorter than header *\/$/;"	m	struct:udpstat
udps_ipackets	netinet/udp_var.h	/^	u_long	udps_ipackets;		\/* total input packets *\/$/;"	m	struct:udpstat
udps_noport	netinet/udp_var.h	/^	u_long	udps_noport;		\/* no socket on port *\/$/;"	m	struct:udpstat
udps_noportbcast	netinet/udp_var.h	/^	u_long	udps_noportbcast;	\/* of above, arrived as broadcast *\/$/;"	m	struct:udpstat
udps_opackets	netinet/udp_var.h	/^	u_long	udps_opackets;		\/* total output packets *\/$/;"	m	struct:udpstat
udpstat	netinet/udp_usrreq.c	/^       struct	udpstat udpstat;	\/* from udp_var.h *\/$/;"	v	typeref:struct:udpstat
udpstat	netinet/udp_var.h	/^struct	udpstat {$/;"	s
uh_dport	netinet/udp.h	/^	u_short	uh_dport;		\/* destination port *\/$/;"	m	struct:udphdr
uh_sport	netinet/udp.h	/^	u_short	uh_sport;		\/* source port *\/$/;"	m	struct:udphdr
uh_sum	netinet/udp.h	/^	u_short	uh_sum;			\/* udp checksum *\/$/;"	m	struct:udphdr
uh_ulen	netinet/udp.h	/^	u_short	uh_ulen;		\/* udp length *\/$/;"	m	struct:udphdr
ui_dport	netinet/udp_var.h	55;"	d
ui_dst	netinet/udp_var.h	53;"	d
ui_i	netinet/udp_var.h	/^	struct	ipovly ui_i;		\/* overlaid ip structure *\/$/;"	m	struct:udpiphdr	typeref:struct:udpiphdr::ipovly
ui_len	netinet/udp_var.h	51;"	d
ui_next	netinet/udp_var.h	47;"	d
ui_pr	netinet/udp_var.h	50;"	d
ui_prev	netinet/udp_var.h	48;"	d
ui_sport	netinet/udp_var.h	54;"	d
ui_src	netinet/udp_var.h	52;"	d
ui_sum	netinet/udp_var.h	57;"	d
ui_u	netinet/udp_var.h	/^	struct	udphdr ui_u;		\/* udp header *\/$/;"	m	struct:udpiphdr	typeref:struct:udpiphdr::udphdr
ui_ulen	netinet/udp_var.h	56;"	d
ui_x1	netinet/udp_var.h	49;"	d
uiomove	kern/kern_subr.c	/^uiomove(void *cp, int n, struct uio *uio)$/;"	f
ulmax	sys/libkern.h	/^static __inline u_long ulmax(u_long a, u_long b) { return (a > b ? a : b); }$/;"	f
ulmin	sys/libkern.h	/^static __inline u_long ulmin(u_long a, u_long b) { return (a < b ? a : b); }$/;"	f
un	rtems/rtems_showroute.c	/^	} un;$/;"	m	struct:rinfo	typeref:union:rinfo::__anon25	file:
unc_bytes	net/ppp_defs.h	/^    unsigned int unc_bytes;	\/* total uncompressed bytes *\/$/;"	m	struct:compstat
unc_packets	net/ppp_defs.h	/^    unsigned int unc_packets;	\/* total uncompressed packets *\/$/;"	m	struct:compstat
unit	netinet/ip_fw.h	/^	    short unit;		\/* -1 means match any unit *\/$/;"	m	struct:ip_fw_if::__anon2
unused	arpa/nameser_compat.h	/^	unsigned	unused :1;	\/* unused bits (MBZ as of 4.9.3a3) *\/$/;"	m	struct:__anon47
unused	resolv.h	/^	char	unused[3];$/;"	m	struct:__res_state
unused1	netinet/ip_mroute.h	/^    u_long	    unused1;$/;"	m	struct:igmpmsg
unused2	netinet/ip_mroute.h	/^    u_long	    unused2;$/;"	m	struct:igmpmsg
unused3	netinet/ip_mroute.h	/^    u_char	    unused3;$/;"	m	struct:igmpmsg
upcall_data	netinet/ip_mroute.c	/^u_long upcall_data[51];$/;"	v
updating	netinet/in_rmx.c	/^	int updating;$/;"	m	struct:rtqk_arg	file:
use_poll	libc/res_send.c	/^static int use_poll = 0;$/;"	v	file:
use_poll	libc/res_send.c	/^static int use_poll = 1;	\/* adapt to poll() syscall availability *\/$/;"	v	file:
useloopback	netinet/if_ether.c	/^static int	useloopback = 1; \/* use loopback interface for local traffic *\/$/;"	v	file:
user	lib/ftpfs.c	/^  const char *user;$/;"	m	struct:__anon15	file:
userland_sysctl	kern/kern_sysctl.c	/^userland_sysctl(struct thread *td, int *name, u_int namelen, void *old,$/;"	f
v_bytes_in	netinet/ip_mroute.h	/^    u_long		v_bytes_in;	\/* # bytes in on interface	     *\/$/;"	m	struct:vif
v_bytes_out	netinet/ip_mroute.h	/^    u_long		v_bytes_out;	\/* # bytes out on interface	     *\/$/;"	m	struct:vif
v_flags	netinet/ip_mroute.h	/^    u_char   		v_flags;     	\/* VIFF_ flags defined above         *\/$/;"	m	struct:vif
v_ifp	netinet/ip_mroute.h	/^    struct ifnet       *v_ifp;	     	\/* pointer to interface              *\/$/;"	m	struct:vif	typeref:struct:vif::ifnet
v_lcl_addr	netinet/ip_mroute.h	/^    struct in_addr 	v_lcl_addr;   	\/* local interface address           *\/$/;"	m	struct:vif	typeref:struct:vif::in_addr
v_pkt_in	netinet/ip_mroute.h	/^    u_long		v_pkt_in;	\/* # pkts in on interface            *\/$/;"	m	struct:vif
v_pkt_out	netinet/ip_mroute.h	/^    u_long		v_pkt_out;	\/* # pkts out on interface           *\/$/;"	m	struct:vif
v_rate_limit	netinet/ip_mroute.h	/^    u_int      		v_rate_limit; 	\/* max rate			     *\/$/;"	m	struct:vif
v_rmt_addr	netinet/ip_mroute.h	/^    struct in_addr 	v_rmt_addr;   	\/* remote address (tunnels only)     *\/$/;"	m	struct:vif	typeref:struct:vif::in_addr
v_route	netinet/ip_mroute.h	/^    struct route	v_route;	\/* cached route if this is a tunnel *\/$/;"	m	struct:vif	typeref:struct:vif::route
v_rsvp_on	netinet/ip_mroute.h	/^    u_int		v_rsvp_on;	\/* RSVP listening on this vif *\/$/;"	m	struct:vif
v_rsvpd	netinet/ip_mroute.h	/^    struct socket      *v_rsvpd;	\/* RSVP daemon socket *\/$/;"	m	struct:vif	typeref:struct:vif::socket
v_tbf	netinet/ip_mroute.h	/^    struct tbf 	       *v_tbf;       	\/* token bucket structure at intf.   *\/$/;"	m	struct:vif	typeref:struct:vif::tbf
v_threshold	netinet/ip_mroute.h	/^    u_char   		v_threshold;	\/* min ttl required to forward on vif*\/$/;"	m	struct:vif
val	sys/mount.h	/^typedef struct fsid { int32_t val[2]; } fsid_t;	\/* filesystem id type *\/$/;"	m	struct:fsid
validlen	sys/sysctl.h	/^	size_t		validlen;$/;"	m	struct:sysctl_req
vc	libc/res_send.c	/^static int vc = 0;		\/* is the socket a virtual circuit? *\/$/;"	v	file:
vend	nfs/bootp_subr.c	/^  unsigned char vend[256];$/;"	m	struct:bootp_packet	file:
vend	rtems/rtems_dhcp.c	/^  unsigned char  vend[312];$/;"	m	struct:dhcp_packet	file:
verbose	lib/ftpfs.c	/^  bool verbose;$/;"	m	struct:__anon16	file:
vif	netinet/ip_mroute.h	/^struct vif {$/;"	s
vifbitmap_t	netinet/ip_mroute.h	/^typedef u_long vifbitmap_t;$/;"	t
vifc_flags	netinet/ip_mroute.h	/^	u_char	vifc_flags;     	\/* VIFF_ flags defined below *\/$/;"	m	struct:vifctl
vifc_lcl_addr	netinet/ip_mroute.h	/^	struct	in_addr vifc_lcl_addr;	\/* local interface address *\/$/;"	m	struct:vifctl	typeref:struct:vifctl::in_addr
vifc_rate_limit	netinet/ip_mroute.h	/^	u_int	vifc_rate_limit;	\/* max rate *\/$/;"	m	struct:vifctl
vifc_rmt_addr	netinet/ip_mroute.h	/^	struct	in_addr vifc_rmt_addr;	\/* remote address (tunnels only) *\/$/;"	m	struct:vifctl	typeref:struct:vifctl::in_addr
vifc_threshold	netinet/ip_mroute.h	/^	u_char	vifc_threshold; 	\/* min ttl required to forward on vif *\/$/;"	m	struct:vifctl
vifc_vifi	netinet/ip_mroute.h	/^	vifi_t	vifc_vifi;	    	\/* the index of the vif to be added *\/$/;"	m	struct:vifctl
vifctl	netinet/ip_mroute.h	/^struct vifctl {$/;"	s
vifi	netinet/ip_mroute.h	/^    vifi_t vifi;		\/* vif number				*\/$/;"	m	struct:sioc_vif_req
vifi_t	netinet/ip_mroute.h	/^typedef u_short vifi_t;		\/* type of a vif index *\/$/;"	t
viftable	netinet/ip_mroute.c	/^static struct vif	viftable[MAXVIFS];$/;"	v	typeref:struct:vif	file:
vj	net/ppp_defs.h	/^    struct vjstat vj;		\/* VJ header compression statistics *\/$/;"	m	struct:ppp_stats	typeref:struct:ppp_stats::vjstat
vjs_compressed	net/ppp_defs.h	/^    unsigned int vjs_compressed; \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/ppp_defs.h	/^    unsigned int vjs_compressedin; \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/ppp_defs.h	/^    unsigned int vjs_errorin;	\/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/ppp_defs.h	/^    unsigned int vjs_misses;	\/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/ppp_defs.h	/^    unsigned int vjs_packets;	\/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/ppp_defs.h	/^    unsigned int vjs_searches;	\/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/ppp_defs.h	/^    unsigned int vjs_tossed;	\/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/ppp_defs.h	/^    unsigned int vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/ppp_defs.h	/^struct vjstat {$/;"	s
vm_inherit_t	vm/vm.h	/^typedef char vm_inherit_t;	\/* XXX: inheritance codes *\/$/;"	t
vm_map_entry_t	vm/vm.h	/^typedef struct vm_map_entry *vm_map_entry_t;$/;"	t	typeref:struct:vm_map_entry
vm_map_object_t	vm/vm.h	/^typedef union vm_map_object vm_map_object_t;$/;"	t	typeref:union:vm_map_object
vm_map_t	vm/vm.h	/^typedef struct vm_map *vm_map_t;$/;"	t	typeref:struct:vm_map
vm_object_t	vm/vm.h	/^typedef struct vm_object *vm_object_t;$/;"	t	typeref:struct:vm_object
vm_offset_t	rtems/rtems_bsdnet_internal.h	/^typedef	unsigned int		vm_offset_t;$/;"	t
vm_ooffset_t	rtems/rtems_bsdnet_internal.h	/^typedef	long long		vm_ooffset_t;$/;"	t
vm_page_t	vm/vm.h	/^typedef struct vm_page *vm_page_t;$/;"	t	typeref:struct:vm_page
vm_pindex_t	rtems/rtems_bsdnet_internal.h	/^typedef	unsigned int		vm_pindex_t;$/;"	t
vm_prot_t	vm/vm.h	/^typedef u_char vm_prot_t;	\/* protection codes *\/$/;"	t
vm_size_t	rtems/rtems_bsdnet_internal.h	/^typedef	unsigned int		vm_size_t;$/;"	t
vsyslog	lib/syslog.c	/^vsyslog (int pri, const char *fmt, va_list ap)$/;"	f
w_arg	net/rtsock.c	/^	int	w_op, w_arg;$/;"	m	struct:walkarg	file:
w_op	net/rtsock.c	/^	int	w_op, w_arg;$/;"	m	struct:walkarg	file:
w_req	net/rtsock.c	/^	struct sysctl_req *w_req;$/;"	m	struct:walkarg	typeref:struct:walkarg::sysctl_req	file:
w_tmem	net/rtsock.c	/^	caddr_t	w_tmem;$/;"	m	struct:walkarg	file:
w_tmemsize	net/rtsock.c	/^	int	w_tmemsize;$/;"	m	struct:walkarg	file:
wakeup	rtems/rtems_glue.c	/^wakeup (void *p)$/;"	f
walkarg	net/rtsock.c	/^struct walkarg {$/;"	s	file:
walktree_f_t	net/radix.h	/^typedef int walktree_f_t(struct radix_node *, void *);$/;"	t
where	kern/kern_sysctl.c	/^	char	*where;$/;"	m	struct:getkerninfo_args	file:
window_x2	net/if_llc.h	/^		u_int8_t window_x2;$/;"	m	struct:llc::__anon40::__anon41
write	lib/ftpfs.c	/^  bool write;$/;"	m	struct:__anon15	file:
writing	lib/tftpDriver.c	/^    int     writing;$/;"	m	struct:tftpStream	file:
wrong_if	netinet/ip_mroute.h	/^    u_long wrong_if;$/;"	m	struct:sioc_sg_req
wsize	nfsclient/nfsargs.h	/^	int		wsize;		\/* write size in bytes *\/$/;"	m	struct:nfs_args
x_save_spl	kern/uipc_domain.c	/^static int	x_save_spl;			\/* used by kludge*\/$/;"	v	file:
xbuf_count	rtems/rtems_bsdnet.h	/^	int		xbuf_count;$/;"	m	struct:rtems_bsdnet_ifconfig
xchg	netinet/tcp_subr.c	205;"	d	file:
xchg	netinet/tcp_subr.c	208;"	d	file:
xi_alignment_hack	netinet/in_pcb.h	/^	u_int64_t	xi_alignment_hack;$/;"	m	struct:xinpcb
xi_inp	netinet/in_pcb.h	/^	struct	inpcb xi_inp;$/;"	m	struct:xinpcb	typeref:struct:xinpcb::inpcb
xi_len	netinet/in_pcb.h	/^	size_t	xi_len;		\/* length of this structure *\/$/;"	m	struct:xinpcb
xid	nfs/bootp_subr.c	/^  u_int32_t xid;$/;"	m	struct:bootp_packet	file:
xid	rtems/rtems_dhcp.c	/^  u_int32_t      xid;$/;"	m	struct:dhcp_packet	file:
xig_count	netinet/in_pcb.h	/^	u_int	xig_count;	\/* number of PCBs at this time *\/$/;"	m	struct:xinpgen
xig_gen	netinet/in_pcb.h	/^	inp_gen_t xig_gen;	\/* generation count at this time *\/$/;"	m	struct:xinpgen
xig_len	netinet/in_pcb.h	/^	size_t	xig_len;	\/* length of this structure *\/$/;"	m	struct:xinpgen
xig_sogen	netinet/in_pcb.h	/^	so_gen_t xig_sogen;	\/* socket generation count at this time *\/$/;"	m	struct:xinpgen
xinpcb	netinet/in_pcb.h	/^struct	xinpcb {$/;"	s
xinpgen	netinet/in_pcb.h	/^struct	xinpgen {$/;"	s
xmit_idle	net/ppp_defs.h	/^    time_t xmit_idle;		\/* time since last NP packet sent *\/$/;"	m	struct:ppp_idle
xmt_vif	netinet/ip_mroute.h	/^    vifi_t		xmt_vif;	\/* Saved copy of imo_multicast_vif  *\/$/;"	m	struct:rtdetq
xt_inp	netinet/tcp_var.h	/^	struct	inpcb	xt_inp;$/;"	m	struct:xtcpcb	typeref:struct:xtcpcb::inpcb
xt_len	netinet/tcp_var.h	/^	size_t	xt_len;$/;"	m	struct:xtcpcb
xt_tp	netinet/tcp_var.h	/^	struct	tcpcb	xt_tp;$/;"	m	struct:xtcpcb	typeref:struct:xtcpcb::tcpcb
xtcpcb	netinet/tcp_var.h	/^struct	xtcpcb {$/;"	s
xtob	libc/nsap_addr.c	/^xtob($/;"	f	file:
yiaddr	nfs/bootp_subr.c	/^  struct in_addr yiaddr;$/;"	m	struct:bootp_packet	typeref:struct:bootp_packet::in_addr	file:
yiaddr	rtems/rtems_dhcp.c	/^  struct in_addr yiaddr;$/;"	m	struct:dhcp_packet	typeref:struct:dhcp_packet::in_addr	file:
yp_domain	libc/getservent.c	/^static char *yp_domain = NULL;$/;"	v	file:
z_class	libc/res_update.c	/^	int16_t		z_class;$/;"	m	struct:zonegrp	file:
z_next	libc/res_update.c	/^	struct zonegrp *z_next;$/;"	m	struct:zonegrp	typeref:struct:zonegrp::zonegrp	file:
z_ns	libc/res_update.c	/^	struct ns1 	z_ns[NSMAX];$/;"	m	struct:zonegrp	typeref:struct:zonegrp::ns1	file:
z_nscount	libc/res_update.c	/^	int		z_nscount;$/;"	m	struct:zonegrp	file:
z_origin	libc/res_update.c	/^	char 		z_origin[MAXDNAME];$/;"	m	struct:zonegrp	file:
z_rr	libc/res_update.c	/^	ns_updrec *	z_rr;$/;"	m	struct:zonegrp	file:
z_soardata	libc/res_update.c	/^	char		z_soardata[MAXDNAME + 5 * INT32SZ];$/;"	m	struct:zonegrp	file:
zero_entry	netinet/ip_fw.c	/^zero_entry(struct mbuf *m)$/;"	f	file:
zeroin_addr	netinet/in_pcb.c	/^struct	in_addr zeroin_addr;$/;"	v	typeref:struct:in_addr
zonegrp	libc/res_update.c	/^struct zonegrp {$/;"	s	file:
